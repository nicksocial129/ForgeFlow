{"ast":null,"code":"import{createPortal}from'react-dom';import{useState,useEffect}from'react';import{useDispatch}from'react-redux';import{enqueueSnackbar as enqueueSnackbarAction,closeSnackbar as closeSnackbarAction}from'store/actions';import parser from'html-react-parser';// Material\nimport{Button,Dialog,DialogActions,DialogContent,DialogTitle,Box,Stack,OutlinedInput,Typography}from'@mui/material';// Project imports\nimport{StyledButton}from'ui-component/button/StyledButton';import ConfirmDialog from'ui-component/dialog/ConfirmDialog';import CredentialInputHandler from'./CredentialInputHandler';// Icons\nimport{IconX}from'@tabler/icons';// API\nimport credentialsApi from'api/credentials';// Hooks\nimport useApi from'hooks/useApi';// utils\nimport useNotifier from'utils/useNotifier';// const\nimport{baseURL,REDACTED_CREDENTIAL_VALUE}from'store/constant';import{HIDE_CANVAS_DIALOG,SHOW_CANVAS_DIALOG}from'store/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AddEditCredentialDialog=_ref=>{let{show,dialogProps,onCancel,onConfirm}=_ref;const portalElement=document.getElementById('portal');const dispatch=useDispatch();// ==============================|| Snackbar ||============================== //\nuseNotifier();const enqueueSnackbar=function(){return dispatch(enqueueSnackbarAction(...arguments));};const closeSnackbar=function(){return dispatch(closeSnackbarAction(...arguments));};const getSpecificCredentialApi=useApi(credentialsApi.getSpecificCredential);const getSpecificComponentCredentialApi=useApi(credentialsApi.getSpecificComponentCredential);const[credential,setCredential]=useState({});const[name,setName]=useState('');const[credentialData,setCredentialData]=useState({});const[componentCredential,setComponentCredential]=useState({});useEffect(()=>{if(getSpecificCredentialApi.data){setCredential(getSpecificCredentialApi.data);if(getSpecificCredentialApi.data.name){setName(getSpecificCredentialApi.data.name);}if(getSpecificCredentialApi.data.plainDataObj){setCredentialData(getSpecificCredentialApi.data.plainDataObj);}getSpecificComponentCredentialApi.request(getSpecificCredentialApi.data.credentialName);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[getSpecificCredentialApi.data]);useEffect(()=>{if(getSpecificComponentCredentialApi.data){setComponentCredential(getSpecificComponentCredentialApi.data);}},[getSpecificComponentCredentialApi.data]);useEffect(()=>{if(dialogProps.type==='EDIT'&&dialogProps.data){// When credential dialog is opened from Credentials dashboard\ngetSpecificCredentialApi.request(dialogProps.data.id);}else if(dialogProps.type==='EDIT'&&dialogProps.credentialId){// When credential dialog is opened from node in canvas\ngetSpecificCredentialApi.request(dialogProps.credentialId);}else if(dialogProps.type==='ADD'&&dialogProps.credentialComponent){// When credential dialog is to add a new credential\nsetName('');setCredential({});setCredentialData({});setComponentCredential(dialogProps.credentialComponent);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[dialogProps]);useEffect(()=>{if(show)dispatch({type:SHOW_CANVAS_DIALOG});else dispatch({type:HIDE_CANVAS_DIALOG});return()=>dispatch({type:HIDE_CANVAS_DIALOG});},[show,dispatch]);const addNewCredential=async()=>{try{const obj={name,credentialName:componentCredential.name,plainDataObj:credentialData};const createResp=await credentialsApi.createCredential(obj);if(createResp.data){enqueueSnackbar({message:'New Credential added',options:{key:new Date().getTime()+Math.random(),variant:'success',action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onConfirm(createResp.data.id);}}catch(error){const errorData=typeof err==='string'?err:err.response.data||\"\".concat(err.response.status,\": \").concat(err.response.statusText);enqueueSnackbar({message:\"Failed to add new Credential: \".concat(errorData),options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onCancel();}};const saveCredential=async()=>{try{const saveObj={name,credentialName:componentCredential.name};let plainDataObj={};for(const key in credentialData){if(credentialData[key]!==REDACTED_CREDENTIAL_VALUE){plainDataObj[key]=credentialData[key];}}if(Object.keys(plainDataObj).length)saveObj.plainDataObj=plainDataObj;const saveResp=await credentialsApi.updateCredential(credential.id,saveObj);if(saveResp.data){enqueueSnackbar({message:'Credential saved',options:{key:new Date().getTime()+Math.random(),variant:'success',action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onConfirm(saveResp.data.id);}}catch(error){const errorData=error.response.data||\"\".concat(error.response.status,\": \").concat(error.response.statusText);enqueueSnackbar({message:\"Failed to save Credential: \".concat(errorData),options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onCancel();}};const component=show?/*#__PURE__*/_jsxs(Dialog,{fullWidth:true,maxWidth:\"sm\",open:show,onClose:onCancel,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{sx:{fontSize:'1rem'},id:\"alert-dialog-title\",children:componentCredential&&componentCredential.label&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:50,height:50,marginRight:10,borderRadius:'50%',backgroundColor:'white'},children:/*#__PURE__*/_jsx(\"img\",{style:{width:'100%',height:'100%',padding:7,borderRadius:'50%',objectFit:'contain'},alt:componentCredential.name,src:\"\".concat(baseURL,\"/api/v1/components-credentials-icon/\").concat(componentCredential.name)})}),componentCredential.label]})}),/*#__PURE__*/_jsxs(DialogContent,{children:[componentCredential&&componentCredential.description&&/*#__PURE__*/_jsx(Box,{sx:{pl:2,pr:2},children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'row',borderRadius:10,background:'rgb(254,252,191)',padding:10,marginTop:10,marginBottom:10},children:/*#__PURE__*/_jsx(\"span\",{style:{color:'rgb(116,66,16)'},children:parser(componentCredential.description)})})}),componentCredential&&componentCredential.label&&/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Stack,{sx:{position:'relative'},direction:\"row\",children:/*#__PURE__*/_jsxs(Typography,{variant:\"overline\",children:[\"Credential Name\",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\xA0*\"})]})}),/*#__PURE__*/_jsx(OutlinedInput,{id:\"credName\",type:\"string\",fullWidth:true,placeholder:componentCredential.label,value:name,name:\"name\",onChange:e=>setName(e.target.value)})]}),componentCredential&&componentCredential.inputs&&componentCredential.inputs.map((inputParam,index)=>/*#__PURE__*/_jsx(CredentialInputHandler,{inputParam:inputParam,data:credentialData},index))]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(StyledButton,{disabled:!name,variant:\"contained\",onClick:()=>dialogProps.type==='ADD'?addNewCredential():saveCredential(),children:dialogProps.confirmButtonName})}),/*#__PURE__*/_jsx(ConfirmDialog,{})]}):null;return/*#__PURE__*/createPortal(component,portalElement);};export default AddEditCredentialDialog;","map":{"version":3,"names":["createPortal","useState","useEffect","useDispatch","enqueueSnackbar","enqueueSnackbarAction","closeSnackbar","closeSnackbarAction","parser","Button","Dialog","DialogActions","DialogContent","DialogTitle","Box","Stack","OutlinedInput","Typography","StyledButton","ConfirmDialog","CredentialInputHandler","IconX","credentialsApi","useApi","useNotifier","baseURL","REDACTED_CREDENTIAL_VALUE","HIDE_CANVAS_DIALOG","SHOW_CANVAS_DIALOG","jsx","_jsx","jsxs","_jsxs","AddEditCredentialDialog","_ref","show","dialogProps","onCancel","onConfirm","portalElement","document","getElementById","dispatch","arguments","getSpecificCredentialApi","getSpecificCredential","getSpecificComponentCredentialApi","getSpecificComponentCredential","credential","setCredential","name","setName","credentialData","setCredentialData","componentCredential","setComponentCredential","data","plainDataObj","request","credentialName","type","id","credentialId","credentialComponent","addNewCredential","obj","createResp","createCredential","message","options","key","Date","getTime","Math","random","variant","action","style","color","onClick","children","error","errorData","err","response","concat","status","statusText","persist","saveCredential","saveObj","Object","keys","length","saveResp","updateCredential","component","fullWidth","maxWidth","open","onClose","sx","fontSize","label","display","flexDirection","alignItems","width","height","marginRight","borderRadius","backgroundColor","padding","objectFit","alt","src","description","pl","pr","background","marginTop","marginBottom","p","position","direction","placeholder","value","onChange","e","target","inputs","map","inputParam","index","disabled","confirmButtonName"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/packages/ui/src/views/credentials/AddEditCredentialDialog.js"],"sourcesContent":["import { createPortal } from 'react-dom'\nimport PropTypes from 'prop-types'\nimport { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { enqueueSnackbar as enqueueSnackbarAction, closeSnackbar as closeSnackbarAction } from 'store/actions'\nimport parser from 'html-react-parser'\n\n// Material\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Box, Stack, OutlinedInput, Typography } from '@mui/material'\n\n// Project imports\nimport { StyledButton } from 'ui-component/button/StyledButton'\nimport ConfirmDialog from 'ui-component/dialog/ConfirmDialog'\nimport CredentialInputHandler from './CredentialInputHandler'\n\n// Icons\nimport { IconX } from '@tabler/icons'\n\n// API\nimport credentialsApi from 'api/credentials'\n\n// Hooks\nimport useApi from 'hooks/useApi'\n\n// utils\nimport useNotifier from 'utils/useNotifier'\n\n// const\nimport { baseURL, REDACTED_CREDENTIAL_VALUE } from 'store/constant'\nimport { HIDE_CANVAS_DIALOG, SHOW_CANVAS_DIALOG } from 'store/actions'\n\nconst AddEditCredentialDialog = ({ show, dialogProps, onCancel, onConfirm }) => {\n    const portalElement = document.getElementById('portal')\n\n    const dispatch = useDispatch()\n\n    // ==============================|| Snackbar ||============================== //\n\n    useNotifier()\n\n    const enqueueSnackbar = (...args) => dispatch(enqueueSnackbarAction(...args))\n    const closeSnackbar = (...args) => dispatch(closeSnackbarAction(...args))\n\n    const getSpecificCredentialApi = useApi(credentialsApi.getSpecificCredential)\n    const getSpecificComponentCredentialApi = useApi(credentialsApi.getSpecificComponentCredential)\n\n    const [credential, setCredential] = useState({})\n    const [name, setName] = useState('')\n    const [credentialData, setCredentialData] = useState({})\n    const [componentCredential, setComponentCredential] = useState({})\n\n    useEffect(() => {\n        if (getSpecificCredentialApi.data) {\n            setCredential(getSpecificCredentialApi.data)\n            if (getSpecificCredentialApi.data.name) {\n                setName(getSpecificCredentialApi.data.name)\n            }\n            if (getSpecificCredentialApi.data.plainDataObj) {\n                setCredentialData(getSpecificCredentialApi.data.plainDataObj)\n            }\n            getSpecificComponentCredentialApi.request(getSpecificCredentialApi.data.credentialName)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [getSpecificCredentialApi.data])\n\n    useEffect(() => {\n        if (getSpecificComponentCredentialApi.data) {\n            setComponentCredential(getSpecificComponentCredentialApi.data)\n        }\n    }, [getSpecificComponentCredentialApi.data])\n\n    useEffect(() => {\n        if (dialogProps.type === 'EDIT' && dialogProps.data) {\n            // When credential dialog is opened from Credentials dashboard\n            getSpecificCredentialApi.request(dialogProps.data.id)\n        } else if (dialogProps.type === 'EDIT' && dialogProps.credentialId) {\n            // When credential dialog is opened from node in canvas\n            getSpecificCredentialApi.request(dialogProps.credentialId)\n        } else if (dialogProps.type === 'ADD' && dialogProps.credentialComponent) {\n            // When credential dialog is to add a new credential\n            setName('')\n            setCredential({})\n            setCredentialData({})\n            setComponentCredential(dialogProps.credentialComponent)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dialogProps])\n\n    useEffect(() => {\n        if (show) dispatch({ type: SHOW_CANVAS_DIALOG })\n        else dispatch({ type: HIDE_CANVAS_DIALOG })\n        return () => dispatch({ type: HIDE_CANVAS_DIALOG })\n    }, [show, dispatch])\n\n    const addNewCredential = async () => {\n        try {\n            const obj = {\n                name,\n                credentialName: componentCredential.name,\n                plainDataObj: credentialData\n            }\n            const createResp = await credentialsApi.createCredential(obj)\n            if (createResp.data) {\n                enqueueSnackbar({\n                    message: 'New Credential added',\n                    options: {\n                        key: new Date().getTime() + Math.random(),\n                        variant: 'success',\n                        action: (key) => (\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                                <IconX />\n                            </Button>\n                        )\n                    }\n                })\n                onConfirm(createResp.data.id)\n            }\n        } catch (error) {\n            const errorData = typeof err === 'string' ? err : err.response.data || `${err.response.status}: ${err.response.statusText}`\n            enqueueSnackbar({\n                message: `Failed to add new Credential: ${errorData}`,\n                options: {\n                    key: new Date().getTime() + Math.random(),\n                    variant: 'error',\n                    persist: true,\n                    action: (key) => (\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                            <IconX />\n                        </Button>\n                    )\n                }\n            })\n            onCancel()\n        }\n    }\n\n    const saveCredential = async () => {\n        try {\n            const saveObj = {\n                name,\n                credentialName: componentCredential.name\n            }\n\n            let plainDataObj = {}\n            for (const key in credentialData) {\n                if (credentialData[key] !== REDACTED_CREDENTIAL_VALUE) {\n                    plainDataObj[key] = credentialData[key]\n                }\n            }\n            if (Object.keys(plainDataObj).length) saveObj.plainDataObj = plainDataObj\n\n            const saveResp = await credentialsApi.updateCredential(credential.id, saveObj)\n            if (saveResp.data) {\n                enqueueSnackbar({\n                    message: 'Credential saved',\n                    options: {\n                        key: new Date().getTime() + Math.random(),\n                        variant: 'success',\n                        action: (key) => (\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                                <IconX />\n                            </Button>\n                        )\n                    }\n                })\n                onConfirm(saveResp.data.id)\n            }\n        } catch (error) {\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\n            enqueueSnackbar({\n                message: `Failed to save Credential: ${errorData}`,\n                options: {\n                    key: new Date().getTime() + Math.random(),\n                    variant: 'error',\n                    persist: true,\n                    action: (key) => (\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                            <IconX />\n                        </Button>\n                    )\n                }\n            })\n            onCancel()\n        }\n    }\n\n    const component = show ? (\n        <Dialog\n            fullWidth\n            maxWidth='sm'\n            open={show}\n            onClose={onCancel}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\n                {componentCredential && componentCredential.label && (\n                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                        <div\n                            style={{\n                                width: 50,\n                                height: 50,\n                                marginRight: 10,\n                                borderRadius: '50%',\n                                backgroundColor: 'white'\n                            }}\n                        >\n                            <img\n                                style={{\n                                    width: '100%',\n                                    height: '100%',\n                                    padding: 7,\n                                    borderRadius: '50%',\n                                    objectFit: 'contain'\n                                }}\n                                alt={componentCredential.name}\n                                src={`${baseURL}/api/v1/components-credentials-icon/${componentCredential.name}`}\n                            />\n                        </div>\n                        {componentCredential.label}\n                    </div>\n                )}\n            </DialogTitle>\n            <DialogContent>\n                {componentCredential && componentCredential.description && (\n                    <Box sx={{ pl: 2, pr: 2 }}>\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'row',\n                                borderRadius: 10,\n                                background: 'rgb(254,252,191)',\n                                padding: 10,\n                                marginTop: 10,\n                                marginBottom: 10\n                            }}\n                        >\n                            <span style={{ color: 'rgb(116,66,16)' }}>{parser(componentCredential.description)}</span>\n                        </div>\n                    </Box>\n                )}\n                {componentCredential && componentCredential.label && (\n                    <Box sx={{ p: 2 }}>\n                        <Stack sx={{ position: 'relative' }} direction='row'>\n                            <Typography variant='overline'>\n                                Credential Name\n                                <span style={{ color: 'red' }}>&nbsp;*</span>\n                            </Typography>\n                        </Stack>\n                        <OutlinedInput\n                            id='credName'\n                            type='string'\n                            fullWidth\n                            placeholder={componentCredential.label}\n                            value={name}\n                            name='name'\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    </Box>\n                )}\n                {componentCredential &&\n                    componentCredential.inputs &&\n                    componentCredential.inputs.map((inputParam, index) => (\n                        <CredentialInputHandler key={index} inputParam={inputParam} data={credentialData} />\n                    ))}\n            </DialogContent>\n            <DialogActions>\n                <StyledButton\n                    disabled={!name}\n                    variant='contained'\n                    onClick={() => (dialogProps.type === 'ADD' ? addNewCredential() : saveCredential())}\n                >\n                    {dialogProps.confirmButtonName}\n                </StyledButton>\n            </DialogActions>\n            <ConfirmDialog />\n        </Dialog>\n    ) : null\n\n    return createPortal(component, portalElement)\n}\n\nAddEditCredentialDialog.propTypes = {\n    show: PropTypes.bool,\n    dialogProps: PropTypes.object,\n    onCancel: PropTypes.func,\n    onConfirm: PropTypes.func\n}\n\nexport default AddEditCredentialDialog\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}