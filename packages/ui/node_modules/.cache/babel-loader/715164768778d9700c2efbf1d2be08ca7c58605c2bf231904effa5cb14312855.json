{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TeXFont = void 0;\nvar FontData_js_1 = require(\"../FontData.js\");\nvar tex_js_1 = require(\"../../common/fonts/tex.js\");\nvar bold_italic_js_1 = require(\"./tex/bold-italic.js\");\nvar bold_js_1 = require(\"./tex/bold.js\");\nvar double_struck_js_1 = require(\"./tex/double-struck.js\");\nvar fraktur_bold_js_1 = require(\"./tex/fraktur-bold.js\");\nvar fraktur_js_1 = require(\"./tex/fraktur.js\");\nvar italic_js_1 = require(\"./tex/italic.js\");\nvar largeop_js_1 = require(\"./tex/largeop.js\");\nvar monospace_js_1 = require(\"./tex/monospace.js\");\nvar normal_js_1 = require(\"./tex/normal.js\");\nvar sans_serif_bold_italic_js_1 = require(\"./tex/sans-serif-bold-italic.js\");\nvar sans_serif_bold_js_1 = require(\"./tex/sans-serif-bold.js\");\nvar sans_serif_italic_js_1 = require(\"./tex/sans-serif-italic.js\");\nvar sans_serif_js_1 = require(\"./tex/sans-serif.js\");\nvar script_bold_js_1 = require(\"./tex/script-bold.js\");\nvar script_js_1 = require(\"./tex/script.js\");\nvar smallop_js_1 = require(\"./tex/smallop.js\");\nvar tex_calligraphic_bold_js_1 = require(\"./tex/tex-calligraphic-bold.js\");\nvar tex_calligraphic_js_1 = require(\"./tex/tex-calligraphic.js\");\nvar tex_mathit_js_1 = require(\"./tex/tex-mathit.js\");\nvar tex_oldstyle_bold_js_1 = require(\"./tex/tex-oldstyle-bold.js\");\nvar tex_oldstyle_js_1 = require(\"./tex/tex-oldstyle.js\");\nvar tex_size3_js_1 = require(\"./tex/tex-size3.js\");\nvar tex_size4_js_1 = require(\"./tex/tex-size4.js\");\nvar tex_variant_js_1 = require(\"./tex/tex-variant.js\");\nvar delimiters_js_1 = require(\"../../common/fonts/tex/delimiters.js\");\nvar TeXFont = function (_super) {\n  __extends(TeXFont, _super);\n  function TeXFont(options) {\n    var e_1, _a;\n    if (options === void 0) {\n      options = null;\n    }\n    var _this = _super.call(this, options) || this;\n    var CLASS = _this.constructor;\n    try {\n      for (var _b = __values(Object.keys(CLASS.variantCacheIds)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var variant = _c.value;\n        _this.variant[variant].cacheID = 'TEX-' + CLASS.variantCacheIds[variant];\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return _this;\n  }\n  TeXFont.defaultDelimiters = delimiters_js_1.delimiters;\n  TeXFont.defaultChars = {\n    'normal': normal_js_1.normal,\n    'bold': bold_js_1.bold,\n    'italic': italic_js_1.italic,\n    'bold-italic': bold_italic_js_1.boldItalic,\n    'double-struck': double_struck_js_1.doubleStruck,\n    'fraktur': fraktur_js_1.fraktur,\n    'bold-fraktur': fraktur_bold_js_1.frakturBold,\n    'script': script_js_1.script,\n    'bold-script': script_bold_js_1.scriptBold,\n    'sans-serif': sans_serif_js_1.sansSerif,\n    'bold-sans-serif': sans_serif_bold_js_1.sansSerifBold,\n    'sans-serif-italic': sans_serif_italic_js_1.sansSerifItalic,\n    'sans-serif-bold-italic': sans_serif_bold_italic_js_1.sansSerifBoldItalic,\n    'monospace': monospace_js_1.monospace,\n    '-smallop': smallop_js_1.smallop,\n    '-largeop': largeop_js_1.largeop,\n    '-size3': tex_size3_js_1.texSize3,\n    '-size4': tex_size4_js_1.texSize4,\n    '-tex-calligraphic': tex_calligraphic_js_1.texCalligraphic,\n    '-tex-bold-calligraphic': tex_calligraphic_bold_js_1.texCalligraphicBold,\n    '-tex-mathit': tex_mathit_js_1.texMathit,\n    '-tex-oldstyle': tex_oldstyle_js_1.texOldstyle,\n    '-tex-bold-oldstyle': tex_oldstyle_bold_js_1.texOldstyleBold,\n    '-tex-variant': tex_variant_js_1.texVariant\n  };\n  TeXFont.variantCacheIds = {\n    'normal': 'N',\n    'bold': 'B',\n    'italic': 'I',\n    'bold-italic': 'BI',\n    'double-struck': 'D',\n    'fraktur': 'F',\n    'bold-fraktur': 'BF',\n    'script': 'S',\n    'bold-script': 'BS',\n    'sans-serif': 'SS',\n    'bold-sans-serif': 'BSS',\n    'sans-serif-italic': 'SSI',\n    'sans-serif-bold-italic': 'SSBI',\n    'monospace': 'M',\n    '-smallop': 'SO',\n    '-largeop': 'LO',\n    '-size3': 'S3',\n    '-size4': 'S4',\n    '-tex-calligraphic': 'C',\n    '-tex-bold-calligraphic': 'BC',\n    '-tex-mathit': 'MI',\n    '-tex-oldstyle': 'OS',\n    '-tex-bold-oldstyle': 'BOS',\n    '-tex-variant': 'V'\n  };\n  return TeXFont;\n}((0, tex_js_1.CommonTeXFontMixin)(FontData_js_1.SVGFontData));\nexports.TeXFont = TeXFont;","map":{"version":3,"names":["FontData_js_1","require","tex_js_1","bold_italic_js_1","bold_js_1","double_struck_js_1","fraktur_bold_js_1","fraktur_js_1","italic_js_1","largeop_js_1","monospace_js_1","normal_js_1","sans_serif_bold_italic_js_1","sans_serif_bold_js_1","sans_serif_italic_js_1","sans_serif_js_1","script_bold_js_1","script_js_1","smallop_js_1","tex_calligraphic_bold_js_1","tex_calligraphic_js_1","tex_mathit_js_1","tex_oldstyle_bold_js_1","tex_oldstyle_js_1","tex_size3_js_1","tex_size4_js_1","tex_variant_js_1","delimiters_js_1","TeXFont","_super","__extends","options","_this","call","CLASS","constructor","_b","__values","Object","keys","variantCacheIds","_c","next","done","variant","value","cacheID","defaultDelimiters","delimiters","defaultChars","normal","bold","italic","boldItalic","doubleStruck","fraktur","frakturBold","script","scriptBold","sansSerif","sansSerifBold","sansSerifItalic","sansSerifBoldItalic","monospace","smallop","largeop","texSize3","texSize4","texCalligraphic","texCalligraphicBold","texMathit","texOldstyle","texOldstyleBold","texVariant","CommonTeXFontMixin","SVGFontData","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/svg/fonts/tex.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  The MathJax TeXFont object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGFontData, SVGFontDataClass, SVGCharOptions, SVGVariantData, SVGDelimiterData,\n        DelimiterMap, CharMapMap} from '../FontData.js';\nimport {CommonTeXFontMixin} from '../../common/fonts/tex.js';\nimport {OptionList} from '../../../util/Options.js';\n\nimport {boldItalic} from './tex/bold-italic.js';\nimport {bold} from './tex/bold.js';\nimport {doubleStruck} from './tex/double-struck.js';\nimport {frakturBold} from './tex/fraktur-bold.js';\nimport {fraktur} from './tex/fraktur.js';\nimport {italic} from './tex/italic.js';\nimport {largeop} from './tex/largeop.js';\nimport {monospace} from './tex/monospace.js';\nimport {normal} from './tex/normal.js';\nimport {sansSerifBoldItalic} from './tex/sans-serif-bold-italic.js';\nimport {sansSerifBold} from './tex/sans-serif-bold.js';\nimport {sansSerifItalic} from './tex/sans-serif-italic.js';\nimport {sansSerif} from './tex/sans-serif.js';\nimport {scriptBold} from './tex/script-bold.js';\nimport {script} from './tex/script.js';\nimport {smallop} from './tex/smallop.js';\nimport {texCalligraphicBold} from './tex/tex-calligraphic-bold.js';\nimport {texCalligraphic} from './tex/tex-calligraphic.js';\nimport {texMathit} from './tex/tex-mathit.js';\nimport {texOldstyleBold} from './tex/tex-oldstyle-bold.js';\nimport {texOldstyle} from './tex/tex-oldstyle.js';\nimport {texSize3} from './tex/tex-size3.js';\nimport {texSize4} from './tex/tex-size4.js';\nimport {texVariant} from './tex/tex-variant.js';\n\nimport {delimiters} from '../../common/fonts/tex/delimiters.js';\n\n/***********************************************************************************/\n/**\n *  The TeXFont class\n */\nexport class TeXFont extends\nCommonTeXFontMixin<SVGCharOptions, SVGVariantData, SVGDelimiterData, SVGFontDataClass>(SVGFontData) {\n\n  /**\n   *  The stretchy delimiter data\n   */\n  protected static defaultDelimiters: DelimiterMap<SVGDelimiterData> = delimiters;\n\n  /**\n   *  The character data by variant\n   */\n  protected static defaultChars: CharMapMap<SVGCharOptions> = {\n    'normal': normal,\n    'bold': bold,\n    'italic': italic,\n    'bold-italic': boldItalic,\n    'double-struck': doubleStruck,\n    'fraktur': fraktur,\n    'bold-fraktur': frakturBold,\n    'script': script,\n    'bold-script': scriptBold,\n    'sans-serif': sansSerif,\n    'bold-sans-serif': sansSerifBold,\n    'sans-serif-italic': sansSerifItalic,\n    'sans-serif-bold-italic': sansSerifBoldItalic,\n    'monospace': monospace,\n    '-smallop': smallop,\n    '-largeop': largeop,\n    '-size3': texSize3,\n    '-size4': texSize4,\n    '-tex-calligraphic': texCalligraphic,\n    '-tex-bold-calligraphic': texCalligraphicBold,\n    '-tex-mathit': texMathit,\n    '-tex-oldstyle': texOldstyle,\n    '-tex-bold-oldstyle': texOldstyleBold,\n    '-tex-variant': texVariant\n  };\n\n  /**\n   * The cacheIDs to use for the variants in font-caching\n   */\n  protected static variantCacheIds: {[name: string]: string} = {\n    'normal': 'N',\n    'bold': 'B',\n    'italic': 'I',\n    'bold-italic': 'BI',\n    'double-struck': 'D',\n    'fraktur': 'F',\n    'bold-fraktur': 'BF',\n    'script': 'S',\n    'bold-script': 'BS',\n    'sans-serif': 'SS',\n    'bold-sans-serif': 'BSS',\n    'sans-serif-italic': 'SSI',\n    'sans-serif-bold-italic': 'SSBI',\n    'monospace': 'M',\n    '-smallop': 'SO',\n    '-largeop': 'LO',\n    '-size3': 'S3',\n    '-size4': 'S4',\n    '-tex-calligraphic': 'C',\n    '-tex-bold-calligraphic': 'BC',\n    '-tex-mathit': 'MI',\n    '-tex-oldstyle': 'OS',\n    '-tex-bold-oldstyle': 'BOS',\n    '-tex-variant': 'V'\n  };\n\n  /**\n   * @override\n   */\n  constructor(options: OptionList = null) {\n    super(options);\n    //\n    //  Add the cacheIDs to the variants\n    //\n    const CLASS = this.constructor as typeof TeXFont;\n    for (const variant of Object.keys(CLASS.variantCacheIds)) {\n      this.variant[variant].cacheID = 'TEX-' + CLASS.variantCacheIds[variant];\n    }\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}