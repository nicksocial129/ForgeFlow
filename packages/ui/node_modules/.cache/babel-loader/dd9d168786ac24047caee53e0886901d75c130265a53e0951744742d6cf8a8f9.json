{"ast":null,"code":"module.exports = function (hljs) {\n  var KEYWORDS = {\n    keyword:\n    // JS keywords\n    'in if for while finally new do return else break catch instanceof throw try this ' + 'switch continue typeof delete debugger super yield import export from as default await ' +\n    // Coffee keywords\n    'then unless until loop of by when and or is isnt not',\n    literal:\n    // JS literals\n    'true false null undefined ' +\n    // Coffee literals\n    'yes no on off',\n    built_in: 'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /}/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [hljs.BINARY_NUMBER_MODE, hljs.inherit(hljs.C_NUMBER_MODE, {\n    starts: {\n      end: '(\\\\s*/)?',\n      relevance: 0\n    }\n  }),\n  // a number tries to eat the following slash to prevent treating it as a regexp\n  {\n    className: 'string',\n    variants: [{\n      begin: /'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }, {\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }]\n  }, {\n    className: 'regexp',\n    variants: [{\n      begin: '///',\n      end: '///',\n      contains: [SUBST, hljs.HASH_COMMENT_MODE]\n    }, {\n      begin: '//[gim]*',\n      relevance: 0\n    }, {\n      // regex can't start with space to parse x / 2 / 3 as two divisions\n      // regex can't start with *, and it supports an \"illegal\" in the main mode\n      begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n    }]\n  }, {\n    begin: '@' + JS_IDENT_RE // relevance booster\n  }, {\n    subLanguage: 'javascript',\n    excludeBegin: true,\n    excludeEnd: true,\n    variants: [{\n      begin: '```',\n      end: '```'\n    }, {\n      begin: '`',\n      end: '`'\n    }]\n  }];\n  SUBST.contains = EXPRESSIONS;\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]',\n    returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n  return {\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([hljs.COMMENT('###', '###'), hljs.HASH_COMMENT_MODE, {\n      className: 'function',\n      begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE,\n      end: '[-=]>',\n      returnBegin: true,\n      contains: [TITLE, PARAMS]\n    }, {\n      // anonymous function start\n      begin: /[:\\(,=]\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'function',\n        begin: PARAMS_RE,\n        end: '[-=]>',\n        returnBegin: true,\n        contains: [PARAMS]\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '$',\n      illegal: /[:=\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends',\n        endsWithParent: true,\n        illegal: /[:=\"\\[\\]]/,\n        contains: [TITLE]\n      }, TITLE]\n    }, {\n      begin: JS_IDENT_RE + ':',\n      end: ':',\n      returnBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }])\n  };\n};","map":{"version":3,"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","JS_IDENT_RE","SUBST","className","begin","end","keywords","EXPRESSIONS","BINARY_NUMBER_MODE","inherit","C_NUMBER_MODE","starts","relevance","variants","contains","BACKSLASH_ESCAPE","HASH_COMMENT_MODE","subLanguage","excludeBegin","excludeEnd","TITLE","TITLE_MODE","PARAMS_RE","PARAMS","returnBegin","concat","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/coffeescript.js"],"sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // JS keywords\n      'in if for while finally new do return else break catch instanceof throw try this ' +\n      'switch continue typeof delete debugger super yield import export from as default await ' +\n      // Coffee keywords\n      'then unless until loop of by when and or is isnt not',\n    literal:\n      // JS literals\n      'true false null undefined ' +\n      // Coffee literals\n      'yes no on off',\n    built_in:\n      'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    hljs.inherit(hljs.C_NUMBER_MODE, {starts: {end: '(\\\\s*/)?', relevance: 0}}), // a number tries to eat the following slash to prevent treating it as a regexp\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '///', end: '///',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          begin: '//[gim]*',\n          relevance: 0\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE // relevance booster\n    },\n    {\n      subLanguage: 'javascript',\n      excludeBegin: true, excludeEnd: true,\n      variants: [\n        {\n          begin: '```', end: '```',\n        },\n        {\n          begin: '`', end: '`',\n        }\n      ]\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/, end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n\n  return {\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('###', '###'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE, end: '[-=]>',\n        returnBegin: true,\n        contains: [TITLE, PARAMS]\n      },\n      {\n        // anonymous function start\n        begin: /[:\\(,=]\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'function',\n            begin: PARAMS_RE, end: '[-=]>',\n            returnBegin: true,\n            contains: [PARAMS]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}