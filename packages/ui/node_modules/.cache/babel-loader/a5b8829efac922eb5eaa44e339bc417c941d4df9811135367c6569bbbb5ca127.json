{"ast":null,"code":"module.exports = function (hljs) {\n  var PERL_KEYWORDS = 'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' + 'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' + 'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq' + 'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' + 'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget' + 'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' + 'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' + 'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' + 'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' + 'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' + 'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' + 'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' + 'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' + 'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' + 'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' + 'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' + 'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir' + 'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' + 'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when';\n  var SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  var METHOD = {\n    begin: '->{',\n    end: '}'\n    // contains defined later\n  };\n  var VAR = {\n    variants: [{\n      begin: /\\$\\d/\n    }, {\n      begin: /[\\$%@](\\^\\w\\b|#\\w+(::\\w+)*|{\\w+}|\\w+(::\\w*)*)/\n    }, {\n      begin: /[\\$%@][^\\s\\w{]/,\n      relevance: 0\n    }]\n  };\n  var STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];\n  var PERL_DEFAULT_CONTAINS = [VAR, hljs.HASH_COMMENT_MODE, hljs.COMMENT('^\\\\=\\\\w', '\\\\=cut', {\n    endsWithParent: true\n  }), METHOD, {\n    className: 'string',\n    contains: STRING_CONTAINS,\n    variants: [{\n      begin: 'q[qwxr]?\\\\s*\\\\(',\n      end: '\\\\)',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\[',\n      end: '\\\\]',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\{',\n      end: '\\\\}',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\|',\n      end: '\\\\|',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\<',\n      end: '\\\\>',\n      relevance: 5\n    }, {\n      begin: 'qw\\\\s+q',\n      end: 'q',\n      relevance: 5\n    }, {\n      begin: '\\'',\n      end: '\\'',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '\"',\n      end: '\"'\n    }, {\n      begin: '`',\n      end: '`',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '{\\\\w+}',\n      contains: [],\n      relevance: 0\n    }, {\n      begin: '\\-?\\\\w+\\\\s*\\\\=\\\\>',\n      contains: [],\n      relevance: 0\n    }]\n  }, {\n    className: 'number',\n    begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n    relevance: 0\n  }, {\n    // regexp container\n    begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n    keywords: 'split return print reverse grep',\n    relevance: 0,\n    contains: [hljs.HASH_COMMENT_MODE, {\n      className: 'regexp',\n      begin: '(s|tr|y)/(\\\\\\\\.|[^/])*/(\\\\\\\\.|[^/])*/[a-z]*',\n      relevance: 10\n    }, {\n      className: 'regexp',\n      begin: '(m|qr)?/',\n      end: '/[a-z]*',\n      contains: [hljs.BACKSLASH_ESCAPE],\n      relevance: 0 // allows empty \"//\" which is a common comment delimiter in other languages\n    }]\n  }, {\n    className: 'function',\n    beginKeywords: 'sub',\n    end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n    excludeEnd: true,\n    relevance: 5,\n    contains: [hljs.TITLE_MODE]\n  }, {\n    begin: '-\\\\w\\\\b',\n    relevance: 0\n  }, {\n    begin: \"^__DATA__$\",\n    end: \"^__END__$\",\n    subLanguage: 'mojolicious',\n    contains: [{\n      begin: \"^@@.*\",\n      end: \"$\",\n      className: \"comment\"\n    }]\n  }];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n  return {\n    aliases: ['pl', 'pm'],\n    lexemes: /[\\w\\.]+/,\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n};","map":{"version":3,"names":["module","exports","hljs","PERL_KEYWORDS","SUBST","className","begin","end","keywords","METHOD","VAR","variants","relevance","STRING_CONTAINS","BACKSLASH_ESCAPE","PERL_DEFAULT_CONTAINS","HASH_COMMENT_MODE","COMMENT","endsWithParent","contains","RE_STARTERS_RE","beginKeywords","excludeEnd","TITLE_MODE","subLanguage","aliases","lexemes"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/perl.js"],"sourcesContent":["module.exports = function(hljs) {\n  var PERL_KEYWORDS = 'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' +\n    'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' +\n    'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq' +\n    'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' +\n    'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget' +\n    'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' +\n    'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' +\n    'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' +\n    'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' +\n    'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' +\n    'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' +\n    'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' +\n    'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' +\n    'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' +\n    'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' +\n    'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' +\n    'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir' +\n    'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' +\n    'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when';\n  var SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{', end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  var METHOD = {\n    begin: '->{', end: '}'\n    // contains defined later\n  };\n  var VAR = {\n    variants: [\n      {begin: /\\$\\d/},\n      {begin: /[\\$%@](\\^\\w\\b|#\\w+(::\\w+)*|{\\w+}|\\w+(::\\w*)*)/},\n      {begin: /[\\$%@][^\\s\\w{]/, relevance: 0}\n    ]\n  };\n  var STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];\n  var PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      '^\\\\=\\\\w',\n      '\\\\=cut',\n      {\n        endsWithParent: true\n      }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(', end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[', end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{', end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|', end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\<', end: '\\\\>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q', end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'', end: '\\'',\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: '\"', end: '\"'\n        },\n        {\n          begin: '`', end: '`',\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: '{\\\\w+}',\n          contains: [],\n          relevance: 0\n        },\n        {\n          begin: '\\-?\\\\w+\\\\s*\\\\=\\\\>',\n          contains: [],\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          begin: '(s|tr|y)/(\\\\\\\\.|[^/])*/(\\\\\\\\.|[^/])*/[a-z]*',\n          relevance: 10\n        },\n        {\n          className: 'regexp',\n          begin: '(m|qr)?/', end: '/[a-z]*',\n          contains: [hljs.BACKSLASH_ESCAPE],\n          relevance: 0 // allows empty \"//\" which is a common comment delimiter in other languages\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub', end: '(\\\\s*\\\\(.*?\\\\))?[;{]', excludeEnd: true,\n      relevance: 5,\n      contains: [hljs.TITLE_MODE]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n            begin: \"^@@.*\",\n            end: \"$\",\n            className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    aliases: ['pl', 'pm'],\n    lexemes: /[\\w\\.]+/,\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}