{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar React = __importStar(require(\"react\"));\nvar KEYCODE_ENTER = 13;\nvar KEYCODE_TAB = 9;\nvar KEYCODE_BACKSPACE = 8;\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYCODE_M = 77;\nvar KEYCODE_PARENS = 57;\nvar KEYCODE_BRACKETS = 219;\nvar KEYCODE_QUOTE = 222;\nvar KEYCODE_BACK_QUOTE = 192;\nvar KEYCODE_ESCAPE = 27;\nvar HISTORY_LIMIT = 100;\nvar HISTORY_TIME_GAP = 3000;\nvar isWindows = typeof window !== 'undefined' && 'navigator' in window && /Win/i.test(navigator.platform);\nvar isMacLike = typeof window !== 'undefined' && 'navigator' in window && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\nvar className = 'npm__react-simple-code-editor__textarea';\nvar cssText = /* CSS */\"\\n/**\\n * Reset the text fill color so that placeholder is visible\\n */\\n.\".concat(className, \":empty {\\n  -webkit-text-fill-color: inherit !important;\\n}\\n\\n/**\\n * Hack to apply on some CSS on IE10 and IE11\\n */\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  /**\\n    * IE doesn't support '-webkit-text-fill-color'\\n    * So we use 'color: transparent' to make the text transparent on IE\\n    * Unlike other browsers, it doesn't affect caret color in IE\\n    */\\n  .\").concat(className, \" {\\n    color: transparent !important;\\n  }\\n\\n  .\").concat(className, \"::selection {\\n    background-color: #accef7 !important;\\n    color: transparent !important;\\n  }\\n}\\n\");\nvar Editor = /** @class */function (_super) {\n  __extends(Editor, _super);\n  function Editor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      capture: true\n    };\n    _this._recordCurrentState = function () {\n      var input = _this._input;\n      if (!input) return;\n      // Save current state of the input\n      var value = input.value,\n        selectionStart = input.selectionStart,\n        selectionEnd = input.selectionEnd;\n      _this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      });\n    };\n    _this._getLines = function (text, position) {\n      return text.substring(0, position).split('\\n');\n    };\n    _this._recordChange = function (record, overwrite) {\n      var _a, _b, _c;\n      if (overwrite === void 0) {\n        overwrite = false;\n      }\n      var _d = _this._history,\n        stack = _d.stack,\n        offset = _d.offset;\n      if (stack.length && offset > -1) {\n        // When something updates, drop the redo operations\n        _this._history.stack = stack.slice(0, offset + 1);\n        // Limit the number of operations to 100\n        var count = _this._history.stack.length;\n        if (count > HISTORY_LIMIT) {\n          var extras = count - HISTORY_LIMIT;\n          _this._history.stack = stack.slice(extras, count);\n          _this._history.offset = Math.max(_this._history.offset - extras, 0);\n        }\n      }\n      var timestamp = Date.now();\n      if (overwrite) {\n        var last = _this._history.stack[_this._history.offset];\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n          // A previous entry exists and was in short interval\n          // Match the last word in the line\n          var re = /[^a-z0-9]([a-z0-9]+)$/i;\n          // Get the previous line\n          var previous = (_a = _this._getLines(last.value, last.selectionStart).pop()) === null || _a === void 0 ? void 0 : _a.match(re);\n          // Get the current line\n          var current = (_b = _this._getLines(record.value, record.selectionStart).pop()) === null || _b === void 0 ? void 0 : _b.match(re);\n          if ((previous === null || previous === void 0 ? void 0 : previous[1]) && ((_c = current === null || current === void 0 ? void 0 : current[1]) === null || _c === void 0 ? void 0 : _c.startsWith(previous[1]))) {\n            // The last word of the previous line and current line match\n            // Overwrite previous entry so that undo will remove whole word\n            _this._history.stack[_this._history.offset] = __assign(__assign({}, record), {\n              timestamp: timestamp\n            });\n            return;\n          }\n        }\n      }\n      // Add the new operation to the stack\n      _this._history.stack.push(__assign(__assign({}, record), {\n        timestamp: timestamp\n      }));\n      _this._history.offset++;\n    };\n    _this._updateInput = function (record) {\n      var input = _this._input;\n      if (!input) return;\n      // Update values and selection state\n      input.value = record.value;\n      input.selectionStart = record.selectionStart;\n      input.selectionEnd = record.selectionEnd;\n      _this.props.onValueChange(record.value);\n    };\n    _this._applyEdits = function (record) {\n      // Save last selection state\n      var input = _this._input;\n      var last = _this._history.stack[_this._history.offset];\n      if (last && input) {\n        _this._history.stack[_this._history.offset] = __assign(__assign({}, last), {\n          selectionStart: input.selectionStart,\n          selectionEnd: input.selectionEnd\n        });\n      }\n      // Save the changes\n      _this._recordChange(record);\n      _this._updateInput(record);\n    };\n    _this._undoEdit = function () {\n      var _a = _this._history,\n        stack = _a.stack,\n        offset = _a.offset;\n      // Get the previous edit\n      var record = stack[offset - 1];\n      if (record) {\n        // Apply the changes and update the offset\n        _this._updateInput(record);\n        _this._history.offset = Math.max(offset - 1, 0);\n      }\n    };\n    _this._redoEdit = function () {\n      var _a = _this._history,\n        stack = _a.stack,\n        offset = _a.offset;\n      // Get the next edit\n      var record = stack[offset + 1];\n      if (record) {\n        // Apply the changes and update the offset\n        _this._updateInput(record);\n        _this._history.offset = Math.min(offset + 1, stack.length - 1);\n      }\n    };\n    _this._handleKeyDown = function (e) {\n      var _a = _this.props,\n        tabSize = _a.tabSize,\n        insertSpaces = _a.insertSpaces,\n        ignoreTabKey = _a.ignoreTabKey,\n        onKeyDown = _a.onKeyDown;\n      if (onKeyDown) {\n        onKeyDown(e);\n        if (e.defaultPrevented) {\n          return;\n        }\n      }\n      if (e.keyCode === KEYCODE_ESCAPE) {\n        e.currentTarget.blur();\n      }\n      var _b = e.currentTarget,\n        value = _b.value,\n        selectionStart = _b.selectionStart,\n        selectionEnd = _b.selectionEnd;\n      var tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n      if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && _this.state.capture) {\n        // Prevent focus change\n        e.preventDefault();\n        if (e.shiftKey) {\n          // Unindent selected lines\n          var linesBeforeCaret = _this._getLines(value, selectionStart);\n          var startLine_1 = linesBeforeCaret.length - 1;\n          var endLine_1 = _this._getLines(value, selectionEnd).length - 1;\n          var nextValue = value.split('\\n').map(function (line, i) {\n            if (i >= startLine_1 && i <= endLine_1 && line.startsWith(tabCharacter)) {\n              return line.substring(tabCharacter.length);\n            }\n            return line;\n          }).join('\\n');\n          if (value !== nextValue) {\n            var startLineText = linesBeforeCaret[startLine_1];\n            _this._applyEdits({\n              value: nextValue,\n              // Move the start cursor if first line in selection was modified\n              // It was modified only if it started with a tab\n              selectionStart: (startLineText === null || startLineText === void 0 ? void 0 : startLineText.startsWith(tabCharacter)) ? selectionStart - tabCharacter.length : selectionStart,\n              // Move the end cursor by total number of characters removed\n              selectionEnd: selectionEnd - (value.length - nextValue.length)\n            });\n          }\n        } else if (selectionStart !== selectionEnd) {\n          // Indent selected lines\n          var linesBeforeCaret = _this._getLines(value, selectionStart);\n          var startLine_2 = linesBeforeCaret.length - 1;\n          var endLine_2 = _this._getLines(value, selectionEnd).length - 1;\n          var startLineText = linesBeforeCaret[startLine_2];\n          _this._applyEdits({\n            value: value.split('\\n').map(function (line, i) {\n              if (i >= startLine_2 && i <= endLine_2) {\n                return tabCharacter + line;\n              }\n              return line;\n            }).join('\\n'),\n            // Move the start cursor by number of characters added in first line of selection\n            // Don't move it if it there was no text before cursor\n            selectionStart: startLineText && /\\S/.test(startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n            // Move the end cursor by total number of characters added\n            selectionEnd: selectionEnd + tabCharacter.length * (endLine_2 - startLine_2 + 1)\n          });\n        } else {\n          var updatedSelection = selectionStart + tabCharacter.length;\n          _this._applyEdits({\n            // Insert tab character at caret\n            value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_BACKSPACE) {\n        var hasSelection = selectionStart !== selectionEnd;\n        var textBeforeCaret = value.substring(0, selectionStart);\n        if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n          // Prevent default delete behaviour\n          e.preventDefault();\n          var updatedSelection = selectionStart - tabCharacter.length;\n          _this._applyEdits({\n            // Remove tab character at caret\n            value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_ENTER) {\n        // Ignore selections\n        if (selectionStart === selectionEnd) {\n          // Get the current line\n          var line = _this._getLines(value, selectionStart).pop();\n          var matches = line === null || line === void 0 ? void 0 : line.match(/^\\s+/);\n          if (matches === null || matches === void 0 ? void 0 : matches[0]) {\n            e.preventDefault();\n            // Preserve indentation on inserting a new line\n            var indent = '\\n' + matches[0];\n            var updatedSelection = selectionStart + indent.length;\n            _this._applyEdits({\n              // Insert indentation character at caret\n              value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n              // Update caret position\n              selectionStart: updatedSelection,\n              selectionEnd: updatedSelection\n            });\n          }\n        }\n      } else if (e.keyCode === KEYCODE_PARENS || e.keyCode === KEYCODE_BRACKETS || e.keyCode === KEYCODE_QUOTE || e.keyCode === KEYCODE_BACK_QUOTE) {\n        var chars = void 0;\n        if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n          chars = ['(', ')'];\n        } else if (e.keyCode === KEYCODE_BRACKETS) {\n          if (e.shiftKey) {\n            chars = ['{', '}'];\n          } else {\n            chars = ['[', ']'];\n          }\n        } else if (e.keyCode === KEYCODE_QUOTE) {\n          if (e.shiftKey) {\n            chars = ['\"', '\"'];\n          } else {\n            chars = [\"'\", \"'\"];\n          }\n        } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n          chars = ['`', '`'];\n        }\n        // If text is selected, wrap them in the characters\n        if (selectionStart !== selectionEnd && chars) {\n          e.preventDefault();\n          _this._applyEdits({\n            value: value.substring(0, selectionStart) + chars[0] + value.substring(selectionStart, selectionEnd) + chars[1] + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd + 2\n          });\n        }\n      } else if ((isMacLike ?\n      // Trigger undo with ⌘+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z :\n      // Trigger undo with Ctrl+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z) && !e.shiftKey && !e.altKey) {\n        e.preventDefault();\n        _this._undoEdit();\n      } else if ((isMacLike ?\n      // Trigger redo with ⌘+Shift+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey : isWindows ?\n      // Trigger redo with Ctrl+Y on Windows\n      e.ctrlKey && e.keyCode === KEYCODE_Y :\n      // Trigger redo with Ctrl+Shift+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) && !e.altKey) {\n        e.preventDefault();\n        _this._redoEdit();\n      } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n        e.preventDefault();\n        // Toggle capturing tab key so users can focus away\n        _this.setState(function (state) {\n          return {\n            capture: !state.capture\n          };\n        });\n      }\n    };\n    _this._handleChange = function (e) {\n      var _a = e.currentTarget,\n        value = _a.value,\n        selectionStart = _a.selectionStart,\n        selectionEnd = _a.selectionEnd;\n      _this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      }, true);\n      _this.props.onValueChange(value);\n    };\n    _this._history = {\n      stack: [],\n      offset: -1\n    };\n    _this._input = null;\n    return _this;\n  }\n  Editor.prototype.componentDidMount = function () {\n    this._recordCurrentState();\n  };\n  Object.defineProperty(Editor.prototype, \"session\", {\n    get: function () {\n      return {\n        history: this._history\n      };\n    },\n    set: function (session) {\n      this._history = session.history;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Editor.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      value = _a.value,\n      style = _a.style,\n      padding = _a.padding,\n      highlight = _a.highlight,\n      textareaId = _a.textareaId,\n      textareaClassName = _a.textareaClassName,\n      autoFocus = _a.autoFocus,\n      disabled = _a.disabled,\n      form = _a.form,\n      maxLength = _a.maxLength,\n      minLength = _a.minLength,\n      name = _a.name,\n      placeholder = _a.placeholder,\n      readOnly = _a.readOnly,\n      required = _a.required,\n      onClick = _a.onClick,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      onKeyUp = _a.onKeyUp,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onKeyDown = _a.onKeyDown,\n      onValueChange = _a.onValueChange,\n      tabSize = _a.tabSize,\n      insertSpaces = _a.insertSpaces,\n      ignoreTabKey = _a.ignoreTabKey,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      preClassName = _a.preClassName,\n      rest = __rest(_a, [\"value\", \"style\", \"padding\", \"highlight\", \"textareaId\", \"textareaClassName\", \"autoFocus\", \"disabled\", \"form\", \"maxLength\", \"minLength\", \"name\", \"placeholder\", \"readOnly\", \"required\", \"onClick\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onValueChange\", \"tabSize\", \"insertSpaces\", \"ignoreTabKey\", \"preClassName\"]);\n    var contentStyle = {\n      paddingTop: padding,\n      paddingRight: padding,\n      paddingBottom: padding,\n      paddingLeft: padding\n    };\n    var highlighted = highlight(value);\n    return React.createElement(\"div\", __assign({}, rest, {\n      style: __assign(__assign({}, styles.container), style)\n    }), React.createElement(\"textarea\", {\n      ref: function (c) {\n        return _this._input = c;\n      },\n      style: __assign(__assign(__assign({}, styles.editor), styles.textarea), contentStyle),\n      className: className + (textareaClassName ? \" \".concat(textareaClassName) : ''),\n      id: textareaId,\n      value: value,\n      onChange: this._handleChange,\n      onKeyDown: this._handleKeyDown,\n      onClick: onClick,\n      onKeyUp: onKeyUp,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      disabled: disabled,\n      form: form,\n      maxLength: maxLength,\n      minLength: minLength,\n      name: name,\n      placeholder: placeholder,\n      readOnly: readOnly,\n      required: required,\n      autoFocus: autoFocus,\n      autoCapitalize: \"off\",\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      spellCheck: false,\n      \"data-gramm\": false\n    }), React.createElement(\"pre\", __assign({\n      className: preClassName,\n      \"aria-hidden\": \"true\",\n      style: __assign(__assign(__assign({}, styles.editor), styles.highlight), contentStyle)\n    }, typeof highlighted === 'string' ? {\n      dangerouslySetInnerHTML: {\n        __html: highlighted + '<br />'\n      }\n    } : {\n      children: highlighted\n    })), React.createElement(\"style\", {\n      type: \"text/css\",\n      dangerouslySetInnerHTML: {\n        __html: cssText\n      }\n    }));\n  };\n  Editor.defaultProps = {\n    tabSize: 2,\n    insertSpaces: true,\n    ignoreTabKey: false,\n    padding: 0\n  };\n  return Editor;\n}(React.Component);\nexports.default = Editor;\nvar styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    boxSizing: 'border-box',\n    padding: 0,\n    overflow: 'hidden'\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    resize: 'none',\n    color: 'inherit',\n    overflow: 'hidden',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent'\n  },\n  highlight: {\n    position: 'relative',\n    pointerEvents: 'none'\n  },\n  editor: {\n    margin: 0,\n    border: 0,\n    background: 'none',\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    overflowWrap: 'break-word'\n  }\n};","map":{"version":3,"names":["React","__importStar","require","KEYCODE_ENTER","KEYCODE_TAB","KEYCODE_BACKSPACE","KEYCODE_Y","KEYCODE_Z","KEYCODE_M","KEYCODE_PARENS","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","KEYCODE_ESCAPE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","window","test","navigator","platform","isMacLike","className","cssText","concat","Editor","_super","__extends","_this","apply","arguments","state","capture","_recordCurrentState","input","_input","value","selectionStart","selectionEnd","_recordChange","_getLines","text","position","substring","split","record","overwrite","_d","_history","stack","offset","length","slice","count","extras","Math","max","timestamp","Date","now","last","re","previous","_a","pop","match","current","_b","_c","startsWith","__assign","push","_updateInput","props","onValueChange","_applyEdits","_undoEdit","_redoEdit","min","_handleKeyDown","e","tabSize","insertSpaces","ignoreTabKey","onKeyDown","defaultPrevented","keyCode","currentTarget","blur","tabCharacter","repeat","preventDefault","shiftKey","linesBeforeCaret","startLine_1","endLine_1","nextValue","map","line","i","join","startLineText","startLine_2","endLine_2","updatedSelection","hasSelection","textBeforeCaret","endsWith","matches","indent","chars","metaKey","ctrlKey","altKey","setState","_handleChange","prototype","componentDidMount","Object","defineProperty","get","history","set","session","render","style","padding","highlight","textareaId","textareaClassName","autoFocus","disabled","form","maxLength","minLength","name","placeholder","readOnly","required","onClick","onFocus","onBlur","onKeyUp","preClassName","rest","__rest","contentStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","highlighted","createElement","styles","container","ref","c","editor","textarea","id","onChange","autoCapitalize","autoComplete","autoCorrect","spellCheck","dangerouslySetInnerHTML","__html","children","type","defaultProps","Component","textAlign","boxSizing","overflow","top","left","height","width","resize","color","MozOsxFontSmoothing","WebkitFontSmoothing","WebkitTextFillColor","pointerEvents","margin","border","background","display","fontFamily","fontSize","fontStyle","fontVariantLigatures","fontWeight","letterSpacing","lineHeight","textIndent","textRendering","textTransform","whiteSpace","wordBreak","overflowWrap"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-simple-code-editor/src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Props = React.HTMLAttributes<HTMLDivElement> & {\n  // Props for the component\n  value: string;\n  onValueChange: (value: string) => void;\n  highlight: (value: string) => string | React.ReactNode;\n  tabSize: number;\n  insertSpaces: boolean;\n  ignoreTabKey: boolean;\n  padding: number | string;\n  style?: React.CSSProperties;\n\n  // Props for the textarea\n  textareaId?: string;\n  textareaClassName?: string;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  form?: string;\n  maxLength?: number;\n  minLength?: number;\n  name?: string;\n  placeholder?: string;\n  readOnly?: boolean;\n  required?: boolean;\n  onClick?: React.MouseEventHandler<HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLTextAreaElement>;\n  onBlur?: React.FocusEventHandler<HTMLTextAreaElement>;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<HTMLTextAreaElement>;\n\n  // Props for the hightlighted code’s pre element\n  preClassName?: string;\n};\n\ntype State = {\n  capture: boolean;\n};\n\ntype Record = {\n  value: string;\n  selectionStart: number;\n  selectionEnd: number;\n};\n\ntype History = {\n  stack: (Record & { timestamp: number })[];\n  offset: number;\n};\n\nconst KEYCODE_ENTER = 13;\nconst KEYCODE_TAB = 9;\nconst KEYCODE_BACKSPACE = 8;\nconst KEYCODE_Y = 89;\nconst KEYCODE_Z = 90;\nconst KEYCODE_M = 77;\nconst KEYCODE_PARENS = 57;\nconst KEYCODE_BRACKETS = 219;\nconst KEYCODE_QUOTE = 222;\nconst KEYCODE_BACK_QUOTE = 192;\nconst KEYCODE_ESCAPE = 27;\n\nconst HISTORY_LIMIT = 100;\nconst HISTORY_TIME_GAP = 3000;\n\nconst isWindows =\n  typeof window !== 'undefined' &&\n  'navigator' in window &&\n  /Win/i.test(navigator.platform);\nconst isMacLike =\n  typeof window !== 'undefined' &&\n  'navigator' in window &&\n  /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\nconst className = 'npm__react-simple-code-editor__textarea';\n\nconst cssText = /* CSS */ `\n/**\n * Reset the text fill color so that placeholder is visible\n */\n.${className}:empty {\n  -webkit-text-fill-color: inherit !important;\n}\n\n/**\n * Hack to apply on some CSS on IE10 and IE11\n */\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /**\n    * IE doesn't support '-webkit-text-fill-color'\n    * So we use 'color: transparent' to make the text transparent on IE\n    * Unlike other browsers, it doesn't affect caret color in IE\n    */\n  .${className} {\n    color: transparent !important;\n  }\n\n  .${className}::selection {\n    background-color: #accef7 !important;\n    color: transparent !important;\n  }\n}\n`;\n\nexport default class Editor extends React.Component<Props, State> {\n  static defaultProps = {\n    tabSize: 2,\n    insertSpaces: true,\n    ignoreTabKey: false,\n    padding: 0,\n  };\n\n  state = {\n    capture: true,\n  };\n\n  componentDidMount() {\n    this._recordCurrentState();\n  }\n\n  private _recordCurrentState = () => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Save current state of the input\n    const { value, selectionStart, selectionEnd } = input;\n\n    this._recordChange({\n      value,\n      selectionStart,\n      selectionEnd,\n    });\n  };\n\n  private _getLines = (text: string, position: number) =>\n    text.substring(0, position).split('\\n');\n\n  private _recordChange = (record: Record, overwrite: boolean = false) => {\n    const { stack, offset } = this._history;\n\n    if (stack.length && offset > -1) {\n      // When something updates, drop the redo operations\n      this._history.stack = stack.slice(0, offset + 1);\n\n      // Limit the number of operations to 100\n      const count = this._history.stack.length;\n\n      if (count > HISTORY_LIMIT) {\n        const extras = count - HISTORY_LIMIT;\n\n        this._history.stack = stack.slice(extras, count);\n        this._history.offset = Math.max(this._history.offset - extras, 0);\n      }\n    }\n\n    const timestamp = Date.now();\n\n    if (overwrite) {\n      const last = this._history.stack[this._history.offset];\n\n      if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n        // A previous entry exists and was in short interval\n\n        // Match the last word in the line\n        const re = /[^a-z0-9]([a-z0-9]+)$/i;\n\n        // Get the previous line\n        const previous = this._getLines(last.value, last.selectionStart)\n          .pop()\n          ?.match(re);\n\n        // Get the current line\n        const current = this._getLines(record.value, record.selectionStart)\n          .pop()\n          ?.match(re);\n\n        if (previous?.[1] && current?.[1]?.startsWith(previous[1])) {\n          // The last word of the previous line and current line match\n          // Overwrite previous entry so that undo will remove whole word\n          this._history.stack[this._history.offset] = { ...record, timestamp };\n\n          return;\n        }\n      }\n    }\n\n    // Add the new operation to the stack\n    this._history.stack.push({ ...record, timestamp });\n    this._history.offset++;\n  };\n\n  private _updateInput = (record: Record) => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Update values and selection state\n    input.value = record.value;\n    input.selectionStart = record.selectionStart;\n    input.selectionEnd = record.selectionEnd;\n\n    this.props.onValueChange(record.value);\n  };\n\n  private _applyEdits = (record: Record) => {\n    // Save last selection state\n    const input = this._input;\n    const last = this._history.stack[this._history.offset];\n\n    if (last && input) {\n      this._history.stack[this._history.offset] = {\n        ...last,\n        selectionStart: input.selectionStart,\n        selectionEnd: input.selectionEnd,\n      };\n    }\n\n    // Save the changes\n    this._recordChange(record);\n    this._updateInput(record);\n  };\n\n  private _undoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the previous edit\n    const record = stack[offset - 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.max(offset - 1, 0);\n    }\n  };\n\n  private _redoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the next edit\n    const record = stack[offset + 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.min(offset + 1, stack.length - 1);\n    }\n  };\n\n  private _handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    const { tabSize, insertSpaces, ignoreTabKey, onKeyDown } = this.props;\n\n    if (onKeyDown) {\n      onKeyDown(e);\n\n      if (e.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (e.keyCode === KEYCODE_ESCAPE) {\n      e.currentTarget.blur();\n    }\n\n    const { value, selectionStart, selectionEnd } = e.currentTarget;\n\n    const tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n    if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.state.capture) {\n      // Prevent focus change\n      e.preventDefault();\n\n      if (e.shiftKey) {\n        // Unindent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const nextValue = value\n          .split('\\n')\n          .map((line, i) => {\n            if (\n              i >= startLine &&\n              i <= endLine &&\n              line.startsWith(tabCharacter)\n            ) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          })\n          .join('\\n');\n\n        if (value !== nextValue) {\n          const startLineText = linesBeforeCaret[startLine];\n\n          this._applyEdits({\n            value: nextValue,\n            // Move the start cursor if first line in selection was modified\n            // It was modified only if it started with a tab\n            selectionStart: startLineText?.startsWith(tabCharacter)\n              ? selectionStart - tabCharacter.length\n              : selectionStart,\n            // Move the end cursor by total number of characters removed\n            selectionEnd: selectionEnd - (value.length - nextValue.length),\n          });\n        }\n      } else if (selectionStart !== selectionEnd) {\n        // Indent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const startLineText = linesBeforeCaret[startLine];\n\n        this._applyEdits({\n          value: value\n            .split('\\n')\n            .map((line, i) => {\n              if (i >= startLine && i <= endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            })\n            .join('\\n'),\n          // Move the start cursor by number of characters added in first line of selection\n          // Don't move it if it there was no text before cursor\n          selectionStart:\n            startLineText && /\\S/.test(startLineText)\n              ? selectionStart + tabCharacter.length\n              : selectionStart,\n          // Move the end cursor by total number of characters added\n          selectionEnd:\n            selectionEnd + tabCharacter.length * (endLine - startLine + 1),\n        });\n      } else {\n        const updatedSelection = selectionStart + tabCharacter.length;\n\n        this._applyEdits({\n          // Insert tab character at caret\n          value:\n            value.substring(0, selectionStart) +\n            tabCharacter +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_BACKSPACE) {\n      const hasSelection = selectionStart !== selectionEnd;\n      const textBeforeCaret = value.substring(0, selectionStart);\n\n      if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n        // Prevent default delete behaviour\n        e.preventDefault();\n\n        const updatedSelection = selectionStart - tabCharacter.length;\n\n        this._applyEdits({\n          // Remove tab character at caret\n          value:\n            value.substring(0, selectionStart - tabCharacter.length) +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_ENTER) {\n      // Ignore selections\n      if (selectionStart === selectionEnd) {\n        // Get the current line\n        const line = this._getLines(value, selectionStart).pop();\n        const matches = line?.match(/^\\s+/);\n\n        if (matches?.[0]) {\n          e.preventDefault();\n\n          // Preserve indentation on inserting a new line\n          const indent = '\\n' + matches[0];\n          const updatedSelection = selectionStart + indent.length;\n\n          this._applyEdits({\n            // Insert indentation character at caret\n            value:\n              value.substring(0, selectionStart) +\n              indent +\n              value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection,\n          });\n        }\n      }\n    } else if (\n      e.keyCode === KEYCODE_PARENS ||\n      e.keyCode === KEYCODE_BRACKETS ||\n      e.keyCode === KEYCODE_QUOTE ||\n      e.keyCode === KEYCODE_BACK_QUOTE\n    ) {\n      let chars;\n\n      if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n        chars = ['(', ')'];\n      } else if (e.keyCode === KEYCODE_BRACKETS) {\n        if (e.shiftKey) {\n          chars = ['{', '}'];\n        } else {\n          chars = ['[', ']'];\n        }\n      } else if (e.keyCode === KEYCODE_QUOTE) {\n        if (e.shiftKey) {\n          chars = ['\"', '\"'];\n        } else {\n          chars = [\"'\", \"'\"];\n        }\n      } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n        chars = ['`', '`'];\n      }\n\n      // If text is selected, wrap them in the characters\n      if (selectionStart !== selectionEnd && chars) {\n        e.preventDefault();\n\n        this._applyEdits({\n          value:\n            value.substring(0, selectionStart) +\n            chars[0] +\n            value.substring(selectionStart, selectionEnd) +\n            chars[1] +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart,\n          selectionEnd: selectionEnd + 2,\n        });\n      }\n    } else if (\n      (isMacLike\n        ? // Trigger undo with ⌘+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z\n        : // Trigger undo with Ctrl+Z on other platforms\n          e.ctrlKey && e.keyCode === KEYCODE_Z) &&\n      !e.shiftKey &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._undoEdit();\n    } else if (\n      (isMacLike\n        ? // Trigger redo with ⌘+Shift+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\n        : isWindows\n        ? // Trigger redo with Ctrl+Y on Windows\n          e.ctrlKey && e.keyCode === KEYCODE_Y\n        : // Trigger redo with Ctrl+Shift+Z on other platforms\n          e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._redoEdit();\n    } else if (\n      e.keyCode === KEYCODE_M &&\n      e.ctrlKey &&\n      (isMacLike ? e.shiftKey : true)\n    ) {\n      e.preventDefault();\n\n      // Toggle capturing tab key so users can focus away\n      this.setState((state) => ({\n        capture: !state.capture,\n      }));\n    }\n  };\n\n  private _handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { value, selectionStart, selectionEnd } = e.currentTarget;\n\n    this._recordChange(\n      {\n        value,\n        selectionStart,\n        selectionEnd,\n      },\n      true\n    );\n\n    this.props.onValueChange(value);\n  };\n\n  private _history: History = {\n    stack: [],\n    offset: -1,\n  };\n\n  private _input: HTMLTextAreaElement | null = null;\n\n  get session() {\n    return {\n      history: this._history,\n    };\n  }\n\n  set session(session: { history: History }) {\n    this._history = session.history;\n  }\n\n  render() {\n    const {\n      value,\n      style,\n      padding,\n      highlight,\n      textareaId,\n      textareaClassName,\n      autoFocus,\n      disabled,\n      form,\n      maxLength,\n      minLength,\n      name,\n      placeholder,\n      readOnly,\n      required,\n      onClick,\n      onFocus,\n      onBlur,\n      onKeyUp,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onKeyDown,\n      onValueChange,\n      tabSize,\n      insertSpaces,\n      ignoreTabKey,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      preClassName,\n      ...rest\n    } = this.props;\n\n    const contentStyle = {\n      paddingTop: padding,\n      paddingRight: padding,\n      paddingBottom: padding,\n      paddingLeft: padding,\n    };\n\n    const highlighted = highlight(value);\n\n    return (\n      <div {...rest} style={{ ...styles.container, ...style }}>\n        <textarea\n          ref={(c) => (this._input = c)}\n          style={{\n            ...styles.editor,\n            ...styles.textarea,\n            ...contentStyle,\n          }}\n          className={\n            className + (textareaClassName ? ` ${textareaClassName}` : '')\n          }\n          id={textareaId}\n          value={value}\n          onChange={this._handleChange}\n          onKeyDown={this._handleKeyDown}\n          onClick={onClick}\n          onKeyUp={onKeyUp}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          disabled={disabled}\n          form={form}\n          maxLength={maxLength}\n          minLength={minLength}\n          name={name}\n          placeholder={placeholder}\n          readOnly={readOnly}\n          required={required}\n          autoFocus={autoFocus}\n          autoCapitalize=\"off\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          spellCheck={false}\n          data-gramm={false}\n        />\n        <pre\n          className={preClassName}\n          aria-hidden=\"true\"\n          style={{ ...styles.editor, ...styles.highlight, ...contentStyle }}\n          {...(typeof highlighted === 'string'\n            ? { dangerouslySetInnerHTML: { __html: highlighted + '<br />' } }\n            : { children: highlighted })}\n        />\n        {/* eslint-disable-next-line react/no-danger */}\n        <style type=\"text/css\" dangerouslySetInnerHTML={{ __html: cssText }} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    boxSizing: 'border-box',\n    padding: 0,\n    overflow: 'hidden',\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    resize: 'none',\n    color: 'inherit',\n    overflow: 'hidden',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent',\n  },\n  highlight: {\n    position: 'relative',\n    pointerEvents: 'none',\n  },\n  editor: {\n    margin: 0,\n    border: 0,\n    background: 'none',\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    overflowWrap: 'break-word',\n  },\n} as const;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}