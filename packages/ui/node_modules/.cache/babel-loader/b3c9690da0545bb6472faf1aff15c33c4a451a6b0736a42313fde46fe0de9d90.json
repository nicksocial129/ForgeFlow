{"ast":null,"code":"'use strict';\n\nvar refractorJavadoclike = require('./javadoclike.js');\nmodule.exports = jsdoc;\njsdoc.displayName = 'jsdoc';\njsdoc.aliases = [];\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike);\n  (function (Prism) {\n    var javascript = Prism.languages.javascript;\n    var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;\n    var parameterPrefix = '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)';\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    });\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [{\n        pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n        lookbehind: true,\n        inside: {\n          punctuation: /[.,:?=<>|{}()[\\]]/\n        }\n      }, {\n        pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }],\n      example: {\n        pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    });\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n  })(Prism);\n}","map":{"version":3,"names":["refractorJavadoclike","require","module","exports","jsdoc","displayName","aliases","Prism","register","javascript","languages","type","source","parameterPrefix","extend","parameter","pattern","RegExp","lookbehind","inside","punctuation","insertBefore","code","alias","example","javadoclike","addSupport"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/refractor/lang/jsdoc.js"],"sourcesContent":["'use strict'\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = jsdoc\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  ;(function(Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source\n    var parameterPrefix =\n      '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            punctuation: /[.,:?=<>|{}()[\\]]/\n          }\n        },\n        {\n          pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      ],\n      example: {\n        pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACtDC,MAAM,CAACC,OAAO,GAAGC,KAAK;AACtBA,KAAK,CAACC,WAAW,GAAG,OAAO;AAC3BD,KAAK,CAACE,OAAO,GAAG,EAAE;AAClB,SAASF,KAAKA,CAACG,KAAK,EAAE;EACpBA,KAAK,CAACC,QAAQ,CAACR,oBAAoB,CAAC;EACnC,CAAC,UAASO,KAAK,EAAE;IAChB,IAAIE,UAAU,GAAGF,KAAK,CAACG,SAAS,CAACD,UAAU;IAC3C,IAAIE,IAAI,GAAG,oCAAoC,CAACC,MAAM;IACtD,IAAIC,eAAe,GACjB,0CAA0C,GAAGF,IAAI,GAAG,SAAS;IAC/DJ,KAAK,CAACG,SAAS,CAACN,KAAK,GAAGG,KAAK,CAACG,SAAS,CAACI,MAAM,CAAC,aAAa,EAAE;MAC5DC,SAAS,EAAE;QACT;QACAC,OAAO,EAAEC,MAAM,CAACJ,eAAe,GAAG,4BAA4B,CAACD,MAAM,CAAC;QACtEM,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACNC,WAAW,EAAE;QACf;MACF;IACF,CAAC,CAAC;IACFb,KAAK,CAACG,SAAS,CAACW,YAAY,CAAC,OAAO,EAAE,SAAS,EAAE;MAC/C,oBAAoB,EAAE;QACpB;QACAL,OAAO,EAAEC,MAAM,CACbJ,eAAe,GAAG,6CAA6C,CAACD,MAClE,CAAC;QACDM,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACNJ,SAAS,EAAE;YACTC,OAAO,EAAE,0BAA0B;YACnCE,UAAU,EAAE,IAAI;YAChBC,MAAM,EAAE;cACNC,WAAW,EAAE;YACf;UACF,CAAC;UACDE,IAAI,EAAE;YACJN,OAAO,EAAE,mBAAmB;YAC5BE,UAAU,EAAE,IAAI;YAChBC,MAAM,EAAEV,UAAU;YAClBc,KAAK,EAAE;UACT,CAAC;UACDH,WAAW,EAAE;QACf;MACF,CAAC;MACD,YAAY,EAAE,CACZ;QACEJ,OAAO,EAAEC,MAAM,CAAC,eAAe,GAAGN,IAAI,CAAC;QACvCO,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACNC,WAAW,EAAE;QACf;MACF,CAAC,EACD;QACEJ,OAAO,EAAE,mFAAmF;QAC5FE,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACNC,WAAW,EAAE;QACf;MACF,CAAC,CACF;MACDI,OAAO,EAAE;QACPR,OAAO,EAAE,kDAAkD;QAC3DE,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACNG,IAAI,EAAE;YACJN,OAAO,EAAE,sBAAsB;YAC/BE,UAAU,EAAE,IAAI;YAChBC,MAAM,EAAEV,UAAU;YAClBc,KAAK,EAAE;UACT;QACF;MACF;IACF,CAAC,CAAC;IACFhB,KAAK,CAACG,SAAS,CAACe,WAAW,CAACC,UAAU,CAAC,YAAY,EAAEnB,KAAK,CAACG,SAAS,CAACN,KAAK,CAAC;EAC7E,CAAC,EAAEG,KAAK,CAAC;AACX"},"metadata":{},"sourceType":"script","externalDependencies":[]}