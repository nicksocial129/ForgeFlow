{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMerror = void 0;\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\nvar MmlMerror = function (_super) {\n  __extends(MmlMerror, _super);\n  function MmlMerror() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;\n    return _this;\n  }\n  Object.defineProperty(MmlMerror.prototype, \"kind\", {\n    get: function () {\n      return 'merror';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMerror.prototype, \"arity\", {\n    get: function () {\n      return -1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMerror.prototype, \"linebreakContainer\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlMerror.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);\n  return MmlMerror;\n}(MmlNode_js_1.AbstractMmlNode);\nexports.MmlMerror = MmlMerror;","map":{"version":3,"names":["MmlNode_js_1","require","MmlMerror","_super","__extends","_this","apply","arguments","texclass","TEXCLASS","ORD","Object","defineProperty","prototype","get","defaults","__assign","AbstractMmlNode","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/merror.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMerror node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMerror node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMerror extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'merror';\n  }\n\n  /**\n   * <merror> gets an inferred mrow\n   * @override\n   */\n  public get arity() {\n    return -1;\n  }\n\n  /**\n   * <merror> can contain line breaks\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAAA,YAAA,GAAAC,OAAA;AAOA,IAAAC,SAAA,aAAAC,MAAA;EAA+BC,SAAA,CAAAF,SAAA,EAAAC,MAAA;EAA/B,SAAAD,UAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IAYYF,KAAA,CAAAG,QAAQ,GAAGR,YAAA,CAAAS,QAAQ,CAACC,GAAG;;EAyBnC;EApBEC,MAAA,CAAAC,cAAA,CAAWV,SAAA,CAAAW,SAAA,QAAI;SAAf,SAAAC,CAAA;MACE,OAAO,QAAQ;IACjB,CAAC;;;;EAMDH,MAAA,CAAAC,cAAA,CAAWV,SAAA,CAAAW,SAAA,SAAK;SAAhB,SAAAC,CAAA;MACE,OAAO,CAAC,CAAC;IACX,CAAC;;;;EAMDH,MAAA,CAAAC,cAAA,CAAWV,SAAA,CAAAW,SAAA,sBAAkB;SAA7B,SAAAC,CAAA;MACE,OAAO,IAAI;IACb,CAAC;;;;EA9BaZ,SAAA,CAAAa,QAAQ,GAAAC,QAAA,KACjBhB,YAAA,CAAAiB,eAAe,CAACF,QAAQ;EA+B/B,OAAAb,SAAC;CAAA,CArC8BF,YAAA,CAAAiB,eAAe;AAAjCC,OAAA,CAAAhB,SAAA,GAAAA,SAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}