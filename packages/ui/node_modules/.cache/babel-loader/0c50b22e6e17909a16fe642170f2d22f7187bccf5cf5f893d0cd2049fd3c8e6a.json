{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVG = exports.XLINKNS = exports.SVGNS = void 0;\nvar OutputJax_js_1 = require(\"./common/OutputJax.js\");\nvar WrapperFactory_js_1 = require(\"./svg/WrapperFactory.js\");\nvar tex_js_1 = require(\"./svg/fonts/tex.js\");\nvar FontCache_js_1 = require(\"./svg/FontCache.js\");\nvar string_js_1 = require(\"../util/string.js\");\nvar lengths_js_1 = require(\"../util/lengths.js\");\nexports.SVGNS = 'http://www.w3.org/2000/svg';\nexports.XLINKNS = 'http://www.w3.org/1999/xlink';\nvar SVG = function (_super) {\n  __extends(SVG, _super);\n  function SVG(options) {\n    if (options === void 0) {\n      options = null;\n    }\n    var _this = _super.call(this, options, WrapperFactory_js_1.SVGWrapperFactory, tex_js_1.TeXFont) || this;\n    _this.minwidth = 0;\n    _this.shift = 0;\n    _this.container = null;\n    _this.svgStyles = null;\n    _this.fontCache = new FontCache_js_1.FontCache(_this);\n    return _this;\n  }\n  SVG.prototype.initialize = function () {\n    if (this.options.fontCache === 'global') {\n      this.fontCache.clearCache();\n    }\n  };\n  SVG.prototype.clearFontCache = function () {\n    this.fontCache.clearCache();\n  };\n  SVG.prototype.reset = function () {\n    this.clearFontCache();\n  };\n  SVG.prototype.setScale = function (node) {\n    if (this.options.scale !== 1) {\n      this.adaptor.setStyle(node, 'fontSize', (0, lengths_js_1.percent)(this.options.scale));\n    }\n  };\n  SVG.prototype.escaped = function (math, html) {\n    this.setDocument(html);\n    return this.html('span', {}, [this.text(math.math)]);\n  };\n  SVG.prototype.styleSheet = function (html) {\n    if (this.svgStyles) {\n      return this.svgStyles;\n    }\n    var sheet = this.svgStyles = _super.prototype.styleSheet.call(this, html);\n    this.adaptor.setAttribute(sheet, 'id', SVG.STYLESHEETID);\n    return sheet;\n  };\n  SVG.prototype.pageElements = function (html) {\n    if (this.options.fontCache === 'global' && !this.findCache(html)) {\n      return this.svg('svg', {\n        id: SVG.FONTCACHEID,\n        style: {\n          display: 'none'\n        }\n      }, [this.fontCache.getCache()]);\n    }\n    return null;\n  };\n  SVG.prototype.findCache = function (html) {\n    var adaptor = this.adaptor;\n    var svgs = adaptor.tags(adaptor.body(html.document), 'svg');\n    for (var i = svgs.length - 1; i >= 0; i--) {\n      if (this.adaptor.getAttribute(svgs[i], 'id') === SVG.FONTCACHEID) {\n        return true;\n      }\n    }\n    return false;\n  };\n  SVG.prototype.processMath = function (math, parent) {\n    var container = this.container;\n    this.container = parent;\n    var wrapper = this.factory.wrap(math);\n    var _a = __read(this.createRoot(wrapper), 2),\n      svg = _a[0],\n      g = _a[1];\n    this.typesetSVG(wrapper, svg, g);\n    this.container = container;\n  };\n  SVG.prototype.createRoot = function (wrapper) {\n    var _a = wrapper.getOuterBBox(),\n      w = _a.w,\n      h = _a.h,\n      d = _a.d,\n      pwidth = _a.pwidth;\n    var px = wrapper.metrics.em / 1000;\n    var W = Math.max(w, px);\n    var H = Math.max(h + d, px);\n    var g = this.svg('g', {\n      stroke: 'currentColor',\n      fill: 'currentColor',\n      'stroke-width': 0,\n      transform: 'scale(1,-1)'\n    });\n    var adaptor = this.adaptor;\n    var svg = adaptor.append(this.container, this.svg('svg', {\n      xmlns: exports.SVGNS,\n      width: this.ex(W),\n      height: this.ex(H),\n      role: 'img',\n      focusable: false,\n      style: {\n        'vertical-align': this.ex(-d)\n      },\n      viewBox: [0, this.fixed(-h * 1000, 1), this.fixed(W * 1000, 1), this.fixed(H * 1000, 1)].join(' ')\n    }, [g]));\n    if (W === .001) {\n      adaptor.setAttribute(svg, 'preserveAspectRatio', 'xMidYMid slice');\n      if (w < 0) {\n        adaptor.setStyle(this.container, 'margin-right', this.ex(w));\n      }\n    }\n    if (pwidth) {\n      adaptor.setStyle(svg, 'min-width', this.ex(W));\n      adaptor.setAttribute(svg, 'width', pwidth);\n      adaptor.removeAttribute(svg, 'viewBox');\n      var scale = this.fixed(wrapper.metrics.ex / (this.font.params.x_height * 1000), 6);\n      adaptor.setAttribute(g, 'transform', \"scale(\".concat(scale, \",-\").concat(scale, \") translate(0, \").concat(this.fixed(-h * 1000, 1), \")\"));\n    }\n    if (this.options.fontCache !== 'none') {\n      adaptor.setAttribute(svg, 'xmlns:xlink', exports.XLINKNS);\n    }\n    return [svg, g];\n  };\n  SVG.prototype.typesetSVG = function (wrapper, svg, g) {\n    var adaptor = this.adaptor;\n    this.minwidth = this.shift = 0;\n    if (this.options.fontCache === 'local') {\n      this.fontCache.clearCache();\n      this.fontCache.useLocalID(this.options.localID);\n      adaptor.insert(this.fontCache.getCache(), g);\n    }\n    wrapper.toSVG(g);\n    this.fontCache.clearLocalID();\n    if (this.minwidth) {\n      adaptor.setStyle(svg, 'minWidth', this.ex(this.minwidth));\n      adaptor.setStyle(this.container, 'minWidth', this.ex(this.minwidth));\n    } else if (this.shift) {\n      var align = adaptor.getAttribute(this.container, 'justify') || 'center';\n      this.setIndent(svg, align, this.shift);\n    }\n  };\n  SVG.prototype.setIndent = function (svg, align, shift) {\n    if (align === 'center' || align === 'left') {\n      this.adaptor.setStyle(svg, 'margin-left', this.ex(shift));\n    }\n    if (align === 'center' || align === 'right') {\n      this.adaptor.setStyle(svg, 'margin-right', this.ex(-shift));\n    }\n  };\n  SVG.prototype.ex = function (m) {\n    m /= this.font.params.x_height;\n    return Math.abs(m) < .001 ? '0' : m.toFixed(3).replace(/\\.?0+$/, '') + 'ex';\n  };\n  SVG.prototype.svg = function (kind, properties, children) {\n    if (properties === void 0) {\n      properties = {};\n    }\n    if (children === void 0) {\n      children = [];\n    }\n    return this.html(kind, properties, children, exports.SVGNS);\n  };\n  SVG.prototype.unknownText = function (text, variant) {\n    var metrics = this.math.metrics;\n    var scale = this.font.params.x_height / metrics.ex * metrics.em * 1000;\n    var svg = this.svg('text', {\n      'data-variant': variant,\n      transform: 'scale(1,-1)',\n      'font-size': this.fixed(scale, 1) + 'px'\n    }, [this.text(text)]);\n    var adaptor = this.adaptor;\n    if (variant !== '-explicitFont') {\n      var c = (0, string_js_1.unicodeChars)(text);\n      if (c.length !== 1 || c[0] < 0x1D400 || c[0] > 0x1D7FF) {\n        var _a = __read(this.font.getCssFont(variant), 3),\n          family = _a[0],\n          italic = _a[1],\n          bold = _a[2];\n        adaptor.setAttribute(svg, 'font-family', family);\n        if (italic) {\n          adaptor.setAttribute(svg, 'font-style', 'italic');\n        }\n        if (bold) {\n          adaptor.setAttribute(svg, 'font-weight', 'bold');\n        }\n      }\n    }\n    return svg;\n  };\n  SVG.prototype.measureTextNode = function (text) {\n    var adaptor = this.adaptor;\n    text = adaptor.clone(text);\n    adaptor.removeAttribute(text, 'transform');\n    var ex = this.fixed(this.font.params.x_height * 1000, 1);\n    var svg = this.svg('svg', {\n      position: 'absolute',\n      visibility: 'hidden',\n      width: '1ex',\n      height: '1ex',\n      viewBox: [0, 0, ex, ex].join(' ')\n    }, [text]);\n    adaptor.append(adaptor.body(adaptor.document), svg);\n    var w = adaptor.nodeSize(text, 1000, true)[0];\n    adaptor.remove(svg);\n    return {\n      w: w,\n      h: .75,\n      d: .2\n    };\n  };\n  SVG.NAME = 'SVG';\n  SVG.OPTIONS = __assign(__assign({}, OutputJax_js_1.CommonOutputJax.OPTIONS), {\n    internalSpeechTitles: true,\n    titleID: 0,\n    fontCache: 'local',\n    localID: null\n  });\n  SVG.commonStyles = {\n    'mjx-container[jax=\"SVG\"]': {\n      direction: 'ltr'\n    },\n    'mjx-container[jax=\"SVG\"] > svg': {\n      overflow: 'visible',\n      'min-height': '1px',\n      'min-width': '1px'\n    },\n    'mjx-container[jax=\"SVG\"] > svg a': {\n      fill: 'blue',\n      stroke: 'blue'\n    }\n  };\n  SVG.FONTCACHEID = 'MJX-SVG-global-cache';\n  SVG.STYLESHEETID = 'MJX-SVG-styles';\n  return SVG;\n}(OutputJax_js_1.CommonOutputJax);\nexports.SVG = SVG;","map":{"version":3,"names":["OutputJax_js_1","require","WrapperFactory_js_1","tex_js_1","FontCache_js_1","string_js_1","lengths_js_1","exports","SVGNS","XLINKNS","SVG","_super","__extends","options","_this","call","SVGWrapperFactory","TeXFont","minwidth","shift","container","svgStyles","fontCache","FontCache","prototype","initialize","clearCache","clearFontCache","reset","setScale","node","scale","adaptor","setStyle","percent","escaped","math","html","setDocument","text","styleSheet","sheet","setAttribute","STYLESHEETID","pageElements","findCache","svg","id","FONTCACHEID","style","display","getCache","svgs","tags","body","document","i","length","getAttribute","processMath","parent","wrapper","factory","wrap","_a","__read","createRoot","g","typesetSVG","getOuterBBox","w","h","d","pwidth","px","metrics","em","W","Math","max","H","stroke","fill","transform","append","xmlns","width","ex","height","role","focusable","viewBox","fixed","join","removeAttribute","font","params","x_height","concat","useLocalID","localID","insert","toSVG","clearLocalID","align","setIndent","m","abs","toFixed","replace","kind","properties","children","unknownText","variant","c","unicodeChars","getCssFont","family","italic","bold","measureTextNode","clone","position","visibility","nodeSize","remove","NAME","OPTIONS","__assign","CommonOutputJax","internalSpeechTitles","titleID","commonStyles","direction","overflow"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/svg.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVG OutputJax object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CommonOutputJax, UnknownBBox} from './common/OutputJax.js';\nimport {OptionList} from '../util/Options.js';\nimport {MathDocument} from '../core/MathDocument.js';\nimport {MathItem} from '../core/MathItem.js';\nimport {MmlNode} from '../core/MmlTree/MmlNode.js';\nimport {SVGWrapper} from './svg/Wrapper.js';\nimport {SVGWrapperFactory} from './svg/WrapperFactory.js';\nimport {SVGFontData} from './svg/FontData.js';\nimport {TeXFont} from './svg/fonts/tex.js';\nimport {StyleList as CssStyleList} from '../util/StyleList.js';\nimport {FontCache} from './svg/FontCache.js';\nimport {unicodeChars} from '../util/string.js';\nimport {percent} from '../util/lengths.js';\n\nexport const SVGNS = 'http://www.w3.org/2000/svg';\nexport const XLINKNS = 'http://www.w3.org/1999/xlink';\n\n/*****************************************************************/\n/**\n *  Implements the CHTML class (extends AbstractOutputJax)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVG<N, T, D> extends\nCommonOutputJax<N, T, D, SVGWrapper<N, T, D>, SVGWrapperFactory<N, T, D>, SVGFontData, typeof SVGFontData> {\n\n  /**\n   * The name of the output jax\n   */\n  public static NAME: string = 'SVG';\n\n  /**\n   * @override\n   */\n  public static OPTIONS: OptionList = {\n    ...CommonOutputJax.OPTIONS,\n    internalSpeechTitles: true,     // insert <title> tags with speech content\n    titleID: 0,                     // initial id number to use for aria-labeledby titles\n    fontCache: 'local',             // or 'global' or 'none'\n    localID: null,                  // ID to use for local font cache (for single equation processing)\n  };\n\n  /**\n   *  The default styles for SVG\n   */\n  public static commonStyles: CssStyleList = {\n    'mjx-container[jax=\"SVG\"]': {\n      direction: 'ltr'\n    },\n    'mjx-container[jax=\"SVG\"] > svg': {\n      overflow: 'visible',\n      'min-height': '1px',\n      'min-width': '1px'\n    },\n    'mjx-container[jax=\"SVG\"] > svg a': {\n      fill: 'blue', stroke: 'blue'\n    }\n  };\n\n  /**\n   * The ID for the SVG element that stores the cached font paths\n   */\n  public static FONTCACHEID = 'MJX-SVG-global-cache';\n\n  /**\n   * The ID for the stylesheet element for the styles for the SVG output\n   */\n  public static STYLESHEETID = 'MJX-SVG-styles';\n\n  /**\n   * Stores the CHTMLWrapper factory\n   */\n  public factory: SVGWrapperFactory<N, T, D>;\n\n  /**\n   * Stores the information about the cached character glyphs\n   */\n  public fontCache: FontCache<N, T, D>;\n\n  /**\n   * Minimum width for tables with labels,\n   */\n  public minwidth: number = 0;\n  /**\n   * The shift for the main equation\n   */\n  public shift: number = 0;\n\n  /**\n   * The container element for the math\n   */\n  public container: N = null;\n\n  /**\n   * The SVG stylesheet, once it is constructed\n   */\n  public svgStyles: N = null;\n\n  /**\n   * @override\n   * @constructor\n   */\n  constructor(options: OptionList = null) {\n    super(options, SVGWrapperFactory as any, TeXFont);\n    this.fontCache = new FontCache(this);\n  }\n\n  /**\n   * @override\n   */\n  public initialize() {\n    if (this.options.fontCache === 'global') {\n      this.fontCache.clearCache();\n    }\n  }\n\n  /**\n   * Clear the font cache (use for resetting the global font cache)\n   */\n  public clearFontCache() {\n    this.fontCache.clearCache();\n  }\n\n  /**\n   * @override\n   */\n  public reset() {\n    this.clearFontCache();\n  }\n\n  /**\n   * @override\n   */\n  protected setScale(node: N) {\n    if (this.options.scale !== 1) {\n      this.adaptor.setStyle(node, 'fontSize', percent(this.options.scale));\n    }\n  }\n\n  /**\n   * @override\n   */\n  public escaped(math: MathItem<N, T, D>, html: MathDocument<N, T, D>) {\n    this.setDocument(html);\n    return this.html('span', {}, [this.text(math.math)]);\n  }\n\n  /**\n   * @override\n   */\n  public styleSheet(html: MathDocument<N, T, D>) {\n    if (this.svgStyles) {\n      return this.svgStyles;  // stylesheet is already added to the document\n    }\n    const sheet = this.svgStyles = super.styleSheet(html);\n    this.adaptor.setAttribute(sheet, 'id', SVG.STYLESHEETID);\n    return sheet;\n  }\n\n  /**\n   * @override\n   */\n  public pageElements(html: MathDocument<N, T, D>) {\n    if (this.options.fontCache === 'global' && !this.findCache(html)) {\n      return this.svg('svg', {id: SVG.FONTCACHEID, style: {display: 'none'}}, [this.fontCache.getCache()]);\n    }\n    return null as N;\n  }\n\n  /**\n   * Checks if there is already a font-cache element in the page\n   *\n   * @param {MathDocument} html   The document to search\n   * @return {boolean}            True if a font cache already exists in the page\n   */\n  protected findCache(html: MathDocument<N, T, D>): boolean {\n    const adaptor = this.adaptor;\n    const svgs = adaptor.tags(adaptor.body(html.document), 'svg');\n    for (let i = svgs.length - 1; i >= 0; i--) {\n      if (this.adaptor.getAttribute(svgs[i], 'id') === SVG.FONTCACHEID) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {MmlNode} math  The MML node whose SVG is to be produced\n   * @param {N} parent      The HTML node to contain the SVG\n   */\n  protected processMath(math: MmlNode, parent: N) {\n    //\n    // Cache the container (tooltips process into separate containers)\n    //\n    const container = this.container;\n    this.container = parent;\n    //\n    //  Get the wrapped math element and the SVG container\n    //  Then typeset the math into the SVG\n    //\n    const wrapper = this.factory.wrap(math);\n    const [svg, g] = this.createRoot(wrapper);\n    this.typesetSVG(wrapper, svg, g);\n    //\n    //  Put back the original container\n    //\n    this.container = container;\n  }\n\n  /**\n   * @param {SVGWrapper} wrapper   The wrapped math to process\n   * @return {[N, N]}              The svg and g nodes for the math\n   */\n  protected createRoot(wrapper: SVGWrapper<N, T, D>): [N, N] {\n    const {w, h, d, pwidth} = wrapper.getOuterBBox();\n    const px = wrapper.metrics.em / 1000;\n    const W = Math.max(w, px); // make sure we are at least one px wide (needed for e.g. \\llap)\n    const H = Math.max(h + d, px); // make sure we are at least one px tall (needed for e.g., \\smash)\n    //\n    //  The container that flips the y-axis and sets the colors to inherit from the surroundings\n    //\n    const g = this.svg('g', {\n      stroke: 'currentColor', fill: 'currentColor',\n      'stroke-width': 0, transform: 'scale(1,-1)'\n    }) as N;\n    //\n    //  The svg element with its viewBox, size and alignment\n    //\n    const adaptor = this.adaptor;\n    const svg = adaptor.append(this.container, this.svg('svg', {\n      xmlns: SVGNS,\n      width: this.ex(W), height: this.ex(H),\n      role: 'img', focusable: false,\n      style: {'vertical-align': this.ex(-d)},\n      viewBox: [0, this.fixed(-h * 1000, 1), this.fixed(W * 1000, 1), this.fixed(H * 1000, 1)].join(' ')\n    }, [g])) as N;\n    if (W === .001) {\n      adaptor.setAttribute(svg, 'preserveAspectRatio', 'xMidYMid slice');\n      if (w < 0) {\n        adaptor.setStyle(this.container, 'margin-right', this.ex(w));\n      }\n    }\n    if (pwidth) {\n      //\n      // Use width 100% with no viewbox, and instead scale and translate to achieve the same result\n      //\n      adaptor.setStyle(svg, 'min-width', this.ex(W));\n      adaptor.setAttribute(svg, 'width', pwidth);\n      adaptor.removeAttribute(svg, 'viewBox');\n      const scale = this.fixed(wrapper.metrics.ex / (this.font.params.x_height * 1000), 6);\n      adaptor.setAttribute(g, 'transform', `scale(${scale},-${scale}) translate(0, ${this.fixed(-h * 1000, 1)})`);\n    }\n    if (this.options.fontCache !== 'none') {\n      adaptor.setAttribute(svg, 'xmlns:xlink', XLINKNS);\n    }\n    return [svg, g];\n  }\n\n  /**\n   * Typeset the math and add minwidth (from mtables), or set the alignment and indentation\n   * of the finalized expression.\n   *\n   * @param {SVGWrapper} wrapper   The wrapped math to typeset\n   * @param {N} svg                The main svg element for the typeet math\n   * @param {N} g                  The group in which the math is typeset\n   */\n  protected typesetSVG(wrapper: SVGWrapper<N, T, D>, svg: N, g: N) {\n    const adaptor = this.adaptor;\n    //\n    //  Typeset the math and add minWidth (from mtables), or set the alignment and indentation\n    //    of the finalized expression\n    //\n    this.minwidth = this.shift = 0;\n    if (this.options.fontCache === 'local') {\n      this.fontCache.clearCache();\n      this.fontCache.useLocalID(this.options.localID);\n      adaptor.insert(this.fontCache.getCache(), g);\n    }\n    wrapper.toSVG(g);\n    this.fontCache.clearLocalID();\n    if (this.minwidth) {\n      adaptor.setStyle(svg, 'minWidth', this.ex(this.minwidth));\n      adaptor.setStyle(this.container, 'minWidth', this.ex(this.minwidth));\n    } else if (this.shift) {\n      const align = adaptor.getAttribute(this.container, 'justify') || 'center';\n      this.setIndent(svg, align, this.shift);\n    }\n  }\n\n  /**\n   * @param {N} svg         The svg node whose indentation is to be adjusted\n   * @param {string} align  The alignment for the node\n   * @param {number} shift  The indent (positive or negative) for the node\n   */\n  protected setIndent(svg: N, align: string, shift: number) {\n    if (align === 'center' || align === 'left') {\n      this.adaptor.setStyle(svg, 'margin-left', this.ex(shift));\n    }\n    if (align === 'center' || align === 'right') {\n      this.adaptor.setStyle(svg, 'margin-right', this.ex(-shift));\n    }\n  }\n\n  /**\n   * @param {number} m  A number to be shown in ex\n   * @return {string}   The number with units of ex\n   */\n  public ex(m: number): string {\n    m /= this.font.params.x_height;\n    return (Math.abs(m) < .001 ? '0' : m.toFixed(3).replace(/\\.?0+$/, '') + 'ex');\n  }\n\n  /**\n   * @param {string} kind             The kind of node to create\n   * @param {OptionList} properties   The properties to set for the element\n   * @param {(N|T)[]} children            The child nodes for this node\n   * @return {N}                      The newly created node in the SVG namespace\n   */\n  public svg(kind: string, properties: OptionList = {}, children: (N | T)[] = []): N {\n    return this.html(kind, properties, children, SVGNS);\n  }\n\n  /**\n   * @param {string} text      The text to be displayed\n   * @param {string} variant   The name of the variant for the text\n   * @return {N}               The text element containing the text\n   */\n  public unknownText(text: string, variant: string): N {\n    const metrics = this.math.metrics;\n    const scale = this.font.params.x_height / metrics.ex * metrics.em * 1000;\n    const svg = this.svg('text', {\n      'data-variant': variant,\n      transform: 'scale(1,-1)', 'font-size': this.fixed(scale, 1) + 'px'\n    }, [this.text(text)]);\n    const adaptor = this.adaptor;\n    if (variant !== '-explicitFont') {\n      const c = unicodeChars(text);\n      if (c.length !== 1 || c[0] < 0x1D400 || c[0] > 0x1D7FF) {\n        const [family, italic, bold] = this.font.getCssFont(variant);\n        adaptor.setAttribute(svg, 'font-family', family);\n        if (italic) {\n          adaptor.setAttribute(svg, 'font-style', 'italic');\n        }\n        if (bold) {\n          adaptor.setAttribute(svg, 'font-weight', 'bold');\n        }\n      }\n    }\n    return svg;\n  }\n\n  /**\n   * Measure the width of a text element by placing it in the page\n   *  and looking up its size (fake the height and depth, since we can't measure that)\n   *\n   * @param {N} text         The text element to measure\n   * @return {Object}        The width, height and depth for the text\n   */\n  public measureTextNode(text: N): UnknownBBox {\n    const adaptor = this.adaptor;\n    text = adaptor.clone(text);\n    adaptor.removeAttribute(text, 'transform');\n    const ex = this.fixed(this.font.params.x_height * 1000, 1);\n    const svg = this.svg('svg', {\n      position: 'absolute', visibility: 'hidden',\n      width: '1ex', height: '1ex',\n      viewBox: [0, 0, ex, ex].join(' ')\n    }, [text]);\n    adaptor.append(adaptor.body(adaptor.document), svg);\n    let w = adaptor.nodeSize(text, 1000, true)[0];\n    adaptor.remove(svg);\n    return {w: w, h: .75, d: .2};\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}