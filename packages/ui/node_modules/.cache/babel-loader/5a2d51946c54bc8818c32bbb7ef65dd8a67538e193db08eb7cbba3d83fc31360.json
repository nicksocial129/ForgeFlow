{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMiMixin = void 0;\nfunction CommonMiMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    class_1.prototype.computeBBox = function (bbox, _recompute) {\n      if (_recompute === void 0) {\n        _recompute = false;\n      }\n      _super.prototype.computeBBox.call(this, bbox);\n      this.copySkewIC(bbox);\n    };\n    return class_1;\n  }(Base);\n}\nexports.CommonMiMixin = CommonMiMixin;","map":{"version":3,"names":["CommonMiMixin","Base","_super","__extends","class_1","prototype","computeBBox","bbox","_recompute","call","copySkewIC","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/common/Wrappers/mi.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMi wrapper mixin for the MmlMi object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonMi interface\n */\nexport interface CommonMi extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonMi constructor\n */\nexport type MiConstructor = Constructor<CommonMi>;\n\n/*****************************************************************/\n/**\n *  The CommonMi wrapper mixin for the MmlMi object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMiMixin<T extends WrapperConstructor>(Base: T): MiConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, _recompute: boolean = false) {\n      super.computeBBox(bbox);\n      this.copySkewIC(bbox);\n    }\n  };\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAAgBA,aAAaA,CAA+BC,IAAO;EAEjE,iBAAAC,MAAA;IAAqBC,SAAA,CAAAC,OAAA,EAAAF,MAAA;IAAd,SAAAE,QAAA;;IASP;IAJSA,OAAA,CAAAC,SAAA,CAAAC,WAAW,GAAlB,UAAmBC,IAAU,EAAEC,UAA2B;MAA3B,IAAAA,UAAA;QAAAA,UAAA,QAA2B;MAAA;MACxDN,MAAA,CAAAG,SAAA,CAAMC,WAAW,CAAAG,IAAA,OAACF,IAAI,CAAC;MACvB,IAAI,CAACG,UAAU,CAACH,IAAI,CAAC;IACvB,CAAC;IACH,OAAAH,OAAC;EAAD,CAAC,CAToBH,IAAI;AAW3B;AAbAU,OAAA,CAAAX,aAAA,GAAAA,aAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}