{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MathtoolsUtil = void 0;\nvar BaseItems_js_1 = require(\"../base/BaseItems.js\");\nvar ParseUtil_js_1 = __importDefault(require(\"../ParseUtil.js\"));\nvar TexParser_js_1 = __importDefault(require(\"../TexParser.js\"));\nvar TexError_js_1 = __importDefault(require(\"../TexError.js\"));\nvar Symbol_js_1 = require(\"../Symbol.js\");\nvar Options_js_1 = require(\"../../../util/Options.js\");\nvar MathtoolsMethods_js_1 = require(\"./MathtoolsMethods.js\");\nvar MathtoolsConfiguration_js_1 = require(\"./MathtoolsConfiguration.js\");\nexports.MathtoolsUtil = {\n  setDisplayLevel: function (mml, style) {\n    if (!style) return;\n    var _a = __read((0, Options_js_1.lookup)(style, {\n        '\\\\displaystyle': [true, 0],\n        '\\\\textstyle': [false, 0],\n        '\\\\scriptstyle': [false, 1],\n        '\\\\scriptscriptstyle': [false, 2]\n      }, [null, null]), 2),\n      display = _a[0],\n      script = _a[1];\n    if (display !== null) {\n      mml.attributes.set('displaystyle', display);\n      mml.attributes.set('scriptlevel', script);\n    }\n  },\n  checkAlignment: function (parser, name) {\n    var top = parser.stack.Top();\n    if (top.kind !== BaseItems_js_1.EqnArrayItem.prototype.kind) {\n      throw new TexError_js_1.default('NotInAlignment', '%1 can only be used in aligment environments', name);\n    }\n    return top;\n  },\n  addPairedDelims: function (config, cs, args) {\n    var delims = config.handlers.retrieve(MathtoolsConfiguration_js_1.PAIREDDELIMS);\n    delims.add(cs, new Symbol_js_1.Macro(cs, MathtoolsMethods_js_1.MathtoolsMethods.PairedDelimiters, args));\n  },\n  spreadLines: function (mtable, spread) {\n    if (!mtable.isKind('mtable')) return;\n    var rowspacing = mtable.attributes.get('rowspacing');\n    if (rowspacing) {\n      var add_1 = ParseUtil_js_1.default.dimen2em(spread);\n      rowspacing = rowspacing.split(/ /).map(function (s) {\n        return ParseUtil_js_1.default.Em(Math.max(0, ParseUtil_js_1.default.dimen2em(s) + add_1));\n      }).join(' ');\n    } else {\n      rowspacing = spread;\n    }\n    mtable.attributes.set('rowspacing', rowspacing);\n  },\n  plusOrMinus: function (name, n) {\n    n = n.trim();\n    if (!n.match(/^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)$/)) {\n      throw new TexError_js_1.default('NotANumber', 'Argument to %1 is not a number', name);\n    }\n    return n.match(/^[-+]/) ? n : '+' + n;\n  },\n  getScript: function (parser, name, pos) {\n    var arg = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));\n    if (arg === '') {\n      return parser.create('node', 'none');\n    }\n    var format = parser.options.mathtools[\"prescript-\".concat(pos, \"-format\")];\n    format && (arg = \"\".concat(format, \"{\").concat(arg, \"}\"));\n    return new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();\n  }\n};","map":{"version":3,"names":["BaseItems_js_1","require","ParseUtil_js_1","__importDefault","TexParser_js_1","TexError_js_1","Symbol_js_1","Options_js_1","MathtoolsMethods_js_1","MathtoolsConfiguration_js_1","exports","MathtoolsUtil","setDisplayLevel","mml","style","_a","__read","lookup","display","script","attributes","set","checkAlignment","parser","name","top","stack","Top","kind","EqnArrayItem","prototype","default","addPairedDelims","config","cs","args","delims","handlers","retrieve","PAIREDDELIMS","add","Macro","MathtoolsMethods","PairedDelimiters","spreadLines","mtable","spread","isKind","rowspacing","get","add_1","dimen2em","split","map","s","Em","Math","max","join","plusOrMinus","n","trim","match","getScript","pos","arg","trimSpaces","GetArgument","create","format","options","mathtools","concat","env","configuration"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsUtil.ts"],"sourcesContent":["/*************************************************************\n *  Copyright (c) 2021-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Utility functions for the mathtools package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {EqnArrayItem} from '../base/BaseItems.js';\nimport ParseUtil from '../ParseUtil.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {Macro} from '../Symbol.js';\nimport ParseOptions from '../ParseOptions.js';\nimport {lookup} from '../../../util/Options.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\nimport {MathtoolsMethods} from './MathtoolsMethods.js';\nimport {PAIREDDELIMS} from './MathtoolsConfiguration.js';\n\n/**\n * Utility functions for the Mathtools package.\n */\nexport const MathtoolsUtil = {\n\n  /**\n   * Set the displaystyle and scriptlevel attributes of an mstyle element\n   *\n   * @param {MmlNode} mml     The mstyle node to modify.\n   * @param {string} style    The TeX style macro to apply.\n   */\n  setDisplayLevel(mml: MmlNode, style: string) {\n    if (!style) return;\n    const [display, script] = lookup(style, {\n      '\\\\displaystyle':      [true, 0],\n      '\\\\textstyle':         [false, 0],\n      '\\\\scriptstyle':       [false, 1],\n      '\\\\scriptscriptstyle': [false, 2]\n    }, [null, null]);\n    if (display !== null) {\n      mml.attributes.set('displaystyle', display);\n      mml.attributes.set('scriptlevel', script);\n    }\n  },\n\n  /**\n   * Check that the top stack item is an alignment table.\n   *\n   * @param {TexParser} parser   The current TeX parser.\n   * @param {string} name        The name of the macro doing the checking.\n   * @return {EqnArrayItem}      The top item (an EqnArrayItem).\n   */\n  checkAlignment(parser: TexParser, name: string): EqnArrayItem {\n    const top = parser.stack.Top() as EqnArrayItem;\n    if (top.kind !== EqnArrayItem.prototype.kind) {\n      throw new TexError('NotInAlignment', '%1 can only be used in aligment environments', name);\n    }\n    return top;\n  },\n\n  /**\n   * Add a paired delimiter to the list of them.\n   *\n   * @param {ParseOptions} config   The parse options to modify.\n   * @param {string} cs             The control sequence for the paired delimiters.\n   * @param {string[]} args         The definition for the paired delimiters.  One of:\n   *                                   [left, right]\n   *                                   [left, right, body, argcount]\n   *                                   [left, right, body, argcount, pre, post]\n   */\n  addPairedDelims(config: ParseOptions, cs: string, args: string[]) {\n    const delims = config.handlers.retrieve(PAIREDDELIMS) as CommandMap;\n    delims.add(cs, new Macro(cs, MathtoolsMethods.PairedDelimiters, args));\n  },\n\n  /**\n   * Adjust the line spacing for a table.\n   *\n   * @param {MmlNode} mtable   The mtable node to adjust (if it is a table).\n   * @param {string} spread    The dimension to change by (number-with-units).\n   */\n  spreadLines(mtable: MmlNode, spread: string) {\n    if (!mtable.isKind('mtable')) return;\n    let rowspacing = mtable.attributes.get('rowspacing') as string;\n    if (rowspacing) {\n      const add = ParseUtil.dimen2em(spread);\n      rowspacing = rowspacing\n        .split(/ /)\n        .map(s => ParseUtil.Em(Math.max(0, ParseUtil.dimen2em(s) + add)))\n        .join(' ');\n    } else {\n      rowspacing = spread;\n    }\n    mtable.attributes.set('rowspacing', rowspacing);\n  },\n\n  /**\n   * Check if a string is a number and return it with an explicit plus if there isn't one.\n   *\n   * @param {string} name   The name of the macro doing the checking.\n   * @param {string} n      The string to test as a number.\n   * @return {srtring}      The number with an explicit sign.\n   */\n  plusOrMinus(name: string, n: string): string {\n    n = n.trim();\n    if (!n.match(/^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)$/)) {\n      throw new TexError('NotANumber', 'Argument to %1 is not a number', name);\n    }\n    return (n.match(/^[-+]/) ? n : '+' + n);\n  },\n\n  /**\n   * Parse a \\prescript argument, with its associated format, if any.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the calling macro (\\prescript).\n   * @param {string} pos         The position for the argument (sub, sup, arg).\n   * @return {MmlNode}           The parsed MML version of the argument.\n   */\n  getScript(parser: TexParser, name: string, pos: string): MmlNode {\n    let arg = ParseUtil.trimSpaces(parser.GetArgument(name));\n    if (arg === '') {\n      return parser.create('node', 'none');\n    }\n    const format = parser.options.mathtools[`prescript-${pos}-format`];\n    format && (arg = `${format}{${arg}}`);\n    return new TexParser(arg, parser.stack.env, parser.configuration).mml();\n  }\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}