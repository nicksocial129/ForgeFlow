{"ast":null,"code":"module.exports = function (hljs) {\n  var TYPEPARAM = {\n    begin: '<',\n    end: '>',\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: /'[a-zA-Z0-9_]+/\n    })]\n  };\n  return {\n    aliases: ['fs'],\n    keywords: 'abstract and as assert base begin class default delegate do done ' + 'downcast downto elif else end exception extern false finally for ' + 'fun function global if in inherit inline interface internal lazy let ' + 'match member module mutable namespace new null of open or ' + 'override private public rec return sig static struct then to ' + 'true try type upcast use val void when while with yield',\n    illegal: /\\/\\*/,\n    contains: [{\n      // monad builder keywords (matches before non-bang kws)\n      className: 'keyword',\n      begin: /\\b(yield|return|let|do)!/\n    }, {\n      className: 'string',\n      begin: '@\"',\n      end: '\"',\n      contains: [{\n        begin: '\"\"'\n      }]\n    }, {\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"'\n    }, hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)'), {\n      className: 'class',\n      beginKeywords: 'type',\n      end: '\\\\(|=|$',\n      excludeEnd: true,\n      contains: [hljs.UNDERSCORE_TITLE_MODE, TYPEPARAM]\n    }, {\n      className: 'meta',\n      begin: '\\\\[<',\n      end: '>\\\\]',\n      relevance: 10\n    }, {\n      className: 'symbol',\n      begin: '\\\\B(\\'[A-Za-z])\\\\b',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, hljs.C_LINE_COMMENT_MODE, hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      illegal: null\n    }), hljs.C_NUMBER_MODE]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","TYPEPARAM","begin","end","contains","inherit","TITLE_MODE","aliases","keywords","illegal","className","COMMENT","beginKeywords","excludeEnd","UNDERSCORE_TITLE_MODE","relevance","BACKSLASH_ESCAPE","C_LINE_COMMENT_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/fsharp.js"],"sourcesContent":["module.exports = function(hljs) {\n  var TYPEPARAM = {\n    begin: '<', end: '>',\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {begin: /'[a-zA-Z0-9_]+/})\n    ]\n  };\n\n  return {\n    aliases: ['fs'],\n    keywords:\n      'abstract and as assert base begin class default delegate do done ' +\n      'downcast downto elif else end exception extern false finally for ' +\n      'fun function global if in inherit inline interface internal lazy let ' +\n      'match member module mutable namespace new null of open or ' +\n      'override private public rec return sig static struct then to ' +\n      'true try type upcast use val void when while with yield',\n    illegal: /\\/\\*/,\n    contains: [\n      {\n        // monad builder keywords (matches before non-bang kws)\n        className: 'keyword',\n        begin: /\\b(yield|return|let|do)!/\n      },\n      {\n        className: 'string',\n        begin: '@\"', end: '\"',\n        contains: [{begin: '\"\"'}]\n      },\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"'\n      },\n      hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)'),\n      {\n        className: 'class',\n        beginKeywords: 'type', end: '\\\\(|=|$', excludeEnd: true,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          TYPEPARAM\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '\\\\[<', end: '>\\\\]',\n        relevance: 10\n      },\n      {\n        className: 'symbol',\n        begin: '\\\\B(\\'[A-Za-z])\\\\b',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,SAAS,GAAG;IACdC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAE,GAAG;IACpBC,QAAQ,EAAE,CACRJ,IAAI,CAACK,OAAO,CAACL,IAAI,CAACM,UAAU,EAAE;MAACJ,KAAK,EAAE;IAAgB,CAAC,CAAC;EAE5D,CAAC;EAED,OAAO;IACLK,OAAO,EAAE,CAAC,IAAI,CAAC;IACfC,QAAQ,EACN,mEAAmE,GACnE,mEAAmE,GACnE,uEAAuE,GACvE,4DAA4D,GAC5D,+DAA+D,GAC/D,yDAAyD;IAC3DC,OAAO,EAAE,MAAM;IACfL,QAAQ,EAAE,CACR;MACE;MACAM,SAAS,EAAE,SAAS;MACpBR,KAAK,EAAE;IACT,CAAC,EACD;MACEQ,SAAS,EAAE,QAAQ;MACnBR,KAAK,EAAE,IAAI;MAAEC,GAAG,EAAE,GAAG;MACrBC,QAAQ,EAAE,CAAC;QAACF,KAAK,EAAE;MAAI,CAAC;IAC1B,CAAC,EACD;MACEQ,SAAS,EAAE,QAAQ;MACnBR,KAAK,EAAE,KAAK;MAAEC,GAAG,EAAE;IACrB,CAAC,EACDH,IAAI,CAACW,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAChC;MACED,SAAS,EAAE,OAAO;MAClBE,aAAa,EAAE,MAAM;MAAET,GAAG,EAAE,SAAS;MAAEU,UAAU,EAAE,IAAI;MACvDT,QAAQ,EAAE,CACRJ,IAAI,CAACc,qBAAqB,EAC1Bb,SAAS;IAEb,CAAC,EACD;MACES,SAAS,EAAE,MAAM;MACjBR,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE,MAAM;MAC1BY,SAAS,EAAE;IACb,CAAC,EACD;MACEL,SAAS,EAAE,QAAQ;MACnBR,KAAK,EAAE,oBAAoB;MAC3BE,QAAQ,EAAE,CAACJ,IAAI,CAACgB,gBAAgB;IAClC,CAAC,EACDhB,IAAI,CAACiB,mBAAmB,EACxBjB,IAAI,CAACK,OAAO,CAACL,IAAI,CAACkB,iBAAiB,EAAE;MAACT,OAAO,EAAE;IAAI,CAAC,CAAC,EACrDT,IAAI,CAACmB,aAAa;EAEtB,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}