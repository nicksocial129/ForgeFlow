{"ast":null,"code":"module.exports = function (hljs) {\n  return {\n    aliases: ['adoc'],\n    contains: [\n    // block comment\n    hljs.COMMENT('^/{4,}\\\\n', '\\\\n/{4,}$',\n    // can also be done as...\n    //'^/{4,}$',\n    //'^/{4,}$',\n    {\n      relevance: 10\n    }),\n    // line comment\n    hljs.COMMENT('^//', '$', {\n      relevance: 0\n    }),\n    // title\n    {\n      className: 'title',\n      begin: '^\\\\.\\\\w.*$'\n    },\n    // example, admonition & sidebar blocks\n    {\n      begin: '^[=\\\\*]{4,}\\\\n',\n      end: '\\\\n^[=\\\\*]{4,}$',\n      relevance: 10\n    },\n    // headings\n    {\n      className: 'section',\n      relevance: 10,\n      variants: [{\n        begin: '^(={1,5}) .+?( \\\\1)?$'\n      }, {\n        begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'\n      }]\n    },\n    // document attributes\n    {\n      className: 'meta',\n      begin: '^:.+?:',\n      end: '\\\\s',\n      excludeEnd: true,\n      relevance: 10\n    },\n    // block attributes\n    {\n      className: 'meta',\n      begin: '^\\\\[.+?\\\\]$',\n      relevance: 0\n    },\n    // quoteblocks\n    {\n      className: 'quote',\n      begin: '^_{4,}\\\\n',\n      end: '\\\\n_{4,}$',\n      relevance: 10\n    },\n    // listing and literal blocks\n    {\n      className: 'code',\n      begin: '^[\\\\-\\\\.]{4,}\\\\n',\n      end: '\\\\n[\\\\-\\\\.]{4,}$',\n      relevance: 10\n    },\n    // passthrough blocks\n    {\n      begin: '^\\\\+{4,}\\\\n',\n      end: '\\\\n\\\\+{4,}$',\n      contains: [{\n        begin: '<',\n        end: '>',\n        subLanguage: 'xml',\n        relevance: 0\n      }],\n      relevance: 10\n    },\n    // lists (can only capture indicators)\n    {\n      className: 'bullet',\n      begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n    },\n    // admonition\n    {\n      className: 'symbol',\n      begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n      relevance: 10\n    },\n    // inline strong\n    {\n      className: 'strong',\n      // must not follow a word character or be followed by an asterisk or space\n      begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n      end: '(\\\\n{2}|\\\\*)',\n      // allow escaped asterisk followed by word char\n      contains: [{\n        begin: '\\\\\\\\*\\\\w',\n        relevance: 0\n      }]\n    },\n    // inline emphasis\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by a single quote or space\n      begin: '\\\\B\\'(?![\\'\\\\s])',\n      end: '(\\\\n{2}|\\')',\n      // allow escaped single quote followed by word char\n      contains: [{\n        begin: '\\\\\\\\\\'\\\\w',\n        relevance: 0\n      }],\n      relevance: 0\n    },\n    // inline emphasis (alt)\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by an underline or space\n      begin: '_(?![_\\\\s])',\n      end: '(\\\\n{2}|_)',\n      relevance: 0\n    },\n    // inline smart quotes\n    {\n      className: 'string',\n      variants: [{\n        begin: \"``.+?''\"\n      }, {\n        begin: \"`.+?'\"\n      }]\n    },\n    // inline code snippets (TODO should get same treatment as strong and emphasis)\n    {\n      className: 'code',\n      begin: '(`.+?`|\\\\+.+?\\\\+)',\n      relevance: 0\n    },\n    // indented literal block\n    {\n      className: 'code',\n      begin: '^[ \\\\t]',\n      end: '$',\n      relevance: 0\n    },\n    // horizontal rules\n    {\n      begin: '^\\'{3,}[ \\\\t]*$',\n      relevance: 10\n    },\n    // images and links\n    {\n      begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\n      returnBegin: true,\n      contains: [{\n        begin: '(link|image:?):',\n        relevance: 0\n      }, {\n        className: 'link',\n        begin: '\\\\w',\n        end: '[^\\\\[]+',\n        relevance: 0\n      }, {\n        className: 'string',\n        begin: '\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      }],\n      relevance: 10\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","aliases","contains","COMMENT","relevance","className","begin","end","variants","excludeEnd","subLanguage","returnBegin","excludeBegin"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/asciidoc.js"],"sourcesContent":["module.exports = function(hljs) {\n  return {\n    aliases: ['adoc'],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        //'^/{4,}$',\n        //'^/{4,}$',\n        {\n          relevance: 10\n        }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'section',\n        relevance: 10,\n        variants: [\n          {begin: '^(={1,5}) .+?( \\\\1)?$'},\n          {begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'},\n        ]\n      },\n      // document attributes\n      {\n        className: 'meta',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'meta',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'quote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [\n          {\n            begin: '<', end: '>',\n            subLanguage: 'xml',\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      },\n      // lists (can only capture indicators)\n      {\n        className: 'bullet',\n        begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n      },\n      // admonition\n      {\n        className: 'symbol',\n        begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n        relevance: 10\n      },\n      // inline strong\n      {\n        className: 'strong',\n        // must not follow a word character or be followed by an asterisk or space\n        begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n        end: '(\\\\n{2}|\\\\*)',\n        // allow escaped asterisk followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\*\\\\w',\n            relevance: 0\n          }\n        ]\n      },\n      // inline emphasis\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by a single quote or space\n        begin: '\\\\B\\'(?![\\'\\\\s])',\n        end: '(\\\\n{2}|\\')',\n        // allow escaped single quote followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\\\'\\\\w',\n            relevance: 0\n          }\n        ],\n        relevance: 0\n      },\n      // inline emphasis (alt)\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by an underline or space\n        begin: '_(?![_\\\\s])',\n        end: '(\\\\n{2}|_)',\n        relevance: 0\n      },\n      // inline smart quotes\n      {\n        className: 'string',\n        variants: [\n          {begin: \"``.+?''\"},\n          {begin: \"`.+?'\"}\n        ]\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      // horizontal rules\n      {\n        begin: '^\\'{3,}[ \\\\t]*$',\n        relevance: 10\n      },\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}