{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMrootMixin = void 0;\nfunction CommonMrootMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(class_1.prototype, \"surd\", {\n      get: function () {\n        return 2;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(class_1.prototype, \"root\", {\n      get: function () {\n        return 1;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    class_1.prototype.combineRootBBox = function (BBOX, sbox, H) {\n      var bbox = this.childNodes[this.root].getOuterBBox();\n      var h = this.getRootDimens(sbox, H)[1];\n      BBOX.combine(bbox, 0, h);\n    };\n    class_1.prototype.getRootDimens = function (sbox, H) {\n      var surd = this.childNodes[this.surd];\n      var bbox = this.childNodes[this.root].getOuterBBox();\n      var offset = (surd.size < 0 ? .5 : .6) * sbox.w;\n      var w = bbox.w,\n        rscale = bbox.rscale;\n      var W = Math.max(w, offset / rscale);\n      var dx = Math.max(0, W - w);\n      var h = this.rootHeight(bbox, sbox, surd.size, H);\n      var x = W * rscale - offset;\n      return [x, h, dx];\n    };\n    class_1.prototype.rootHeight = function (rbox, sbox, size, H) {\n      var h = sbox.h + sbox.d;\n      var b = (size < 0 ? 1.9 : .55 * h) - (h - H);\n      return b + Math.max(0, rbox.d * rbox.rscale);\n    };\n    return class_1;\n  }(Base);\n}\nexports.CommonMrootMixin = CommonMrootMixin;","map":{"version":3,"names":["CommonMrootMixin","Base","_super","__extends","class_1","Object","defineProperty","prototype","get","combineRootBBox","BBOX","sbox","H","bbox","childNodes","root","getOuterBBox","h","getRootDimens","combine","surd","offset","size","w","rscale","W","Math","max","dx","rootHeight","x","rbox","d","b","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/common/Wrappers/mroot.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMroot wrapper mixin for the MmlMroot object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Constructor} from '../../common/Wrapper.js';\nimport {CommonMsqrt, MsqrtConstructor} from './msqrt.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonMroot interface\n */\nexport interface CommonMroot extends CommonMsqrt {\n}\n\n/**\n * Shorthand for the CommonMroot constructor\n */\nexport type MrootConstructor = Constructor<CommonMroot>;\n\n/*****************************************************************/\n/**\n * The CommonMroot wrapper mixin for the MmlMroot object (extends CommonMsqrt)\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMrootMixin<T extends MsqrtConstructor>(Base: T): MrootConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    get surd() {\n      return 2;\n    }\n\n    /**\n     * @override\n     */\n    get root(): number {\n      return 1;\n    }\n\n    /**\n     * @override\n     */\n    public combineRootBBox(BBOX: BBox, sbox: BBox, H: number) {\n      const bbox = this.childNodes[this.root].getOuterBBox();\n      const h = this.getRootDimens(sbox, H)[1];\n      BBOX.combine(bbox, 0, h);\n    }\n\n    /**\n     * @override\n     */\n    public getRootDimens(sbox: BBox, H: number) {\n      const surd = this.childNodes[this.surd] as CommonMo;\n      const bbox = this.childNodes[this.root].getOuterBBox();\n      const offset = (surd.size < 0 ? .5 : .6) * sbox.w;\n      const {w, rscale} = bbox;\n      const W = Math.max(w, offset / rscale);\n      const dx = Math.max(0, W - w);\n      const h = this.rootHeight(bbox, sbox, surd.size, H);\n      const x = W * rscale - offset;\n      return [x, h, dx];\n    }\n\n    /**\n     * @param {BBox} rbox      The bbox of the root\n     * @param {BBox} sbox      The bbox of the surd\n     * @param {number} size    The size of the surd\n     * @param {number} H       The height of the root as a whole\n     * @return {number}        The height of the root within the surd\n     */\n    public rootHeight(rbox: BBox, sbox: BBox, size: number, H: number): number {\n      const h = sbox.h + sbox.d;\n      const b = (size < 0 ? 1.9 : .55 * h) - (h - H);\n      return b + Math.max(0, rbox.d * rbox.rscale);\n    }\n\n  };\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,SAAgBA,gBAAgBA,CAA6BC,IAAO;EAElE,iBAAAC,MAAA;IAAqBC,SAAA,CAAAC,OAAA,EAAAF,MAAA;IAAd,SAAAE,QAAA;;IAqDP;IAhDEC,MAAA,CAAAC,cAAA,CAAIF,OAAA,CAAAG,SAAA,QAAI;WAAR,SAAAC,CAAA;QACE,OAAO,CAAC;MACV,CAAC;;;;IAKDH,MAAA,CAAAC,cAAA,CAAIF,OAAA,CAAAG,SAAA,QAAI;WAAR,SAAAC,CAAA;QACE,OAAO,CAAC;MACV,CAAC;;;;IAKMJ,OAAA,CAAAG,SAAA,CAAAE,eAAe,GAAtB,UAAuBC,IAAU,EAAEC,IAAU,EAAEC,CAAS;MACtD,IAAMC,IAAI,GAAG,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,IAAI,CAAC,CAACC,YAAY,EAAE;MACtD,IAAMC,CAAC,GAAG,IAAI,CAACC,aAAa,CAACP,IAAI,EAAEC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxCF,IAAI,CAACS,OAAO,CAACN,IAAI,EAAE,CAAC,EAAEI,CAAC,CAAC;IAC1B,CAAC;IAKMb,OAAA,CAAAG,SAAA,CAAAW,aAAa,GAApB,UAAqBP,IAAU,EAAEC,CAAS;MACxC,IAAMQ,IAAI,GAAG,IAAI,CAACN,UAAU,CAAC,IAAI,CAACM,IAAI,CAAa;MACnD,IAAMP,IAAI,GAAG,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,IAAI,CAAC,CAACC,YAAY,EAAE;MACtD,IAAMK,MAAM,GAAG,CAACD,IAAI,CAACE,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIX,IAAI,CAACY,CAAC;MAC1C,IAAAA,CAAC,GAAYV,IAAI,CAAAU,CAAhB;QAAEC,MAAM,GAAIX,IAAI,CAAAW,MAAR;MAChB,IAAMC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACJ,CAAC,EAAEF,MAAM,GAAGG,MAAM,CAAC;MACtC,IAAMI,EAAE,GAAGF,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEF,CAAC,GAAGF,CAAC,CAAC;MAC7B,IAAMN,CAAC,GAAG,IAAI,CAACY,UAAU,CAAChB,IAAI,EAAEF,IAAI,EAAES,IAAI,CAACE,IAAI,EAAEV,CAAC,CAAC;MACnD,IAAMkB,CAAC,GAAGL,CAAC,GAAGD,MAAM,GAAGH,MAAM;MAC7B,OAAO,CAACS,CAAC,EAAEb,CAAC,EAAEW,EAAE,CAAC;IACnB,CAAC;IASMxB,OAAA,CAAAG,SAAA,CAAAsB,UAAU,GAAjB,UAAkBE,IAAU,EAAEpB,IAAU,EAAEW,IAAY,EAAEV,CAAS;MAC/D,IAAMK,CAAC,GAAGN,IAAI,CAACM,CAAC,GAAGN,IAAI,CAACqB,CAAC;MACzB,IAAMC,CAAC,GAAG,CAACX,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAGL,CAAC,KAAKA,CAAC,GAAGL,CAAC,CAAC;MAC9C,OAAOqB,CAAC,GAAGP,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEI,IAAI,CAACC,CAAC,GAAGD,IAAI,CAACP,MAAM,CAAC;IAC9C,CAAC;IAEH,OAAApB,OAAC;EAAD,CAAC,CArDoBH,IAAI;AAuD3B;AAzDAiC,OAAA,CAAAlC,gBAAA,GAAAA,gBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}