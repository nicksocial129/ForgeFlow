{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGxml = exports.SVGannotationXML = exports.SVGannotation = exports.SVGsemantics = void 0;\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\nvar semantics_js_1 = require(\"../../common/Wrappers/semantics.js\");\nvar semantics_js_2 = require(\"../../../core/MmlTree/MmlNodes/semantics.js\");\nvar MmlNode_js_1 = require(\"../../../core/MmlTree/MmlNode.js\");\nvar SVGsemantics = function (_super) {\n  __extends(SVGsemantics, _super);\n  function SVGsemantics() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SVGsemantics.prototype.toSVG = function (parent) {\n    var svg = this.standardSVGnode(parent);\n    if (this.childNodes.length) {\n      this.childNodes[0].toSVG(svg);\n    }\n  };\n  SVGsemantics.kind = semantics_js_2.MmlSemantics.prototype.kind;\n  return SVGsemantics;\n}((0, semantics_js_1.CommonSemanticsMixin)(Wrapper_js_1.SVGWrapper));\nexports.SVGsemantics = SVGsemantics;\nvar SVGannotation = function (_super) {\n  __extends(SVGannotation, _super);\n  function SVGannotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SVGannotation.prototype.toSVG = function (parent) {\n    _super.prototype.toSVG.call(this, parent);\n  };\n  SVGannotation.prototype.computeBBox = function () {\n    return this.bbox;\n  };\n  SVGannotation.kind = semantics_js_2.MmlAnnotation.prototype.kind;\n  return SVGannotation;\n}(Wrapper_js_1.SVGWrapper);\nexports.SVGannotation = SVGannotation;\nvar SVGannotationXML = function (_super) {\n  __extends(SVGannotationXML, _super);\n  function SVGannotationXML() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SVGannotationXML.kind = semantics_js_2.MmlAnnotationXML.prototype.kind;\n  SVGannotationXML.styles = {\n    'foreignObject[data-mjx-xml]': {\n      'font-family': 'initial',\n      'line-height': 'normal',\n      overflow: 'visible'\n    }\n  };\n  return SVGannotationXML;\n}(Wrapper_js_1.SVGWrapper);\nexports.SVGannotationXML = SVGannotationXML;\nvar SVGxml = function (_super) {\n  __extends(SVGxml, _super);\n  function SVGxml() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SVGxml.prototype.toSVG = function (parent) {\n    var xml = this.adaptor.clone(this.node.getXML());\n    var em = this.jax.math.metrics.em * this.jax.math.metrics.scale;\n    var scale = this.fixed(1 / em);\n    var _a = this.getBBox(),\n      w = _a.w,\n      h = _a.h,\n      d = _a.d;\n    this.element = this.adaptor.append(parent, this.svg('foreignObject', {\n      'data-mjx-xml': true,\n      y: this.jax.fixed(-h * em) + 'px',\n      width: this.jax.fixed(w * em) + 'px',\n      height: this.jax.fixed((h + d) * em) + 'px',\n      transform: \"scale(\".concat(scale, \") matrix(1 0 0 -1 0 0)\")\n    }, [xml]));\n  };\n  SVGxml.prototype.computeBBox = function (bbox, _recompute) {\n    if (_recompute === void 0) {\n      _recompute = false;\n    }\n    var _a = this.jax.measureXMLnode(this.node.getXML()),\n      w = _a.w,\n      h = _a.h,\n      d = _a.d;\n    bbox.w = w;\n    bbox.h = h;\n    bbox.d = d;\n  };\n  SVGxml.prototype.getStyles = function () {};\n  SVGxml.prototype.getScale = function () {};\n  SVGxml.prototype.getVariant = function () {};\n  SVGxml.kind = MmlNode_js_1.XMLNode.prototype.kind;\n  SVGxml.autoStyle = false;\n  return SVGxml;\n}(Wrapper_js_1.SVGWrapper);\nexports.SVGxml = SVGxml;","map":{"version":3,"names":["Wrapper_js_1","require","semantics_js_1","semantics_js_2","MmlNode_js_1","SVGsemantics","_super","__extends","prototype","toSVG","parent","svg","standardSVGnode","childNodes","length","kind","MmlSemantics","CommonSemanticsMixin","SVGWrapper","exports","SVGannotation","call","computeBBox","bbox","MmlAnnotation","SVGannotationXML","MmlAnnotationXML","styles","overflow","SVGxml","xml","adaptor","clone","node","getXML","em","jax","math","metrics","scale","fixed","_a","getBBox","w","h","d","element","append","y","width","height","transform","concat","_recompute","measureXMLnode","getStyles","getScale","getVariant","XMLNode","autoStyle"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/svg/Wrappers/semantics.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGsemantics wrapper for the MmlSemantics object\n *                and the associated wrappers for annotations\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor} from '../Wrapper.js';\nimport {CommonSemanticsMixin} from '../../common/Wrappers/semantics.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {MmlSemantics, MmlAnnotation, MmlAnnotationXML} from '../../../core/MmlTree/MmlNodes/semantics.js';\nimport {XMLNode} from '../../../core/MmlTree/MmlNode.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * The SVGsemantics wrapper for the MmlSemantics object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class SVGsemantics<N, T, D> extends\nCommonSemanticsMixin<SVGConstructor<any, any, any>>(SVGWrapper) {\n\n  /**\n   * The semantics wrapper\n   */\n  public static kind = MmlSemantics.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = this.standardSVGnode(parent);\n    if (this.childNodes.length) {\n      this.childNodes[0].toSVG(svg);\n    }\n  }\n\n}\n\n\n/*****************************************************************/\n/**\n * The SVGannotation wrapper for the MmlAnnotation object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGannotation<N, T, D> extends SVGWrapper<N, T, D> {\n\n  /**\n   * The annotation wrapper\n   */\n  public static kind = MmlAnnotation.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    // FIXME:  output as plain text\n    super.toSVG(parent);\n  }\n\n  /**\n   * @override\n   */\n  public computeBBox() {\n    // FIXME:  compute using the DOM, if possible\n    return this.bbox;\n  }\n\n}\n\n/*****************************************************************/\n/**\n * The SVGannotationXML wrapper for the MmlAnnotationXML object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGannotationXML<N, T, D> extends SVGWrapper<N, T, D> {\n\n  /**\n   * The annotation-xml wrapper\n   */\n  public static kind = MmlAnnotationXML.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'foreignObject[data-mjx-xml]': {\n      'font-family': 'initial',\n      'line-height': 'normal',\n      overflow: 'visible'\n    }\n  };\n\n}\n\n/*****************************************************************/\n/**\n * The SVGxml wrapper for the XMLNode object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGxml<N, T, D> extends SVGWrapper<N, T, D> {\n\n  /**\n   * The XMLNode wrapper\n   */\n  public static kind = XMLNode.prototype.kind;\n\n  /**\n   * Don't include inline-block CSS for this element\n   */\n  public static autoStyle = false;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const xml = this.adaptor.clone((this.node as XMLNode).getXML() as N);\n    const em = this.jax.math.metrics.em * this.jax.math.metrics.scale;\n    const scale = this.fixed(1 / em);\n    const {w, h, d} = this.getBBox();\n    this.element = this.adaptor.append(parent, this.svg('foreignObject', {\n      'data-mjx-xml': true,\n      y: this.jax.fixed(-h * em) + 'px',\n      width: this.jax.fixed(w * em) + 'px',\n      height: this.jax.fixed((h + d) * em) + 'px',\n      transform: `scale(${scale}) matrix(1 0 0 -1 0 0)`\n    }, [xml]));\n  }\n\n  /**\n   * @override\n   */\n  public computeBBox(bbox: BBox, _recompute: boolean = false) {\n    const {w, h, d} = this.jax.measureXMLnode((this.node as XMLNode).getXML() as N);\n    bbox.w = w;\n    bbox.h = h;\n    bbox.d = d;\n  }\n\n  /**\n   * @override\n   */\n  protected getStyles() {}\n\n  /**\n   * @override\n   */\n  protected getScale() {}\n\n  /**\n   * @override\n   */\n  protected getVariant() {}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}