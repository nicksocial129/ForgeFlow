{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMsubsupMixin = exports.CommonMsupMixin = exports.CommonMsubMixin = void 0;\nfunction CommonMsubMixin(Base) {\n  var _a;\n  return _a = function (_super) {\n    __extends(class_1, _super);\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(class_1.prototype, \"scriptChild\", {\n      get: function () {\n        return this.childNodes[this.node.sub];\n      },\n      enumerable: false,\n      configurable: true\n    });\n    class_1.prototype.getOffset = function () {\n      return [0, -this.getV()];\n    };\n    return class_1;\n  }(Base), _a.useIC = false, _a;\n}\nexports.CommonMsubMixin = CommonMsubMixin;\nfunction CommonMsupMixin(Base) {\n  return function (_super) {\n    __extends(class_2, _super);\n    function class_2() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(class_2.prototype, \"scriptChild\", {\n      get: function () {\n        return this.childNodes[this.node.sup];\n      },\n      enumerable: false,\n      configurable: true\n    });\n    class_2.prototype.getOffset = function () {\n      var x = this.getAdjustedIc() - (this.baseRemoveIc ? 0 : this.baseIc);\n      return [x, this.getU()];\n    };\n    return class_2;\n  }(Base);\n}\nexports.CommonMsupMixin = CommonMsupMixin;\nfunction CommonMsubsupMixin(Base) {\n  var _a;\n  return _a = function (_super) {\n    __extends(class_3, _super);\n    function class_3() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n      _this.UVQ = null;\n      return _this;\n    }\n    Object.defineProperty(class_3.prototype, \"subChild\", {\n      get: function () {\n        return this.childNodes[this.node.sub];\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(class_3.prototype, \"supChild\", {\n      get: function () {\n        return this.childNodes[this.node.sup];\n      },\n      enumerable: false,\n      configurable: true\n    });\n    class_3.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n      var basebox = this.baseChild.getOuterBBox();\n      var _a = __read([this.subChild.getOuterBBox(), this.supChild.getOuterBBox()], 2),\n        subbox = _a[0],\n        supbox = _a[1];\n      bbox.empty();\n      bbox.append(basebox);\n      var w = this.getBaseWidth();\n      var x = this.getAdjustedIc();\n      var _b = __read(this.getUVQ(), 2),\n        u = _b[0],\n        v = _b[1];\n      bbox.combine(subbox, w, v);\n      bbox.combine(supbox, w + x, u);\n      bbox.w += this.font.params.scriptspace;\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    };\n    class_3.prototype.getUVQ = function (subbox, supbox) {\n      if (subbox === void 0) {\n        subbox = this.subChild.getOuterBBox();\n      }\n      if (supbox === void 0) {\n        supbox = this.supChild.getOuterBBox();\n      }\n      var basebox = this.baseCore.getOuterBBox();\n      if (this.UVQ) return this.UVQ;\n      var tex = this.font.params;\n      var t = 3 * tex.rule_thickness;\n      var subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub2);\n      var drop = this.baseCharZero(basebox.d * this.baseScale + tex.sub_drop * subbox.rscale);\n      var _a = __read([this.getU(), Math.max(drop, subscriptshift)], 2),\n        u = _a[0],\n        v = _a[1];\n      var q = u - supbox.d * supbox.rscale - (subbox.h * subbox.rscale - v);\n      if (q < t) {\n        v += t - q;\n        var p = 4 / 5 * tex.x_height - (u - supbox.d * supbox.rscale);\n        if (p > 0) {\n          u += p;\n          v -= p;\n        }\n      }\n      u = Math.max(this.length2em(this.node.attributes.get('superscriptshift'), u), u);\n      v = Math.max(this.length2em(this.node.attributes.get('subscriptshift'), v), v);\n      q = u - supbox.d * supbox.rscale - (subbox.h * subbox.rscale - v);\n      this.UVQ = [u, -v, q];\n      return this.UVQ;\n    };\n    return class_3;\n  }(Base), _a.useIC = false, _a;\n}\nexports.CommonMsubsupMixin = CommonMsubsupMixin;","map":{"version":3,"names":["CommonMsubMixin","Base","_a","_super","__extends","class_1","Object","defineProperty","prototype","get","childNodes","node","sub","getOffset","getV","useIC","exports","CommonMsupMixin","class_2","sup","x","getAdjustedIc","baseRemoveIc","baseIc","getU","CommonMsubsupMixin","class_3","_this","apply","arguments","UVQ","computeBBox","bbox","recompute","basebox","baseChild","getOuterBBox","__read","subChild","supChild","subbox","supbox","empty","append","w","getBaseWidth","_b","getUVQ","u","v","combine","font","params","scriptspace","clean","setChildPWidths","baseCore","tex","t","rule_thickness","subscriptshift","length2em","attributes","sub2","drop","baseCharZero","d","baseScale","sub_drop","rscale","Math","max","q","h","p","x_height"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/common/Wrappers/msubsup.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMsubsup wrapper mixin for the MmlMsubsup object\n *                and the special cases CommonMsub and CommonMsup\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, Constructor} from '../Wrapper.js';\nimport {CommonScriptbase, ScriptbaseConstructor} from './scriptbase.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {MmlMsubsup, MmlMsub, MmlMsup} from '../../../core/MmlTree/MmlNodes/msubsup.js';\n\n/*****************************************************************/\n/**\n * The CommonMsub interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMsub<W extends AnyWrapper> extends CommonScriptbase<W> {\n}\n\n/**\n * Shorthand for the CommonMsub constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MsubConstructor<W extends AnyWrapper> = Constructor<CommonMsub<W>>;\n\n/*****************************************************************/\n/**\n * The CommonMsub wrapper mixin for the MmlMsub object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMsubMixin<\n  W extends AnyWrapper,\n  T extends ScriptbaseConstructor<W>\n>(Base: T): MsubConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     * Do not include italic correction\n     */\n    public static useIC: boolean = false;\n\n    /**\n     * @override\n     */\n    public get scriptChild() {\n      return this.childNodes[(this.node as MmlMsub).sub];\n    }\n\n    /**\n     * Get the shift for the subscript\n     *\n     * @override\n     */\n    public getOffset() {\n      return [0, -this.getV()];\n    }\n\n  };\n\n}\n\n/*****************************************************************/\n/**\n * The CommonMsup interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMsup<W extends AnyWrapper> extends CommonScriptbase<W> {\n}\n\n/**\n * Shorthand for the CommonMsup constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MsupConstructor<W extends AnyWrapper> = Constructor<CommonMsup<W>>;\n\n/*****************************************************************/\n/**\n * The CommonMsup wrapper mixin for the MmlMsup object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMsupMixin<\n  W extends AnyWrapper,\n  T extends ScriptbaseConstructor<W>\n>(Base: T): MsupConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public get scriptChild() {\n      return this.childNodes[(this.node as MmlMsup).sup];\n    }\n\n    /**\n     * Get the shift for the superscript\n     *\n     * @override\n     */\n    public getOffset() {\n      const x = this.getAdjustedIc() - (this.baseRemoveIc ? 0 : this.baseIc);\n      return [x, this.getU()];\n    }\n\n  };\n\n}\n\n/*****************************************************************/\n/**\n * The CommonMsubsup interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMsubsup<W extends AnyWrapper> extends CommonScriptbase<W> {\n\n  /**\n   *  Cached values for the script offsets and separation (so if they are\n   *  computed in computeBBox(), they don't have to be recomputed during output)\n   */\n  UVQ: number[];\n\n  /**\n   * The wrapper for the subscript\n   */\n  readonly subChild: W;\n\n  /**\n   * The wrapper for the superscript\n   */\n  readonly supChild: W;\n\n  /**\n   * Get the shift for the scripts and their separation (TeXBook Appendix G 18adef)\n   *\n   * @param {BBox} subbox     The bounding box of the superscript\n   * @param {BBox} supbox     The bounding box of the subscript\n   * @return {number[]}       The vertical offsets for super and subscripts, and the space between them\n   */\n  getUVQ(subbox?: BBox, supbox?: BBox): number[];\n}\n\n/**\n * Shorthand for the CommonMsubsup constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MsubsupConstructor<W extends AnyWrapper> = Constructor<CommonMsubsup<W>>;\n\n/*****************************************************************/\n/**\n * The CommomMsubsup wrapper for the MmlMsubsup object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMsubsupMixin<\n  W extends AnyWrapper,\n  T extends ScriptbaseConstructor<W>\n>(Base: T): MsubsupConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     * Do not include italic correction\n     */\n    public static useIC: boolean = false;\n\n    /**\n     *  Cached values for the script offsets and separation (so if they are\n     *  computed in computeBBox(), they don't have to be recomputed during output)\n     */\n    public UVQ: number[] = null;\n\n    /**\n     * @return {W}  The wrapper for the subscript\n     */\n    public get subChild(): W {\n      return this.childNodes[(this.node as MmlMsubsup).sub];\n    }\n\n    /**\n     * @return {W}  The wrapper for the superscript\n     */\n    public get supChild(): W {\n      return this.childNodes[(this.node as MmlMsubsup).sup];\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      const basebox = this.baseChild.getOuterBBox();\n      const [subbox, supbox] = [this.subChild.getOuterBBox(), this.supChild.getOuterBBox()];\n      bbox.empty();\n      bbox.append(basebox);\n      const w = this.getBaseWidth();\n      const x = this.getAdjustedIc();\n      const [u, v] = this.getUVQ();\n      bbox.combine(subbox, w, v);\n      bbox.combine(supbox, w + x, u);\n      bbox.w += this.font.params.scriptspace;\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    }\n\n    /**\n     * Get the shift for the scripts and their separation (TeXBook Appendix G 18adef)\n     *\n     * @param {BBox} subbox     The bounding box of the superscript\n     * @param {BBox} supbox     The bounding box of the subscript\n     * @return {number[]}       The vertical offsets for super and subscripts, and the space between them\n     */\n    public getUVQ(\n      subbox: BBox = this.subChild.getOuterBBox(),\n      supbox: BBox = this.supChild.getOuterBBox()\n    ): number[] {\n      const basebox = this.baseCore.getOuterBBox();\n      if (this.UVQ) return this.UVQ;\n      const tex = this.font.params;\n      const t = 3 * tex.rule_thickness;\n      const subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub2);\n      const drop = this.baseCharZero(basebox.d * this.baseScale + tex.sub_drop * subbox.rscale);\n      //\n      // u and v are the veritcal shifts of the scripts, initially set to minimum values and then adjusted\n      //\n      let [u, v] = [this.getU(), Math.max(drop, subscriptshift)];\n      //\n      // q is the space currently between the super- and subscripts.\n      // If it is less than 3 rule thicknesses,\n      //   increase the subscript offset to make the space 3 rule thicknesses\n      //   If the bottom of the superscript is below 4/5 of the x-height\n      //     raise both the super- and subscripts by the difference\n      //     (make the bottom of the superscript be at 4/5 the x-height, and the\n      //      subscript 3 rule thickness below that).\n      //\n      let q = (u - supbox.d * supbox.rscale) - (subbox.h * subbox.rscale - v);\n      if (q < t) {\n        v += t - q;\n        const p = (4 / 5) * tex.x_height - (u - supbox.d * supbox.rscale);\n        if (p > 0) {\n          u += p;\n          v -= p;\n        }\n      }\n      //\n      // Make sure the shifts are at least the minimum amounts and\n      // return the shifts and the space between the scripts\n      //\n      u = Math.max(this.length2em(this.node.attributes.get('superscriptshift'), u), u);\n      v = Math.max(this.length2em(this.node.attributes.get('subscriptshift'), v), v);\n      q = (u - supbox.d * supbox.rscale) - (subbox.h * subbox.rscale - v);\n      this.UVQ = [u, -v, q];\n      return this.UVQ;\n    }\n\n  };\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}