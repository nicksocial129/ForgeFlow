{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextMacrosConfiguration = exports.TextBaseConfiguration = void 0;\nvar Configuration_js_1 = require(\"../Configuration.js\");\nvar ParseOptions_js_1 = __importDefault(require(\"../ParseOptions.js\"));\nvar Tags_js_1 = require(\"../Tags.js\");\nvar BaseItems_js_1 = require(\"../base/BaseItems.js\");\nvar TextParser_js_1 = require(\"./TextParser.js\");\nvar TextMacrosMethods_js_1 = require(\"./TextMacrosMethods.js\");\nrequire(\"./TextMacrosMappings.js\");\nexports.TextBaseConfiguration = Configuration_js_1.Configuration.create('text-base', {\n  parser: 'text',\n  handler: {\n    character: ['command', 'text-special'],\n    macro: ['text-macros']\n  },\n  fallback: {\n    character: function (parser, c) {\n      parser.text += c;\n    },\n    macro: function (parser, name) {\n      var texParser = parser.texParser;\n      var macro = texParser.lookup('macro', name);\n      if (macro && macro._func !== TextMacrosMethods_js_1.TextMacrosMethods.Macro) {\n        parser.Error('MathMacro', '%1 is only supported in math mode', '\\\\' + name);\n      }\n      texParser.parse('macro', [parser, name]);\n    }\n  },\n  items: (_a = {}, _a[BaseItems_js_1.StartItem.prototype.kind] = BaseItems_js_1.StartItem, _a[BaseItems_js_1.StopItem.prototype.kind] = BaseItems_js_1.StopItem, _a[BaseItems_js_1.MmlItem.prototype.kind] = BaseItems_js_1.MmlItem, _a[BaseItems_js_1.StyleItem.prototype.kind] = BaseItems_js_1.StyleItem, _a)\n});\nfunction internalMath(parser, text, level, mathvariant) {\n  var config = parser.configuration.packageData.get('textmacros');\n  if (!(parser instanceof TextParser_js_1.TextParser)) {\n    config.texParser = parser;\n  }\n  return [new TextParser_js_1.TextParser(text, mathvariant ? {\n    mathvariant: mathvariant\n  } : {}, config.parseOptions, level).mml()];\n}\nexports.TextMacrosConfiguration = Configuration_js_1.Configuration.create('textmacros', {\n  config: function (_config, jax) {\n    var textConf = new Configuration_js_1.ParserConfiguration(jax.parseOptions.options.textmacros.packages, ['tex', 'text']);\n    textConf.init();\n    var parseOptions = new ParseOptions_js_1.default(textConf, []);\n    parseOptions.options = jax.parseOptions.options;\n    textConf.config(jax);\n    Tags_js_1.TagsFactory.addTags(textConf.tags);\n    parseOptions.tags = Tags_js_1.TagsFactory.getDefault();\n    parseOptions.tags.configuration = parseOptions;\n    parseOptions.packageData = jax.parseOptions.packageData;\n    parseOptions.packageData.set('textmacros', {\n      parseOptions: parseOptions,\n      jax: jax,\n      texParser: null\n    });\n    parseOptions.options.internalMath = internalMath;\n  },\n  preprocessors: [function (data) {\n    var config = data.data.packageData.get('textmacros');\n    config.parseOptions.nodeFactory.setMmlFactory(config.jax.mmlFactory);\n  }],\n  options: {\n    textmacros: {\n      packages: ['text-base']\n    }\n  }\n});","map":{"version":3,"names":["Configuration_js_1","require","ParseOptions_js_1","__importDefault","Tags_js_1","BaseItems_js_1","TextParser_js_1","TextMacrosMethods_js_1","exports","TextBaseConfiguration","Configuration","create","parser","handler","character","macro","fallback","c","text","name","texParser","lookup","_func","TextMacrosMethods","Macro","Error","parse","items","_a","StartItem","prototype","kind","StopItem","MmlItem","StyleItem","internalMath","level","mathvariant","config","configuration","packageData","get","TextParser","parseOptions","mml","TextMacrosConfiguration","_config","jax","textConf","ParserConfiguration","options","textmacros","packages","init","default","TagsFactory","addTags","tags","getDefault","set","preprocessors","data","nodeFactory","setMmlFactory","mmlFactory"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/textmacros/TextMacrosConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2020-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the textmacros package\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {TeX} from '../../tex.js';\nimport TexParser from '../TexParser.js';\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport ParseOptions from '../ParseOptions.js';\nimport {TagsFactory} from '../Tags.js';\nimport {StartItem, StopItem, MmlItem, StyleItem} from '../base/BaseItems.js';\nimport {TextParser} from './TextParser.js';\nimport {TextMacrosMethods} from './TextMacrosMethods.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\nimport './TextMacrosMappings.js';\n\n/**\n *  The base text macro configuration (used in the TextParser)\n */\nexport const TextBaseConfiguration = Configuration.create('text-base', {\n  parser: 'text',\n  handler: {\n    character: ['command', 'text-special'],\n    macro: ['text-macros']\n  },\n  fallback: {\n    //\n    // Unknown characters are added to the text verbatim\n    //\n    character: (parser: TextParser, c: string) => {\n      parser.text += c;\n    },\n    //\n    // For unknown macros, if they are defined in the main TeX parser\n    //   and not string-replacement macros, give an error, otherwise\n    //   run the macro (this either does the string replacement or\n    //   produces the error as configured in the main TeX parser, so\n    //   this will respect the noundefined package, if loaded).\n    //\n    macro: (parser: TextParser, name: string) => {\n      const texParser = parser.texParser;\n      const macro = texParser.lookup('macro', name);\n      if (macro && macro._func !== TextMacrosMethods.Macro) {\n        parser.Error('MathMacro', '%1 is only supported in math mode', '\\\\' + name);\n      }\n      texParser.parse('macro', [parser, name]);\n    }\n  },\n  items: {\n    [StartItem.prototype.kind]: StartItem,\n    [StopItem.prototype.kind]: StopItem,\n    [MmlItem.prototype.kind]: MmlItem,\n    [StyleItem.prototype.kind]: StyleItem     // needed for \\color\n  }\n});\n\n/**\n * Replacement for ParseUtil.internalMath that handles text-mode macros.\n *\n * @param {TexParser} parser      The TexParser calling this function\n * @param {string} text           The text-mode string to be processed\n * @param {number|string} level   The scriptlevel of the text\n * @param {string} mathvariant    The mathvariant for the text\n * @return {MmlNode[]}            The final MmlNode generated for the text\n */\nfunction internalMath(parser: TexParser, text: string, level?: number | string, mathvariant?: string): MmlNode[] {\n  const config = parser.configuration.packageData.get('textmacros');\n  if (!(parser instanceof TextParser)) {\n    config.texParser = parser;\n  }\n  return [(new TextParser(text, mathvariant ? {mathvariant} : {}, config.parseOptions, level)).mml()];\n}\n\n//\n//  The textmacros package configuration\n//\nexport const TextMacrosConfiguration = Configuration.create('textmacros', {\n  /**\n   * @param {ParserConfiguration} config   The configuration object we are being configured within\n   * @param {TeX<any,any,any>} jax         The TeX input jax in which we are running\n   */\n  config(_config: ParserConfiguration, jax: TeX<any, any, any>) {\n    //\n    //  Create the configuration and parseOptions objects for the\n    //    internal TextParser and add the textBase configuration.\n    //\n    const textConf = new ParserConfiguration(jax.parseOptions.options.textmacros.packages, ['tex', 'text']);\n    textConf.init();\n    const parseOptions = new ParseOptions(textConf, []);\n    parseOptions.options = jax.parseOptions.options;      // share the TeX options\n    textConf.config(jax);\n    TagsFactory.addTags(textConf.tags);\n    parseOptions.tags = TagsFactory.getDefault();\n    parseOptions.tags.configuration = parseOptions;\n    //\n    // Share the TeX input jax's parseOptions packageData object\n    //   so that require and other packages will work in both parsers,\n    //   set the textmacros data (texParser will be filled in later),\n    //   and replace the internalMath function with our own.\n    //\n    parseOptions.packageData = jax.parseOptions.packageData;\n    parseOptions.packageData.set('textmacros', {parseOptions, jax, texParser: null});\n    parseOptions.options.internalMath = internalMath;\n  },\n  preprocessors: [(data: {data: ParseOptions}) => {\n    //\n    //  Set the MmlFactory for the nodeFactory, since it was not available\n    //  durring configuration above.\n    //\n    const config = data.data.packageData.get('textmacros');\n    config.parseOptions.nodeFactory.setMmlFactory(config.jax.mmlFactory);\n  }],\n  options: {\n    textmacros: {\n      packages: ['text-base']    // textmacro packages to load\n    }\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}