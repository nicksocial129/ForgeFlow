{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMmultiscriptsMixin = exports.ScriptNames = exports.NextScript = void 0;\nvar BBox_js_1 = require(\"../../../util/BBox.js\");\nexports.NextScript = {\n  base: 'subList',\n  subList: 'supList',\n  supList: 'subList',\n  psubList: 'psupList',\n  psupList: 'psubList'\n};\nexports.ScriptNames = ['sup', 'sup', 'psup', 'psub'];\nfunction CommonMmultiscriptsMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n    function class_1() {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;\n      _this.scriptData = null;\n      _this.firstPrescript = 0;\n      _this.getScriptData();\n      return _this;\n    }\n    class_1.prototype.combinePrePost = function (pre, post) {\n      var bbox = new BBox_js_1.BBox(pre);\n      bbox.combine(post, 0, 0);\n      return bbox;\n    };\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n      var scriptspace = this.font.params.scriptspace;\n      var data = this.scriptData;\n      var sub = this.combinePrePost(data.sub, data.psub);\n      var sup = this.combinePrePost(data.sup, data.psup);\n      var _a = __read(this.getUVQ(sub, sup), 2),\n        u = _a[0],\n        v = _a[1];\n      bbox.empty();\n      if (data.numPrescripts) {\n        bbox.combine(data.psup, scriptspace, u);\n        bbox.combine(data.psub, scriptspace, v);\n      }\n      bbox.append(data.base);\n      if (data.numScripts) {\n        var w = bbox.w;\n        bbox.combine(data.sup, w, u);\n        bbox.combine(data.sub, w, v);\n        bbox.w += scriptspace;\n      }\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    };\n    class_1.prototype.getScriptData = function () {\n      var data = this.scriptData = {\n        base: null,\n        sub: BBox_js_1.BBox.empty(),\n        sup: BBox_js_1.BBox.empty(),\n        psub: BBox_js_1.BBox.empty(),\n        psup: BBox_js_1.BBox.empty(),\n        numPrescripts: 0,\n        numScripts: 0\n      };\n      var lists = this.getScriptBBoxLists();\n      this.combineBBoxLists(data.sub, data.sup, lists.subList, lists.supList);\n      this.combineBBoxLists(data.psub, data.psup, lists.psubList, lists.psupList);\n      data.base = lists.base[0];\n      data.numPrescripts = lists.psubList.length;\n      data.numScripts = lists.subList.length;\n    };\n    class_1.prototype.getScriptBBoxLists = function () {\n      var e_1, _a;\n      var lists = {\n        base: [],\n        subList: [],\n        supList: [],\n        psubList: [],\n        psupList: []\n      };\n      var script = 'base';\n      try {\n        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          if (child.node.isKind('mprescripts')) {\n            script = 'psubList';\n          } else {\n            lists[script].push(child.getOuterBBox());\n            script = exports.NextScript[script];\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      this.firstPrescript = lists.subList.length + lists.supList.length + 2;\n      this.padLists(lists.subList, lists.supList);\n      this.padLists(lists.psubList, lists.psupList);\n      return lists;\n    };\n    class_1.prototype.padLists = function (list1, list2) {\n      if (list1.length > list2.length) {\n        list2.push(BBox_js_1.BBox.empty());\n      }\n    };\n    class_1.prototype.combineBBoxLists = function (bbox1, bbox2, list1, list2) {\n      for (var i = 0; i < list1.length; i++) {\n        var _a = __read(this.getScaledWHD(list1[i]), 3),\n          w1 = _a[0],\n          h1 = _a[1],\n          d1 = _a[2];\n        var _b = __read(this.getScaledWHD(list2[i]), 3),\n          w2 = _b[0],\n          h2 = _b[1],\n          d2 = _b[2];\n        var w = Math.max(w1, w2);\n        bbox1.w += w;\n        bbox2.w += w;\n        if (h1 > bbox1.h) bbox1.h = h1;\n        if (d1 > bbox1.d) bbox1.d = d1;\n        if (h2 > bbox2.h) bbox2.h = h2;\n        if (d2 > bbox2.d) bbox2.d = d2;\n      }\n    };\n    class_1.prototype.getScaledWHD = function (bbox) {\n      var w = bbox.w,\n        h = bbox.h,\n        d = bbox.d,\n        rscale = bbox.rscale;\n      return [w * rscale, h * rscale, d * rscale];\n    };\n    class_1.prototype.getUVQ = function (subbox, supbox) {\n      var _a;\n      if (!this.UVQ) {\n        var _b = __read([0, 0, 0], 3),\n          u = _b[0],\n          v = _b[1],\n          q = _b[2];\n        if (subbox.h === 0 && subbox.d === 0) {\n          u = this.getU();\n        } else if (supbox.h === 0 && supbox.d === 0) {\n          u = -this.getV();\n        } else {\n          _a = __read(_super.prototype.getUVQ.call(this, subbox, supbox), 3), u = _a[0], v = _a[1], q = _a[2];\n        }\n        this.UVQ = [u, v, q];\n      }\n      return this.UVQ;\n    };\n    return class_1;\n  }(Base);\n}\nexports.CommonMmultiscriptsMixin = CommonMmultiscriptsMixin;","map":{"version":3,"names":["BBox_js_1","require","exports","NextScript","base","subList","supList","psubList","psupList","ScriptNames","CommonMmultiscriptsMixin","Base","_super","__extends","class_1","args","_i","arguments","length","_this","apply","__spreadArray","__read","scriptData","firstPrescript","getScriptData","prototype","combinePrePost","pre","post","bbox","BBox","combine","computeBBox","recompute","scriptspace","font","params","data","sub","psub","sup","psup","_a","getUVQ","u","v","empty","numPrescripts","append","numScripts","w","clean","setChildPWidths","lists","getScriptBBoxLists","combineBBoxLists","script","_b","__values","childNodes","_c","next","done","child","value","node","isKind","push","getOuterBBox","padLists","list1","list2","bbox1","bbox2","i","getScaledWHD","w1","h1","d1","w2","h2","d2","Math","max","h","d","rscale","subbox","supbox","UVQ","q","getU","getV","call"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/common/Wrappers/mmultiscripts.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMmultiscripts wrapper mixin for the MmlMmultiscripts object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, Constructor} from '../Wrapper.js';\nimport {CommonMsubsup, MsubsupConstructor} from './msubsup.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n\n/**\n * The data about the scripts and base\n */\nexport type ScriptData = {\n  base: BBox;\n  sub: BBox;   // combined bbox for all subscripts\n  sup: BBox;   // combined bbox for all superscripts\n  psub: BBox;  // combined bbox for all presubscripts\n  psup: BBox;  // combined bbox for all presuperscripts\n  numPrescripts: number;\n  numScripts: number;\n};\nexport type ScriptDataName = keyof ScriptData;\n\n/**\n * The lists of all the individual script bboxes\n */\nexport type ScriptLists = {\n  base: BBox[];\n  subList: BBox[];\n  supList: BBox[];\n  psubList: BBox[];\n  psupList: BBox[];\n};\nexport type ScriptListName = keyof ScriptLists;\n\n/**\n * The type of script that follows the given type\n */\nexport const NextScript: {[key: string]: ScriptListName} = {\n  base: 'subList',\n  subList: 'supList',\n  supList: 'subList',\n  psubList: 'psupList',\n  psupList: 'psubList',\n};\n\n/**\n * The names of the scripts (for looping)\n */\nexport const ScriptNames = ['sup', 'sup', 'psup', 'psub'] as ScriptDataName[];\n\n/*****************************************************************/\n/**\n * The CommonMmultiscripts interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMmultiscripts<W extends AnyWrapper> extends CommonMsubsup<W> {\n\n  /**\n   *  The cached data for the various bounding boxes\n   */\n  scriptData: ScriptData;\n\n  /**\n   *  The index of the child following the <mprescripts/> tag\n   */\n  firstPrescript: number;\n\n  /**\n   * @param {BBox} pre   The prescript bounding box\n   * @param {BBox} post  The postcript bounding box\n   * @return {BBox}      The combined bounding box\n   */\n  combinePrePost(pre: BBox, post: BBox): BBox;\n\n  /**\n   * Compute the bounding box information about all the scripts\n   */\n  getScriptData(): void;\n\n  /**\n   * @return {ScriptLists}  The bounding boxes for all the scripts divided into lists by position\n   */\n  getScriptBBoxLists(): ScriptLists;\n\n  /**\n   * Pad the second list, if it is one short\n   *\n   * @param {BBox[]} list1   The first list\n   * @param {BBox[]} list2   The second list\n   */\n  padLists(list1: BBox[], list2: BBox[]): void;\n\n  /**\n   * @param {BBox} bbox1    The bbox for the combined subscripts\n   * @param {BBox} bbox2    The bbox for the combined superscripts\n   * @param {BBox[]} list1  The list of subscripts to combine\n   * @param {BBox[]} list2  The list of superscripts to combine\n   */\n  combineBBoxLists(bbox1: BBox, bbox2: BBox, list1: BBox[], list2: BBox[]): void;\n\n  /**\n   * @param {BBox} bbox  The bounding box from which to get the (scaled) width, height, and depth\n   */\n  getScaledWHD(bbox: BBox): void;\n\n}\n\n/**\n * Shorthand for the CommonMmultiscripts constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MmultiscriptsConstructor<W extends AnyWrapper> = Constructor<CommonMmultiscripts<W>>;\n\n/*****************************************************************/\n/**\n * The CommonMmultiscripts wrapper mixin for the MmlMmultiscripts object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMmultiscriptsMixin<\n  W extends AnyWrapper,\n  T extends MsubsupConstructor<W>\n>(Base: T): MmultiscriptsConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     *  The cached data for the various bounding boxes\n     */\n    public scriptData: ScriptData = null;\n\n    /**\n     *  The index of the child following the <mprescripts/> tag\n     */\n    public firstPrescript = 0;\n\n    /**\n     * @override\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.getScriptData();\n    }\n\n    /*************************************************************/\n\n    /**\n     * @param {BBox} pre   The prescript bounding box\n     * @param {BBox} post  The postcript bounding box\n     * @return {BBox}      The combined bounding box\n     */\n    public combinePrePost(pre: BBox, post: BBox): BBox {\n      const bbox = new BBox(pre);\n      bbox.combine(post, 0, 0);\n      return bbox;\n    }\n\n    /*************************************************************/\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      //\n      // Get the bounding boxes, and combine the pre- and post-scripts\n      //  to get a common offset for both\n      //\n      const scriptspace = this.font.params.scriptspace;\n      const data = this.scriptData;\n      const sub = this.combinePrePost(data.sub, data.psub);\n      const sup = this.combinePrePost(data.sup, data.psup);\n      const [u, v] = this.getUVQ(sub, sup);\n      //\n      //  Lay out the pre-scripts, then the base, then the post-scripts\n      //\n      bbox.empty();\n      if (data.numPrescripts) {\n        bbox.combine(data.psup, scriptspace, u);\n        bbox.combine(data.psub, scriptspace, v);\n      }\n      bbox.append(data.base);\n      if (data.numScripts) {\n        const w = bbox.w;\n        bbox.combine(data.sup, w, u);\n        bbox.combine(data.sub, w, v);\n        bbox.w += scriptspace;\n      }\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    }\n\n    /**\n     * Compute the bounding box information about all the scripts\n     */\n    public getScriptData() {\n      //\n      //  Initialize the bounding box data\n      //\n      const data: ScriptData = this.scriptData = {\n        base: null, sub: BBox.empty(), sup: BBox.empty(), psub: BBox.empty(), psup: BBox.empty(),\n        numPrescripts: 0, numScripts: 0\n      };\n      //\n      //  Get the bboxes for all the scripts and combine them into the scriptData\n      //\n      const lists = this.getScriptBBoxLists();\n      this.combineBBoxLists(data.sub, data.sup, lists.subList, lists.supList);\n      this.combineBBoxLists(data.psub, data.psup, lists.psubList, lists.psupList);\n      data.base = lists.base[0];\n      //\n      //  Save the lengths and return the data\n      //\n      data.numPrescripts = lists.psubList.length;\n      data.numScripts = lists.subList.length;\n    }\n\n    /**\n     * @return {ScriptLists}  The bounding boxes for all the scripts divided into lists by position\n     */\n    public getScriptBBoxLists(): ScriptLists {\n      const lists: ScriptLists = {\n        base: [], subList: [], supList: [], psubList: [], psupList: []\n      };\n      //\n      // The first entry is the base, and then they altername sub- and superscripts.\n      // Once we find the <mprescripts/> element, switch to presub- and presuperscript lists.\n      //\n      let script: ScriptListName = 'base';\n      for (const child of this.childNodes) {\n        if (child.node.isKind('mprescripts')) {\n          script = 'psubList';\n        } else {\n          lists[script].push(child.getOuterBBox());\n          script = NextScript[script];\n        }\n      }\n      //\n      //  The index of the first prescript (skip over base, sub- and superscripts, and mprescripts)\n      //\n      this.firstPrescript = lists.subList.length + lists.supList.length + 2;\n      //\n      //  Make sure the lists are the same length\n      //\n      this.padLists(lists.subList, lists.supList);\n      this.padLists(lists.psubList, lists.psupList);\n      return lists;\n    }\n\n    /**\n     * Pad the second list, if it is one short\n     *\n     * @param {BBox[]} list1   The first list\n     * @param {BBox[]} list2   The second list\n     */\n    public padLists(list1: BBox[], list2: BBox[]) {\n      if (list1.length > list2.length) {\n        list2.push(BBox.empty());\n      }\n    }\n\n    /**\n     * @param {BBox} bbox1    The bbox for the combined subscripts\n     * @param {BBox} bbox2    The bbox for the combined superscripts\n     * @param {BBox[]} list1  The list of subscripts to combine\n     * @param {BBox[]} list2  The list of superscripts to combine\n     */\n    public combineBBoxLists(bbox1: BBox, bbox2: BBox, list1: BBox[], list2: BBox[]) {\n      for (let i = 0; i < list1.length; i++) {\n        const [w1, h1, d1] = this.getScaledWHD(list1[i]);\n        const [w2, h2, d2] = this.getScaledWHD(list2[i]);\n        const w = Math.max(w1, w2);\n        bbox1.w += w;\n        bbox2.w += w;\n        if (h1 > bbox1.h) bbox1.h = h1;\n        if (d1 > bbox1.d) bbox1.d = d1;\n        if (h2 > bbox2.h) bbox2.h = h2;\n        if (d2 > bbox2.d) bbox2.d = d2;\n      }\n    }\n\n    /**\n     * @param {BBox} bbox  The bounding box from which to get the (scaled) width, height, and depth\n     */\n    public getScaledWHD(bbox: BBox) {\n      const {w, h, d, rscale} = bbox;\n      return [w * rscale, h * rscale, d * rscale];\n    }\n\n    /*************************************************************/\n\n    /**\n     * @override\n     */\n    public getUVQ(subbox: BBox, supbox: BBox) {\n      if (!this.UVQ) {\n        let [u, v, q] = [0, 0, 0];\n        if (subbox.h === 0 && subbox.d === 0) {\n          //\n          //  Use placement for superscript only\n          //\n          u = this.getU();\n        } else if (supbox.h === 0 && supbox.d === 0) {\n          //\n          //  Use placement for subsccript only\n          //\n          u = -this.getV();\n        } else {\n          //\n          //  Use placement for both\n          //\n          [u, v, q] = super.getUVQ(subbox, supbox);\n        }\n        this.UVQ = [u, v, q];\n      }\n      return this.UVQ;\n    }\n\n  };\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}