{"ast":null,"code":"module.exports = function (hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS = 'and false then defined module in return redo retry end for true self when ' + 'next until do begin unless nil break not case cond alias while ensure or ' + 'include use alias fn quote require import with|0';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{',\n    end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\"/,\n      end: /\"/\n    }]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro',\n    end: /\\B\\b/,\n    // the mode is ended by the title\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: ELIXIR_IDENT_RE,\n      endsParent: true\n    })]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord',\n    end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [STRING, hljs.HASH_COMMENT_MODE, CLASS, FUNCTION, {\n    begin: '::'\n  }, {\n    className: 'symbol',\n    begin: ':(?![\\\\s:])',\n    contains: [STRING, {\n      begin: ELIXIR_METHOD_RE\n    }],\n    relevance: 0\n  }, {\n    className: 'symbol',\n    begin: ELIXIR_IDENT_RE + ':(?!:)',\n    relevance: 0\n  }, {\n    className: 'number',\n    begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n    relevance: 0\n  }, {\n    className: 'variable',\n    begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n  }, {\n    begin: '->'\n  }, {\n    // regexp container\n    begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n    contains: [hljs.HASH_COMMENT_MODE, {\n      className: 'regexp',\n      illegal: '\\\\n',\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      variants: [{\n        begin: '/',\n        end: '/[a-z]*'\n      }, {\n        begin: '%r\\\\[',\n        end: '\\\\][a-z]*'\n      }]\n    }],\n    relevance: 0\n  }];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n  return {\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n};","map":{"version":3,"names":["module","exports","hljs","ELIXIR_IDENT_RE","ELIXIR_METHOD_RE","ELIXIR_KEYWORDS","SUBST","className","begin","end","lexemes","keywords","STRING","contains","BACKSLASH_ESCAPE","variants","FUNCTION","beginKeywords","inherit","TITLE_MODE","endsParent","CLASS","ELIXIR_DEFAULT_CONTAINS","HASH_COMMENT_MODE","relevance","RE_STARTERS_RE","illegal"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/elixir.js"],"sourcesContent":["module.exports = function(hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS =\n    'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote require import with|0';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {\n        begin: /'/, end: /'/\n      },\n      {\n        begin: /\"/, end: /\"/\n      }\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro', end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord', end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      begin: '::'\n    },\n    {\n      className: 'symbol',\n      begin: ':(?![\\\\s:])',\n      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':(?!:)',\n      relevance: 0\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            {\n              begin: '/', end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[', end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,eAAe,GAAG,mCAAmC;EACzD,IAAIC,gBAAgB,GAAG,oFAAoF;EAC3G,IAAIC,eAAe,GACjB,4EAA4E,GAC5E,2EAA2E,GAC3E,kDAAkD;EACpD,IAAIC,KAAK,GAAG;IACVC,SAAS,EAAE,OAAO;IAClBC,KAAK,EAAE,MAAM;IAAEC,GAAG,EAAE,GAAG;IACvBC,OAAO,EAAEP,eAAe;IACxBQ,QAAQ,EAAEN;EACZ,CAAC;EACD,IAAIO,MAAM,GAAG;IACXL,SAAS,EAAE,QAAQ;IACnBM,QAAQ,EAAE,CAACX,IAAI,CAACY,gBAAgB,EAAER,KAAK,CAAC;IACxCS,QAAQ,EAAE,CACR;MACEP,KAAK,EAAE,GAAG;MAAEC,GAAG,EAAE;IACnB,CAAC,EACD;MACED,KAAK,EAAE,GAAG;MAAEC,GAAG,EAAE;IACnB,CAAC;EAEL,CAAC;EACD,IAAIO,QAAQ,GAAG;IACbT,SAAS,EAAE,UAAU;IACrBU,aAAa,EAAE,mBAAmB;IAAER,GAAG,EAAE,MAAM;IAAE;IACjDI,QAAQ,EAAE,CACRX,IAAI,CAACgB,OAAO,CAAChB,IAAI,CAACiB,UAAU,EAAE;MAC5BX,KAAK,EAAEL,eAAe;MACtBiB,UAAU,EAAE;IACd,CAAC,CAAC;EAEN,CAAC;EACD,IAAIC,KAAK,GAAGnB,IAAI,CAACgB,OAAO,CAACF,QAAQ,EAAE;IACjCT,SAAS,EAAE,OAAO;IAClBU,aAAa,EAAE,yCAAyC;IAAER,GAAG,EAAE;EACjE,CAAC,CAAC;EACF,IAAIa,uBAAuB,GAAG,CAC5BV,MAAM,EACNV,IAAI,CAACqB,iBAAiB,EACtBF,KAAK,EACLL,QAAQ,EACR;IACER,KAAK,EAAE;EACT,CAAC,EACD;IACED,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,aAAa;IACpBK,QAAQ,EAAE,CAACD,MAAM,EAAE;MAACJ,KAAK,EAAEJ;IAAgB,CAAC,CAAC;IAC7CoB,SAAS,EAAE;EACb,CAAC,EACD;IACEjB,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAEL,eAAe,GAAG,QAAQ;IACjCqB,SAAS,EAAE;EACb,CAAC,EACD;IACEjB,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,2EAA2E;IAClFgB,SAAS,EAAE;EACb,CAAC,EACD;IACEjB,SAAS,EAAE,UAAU;IACrBC,KAAK,EAAE;EACT,CAAC,EACD;IACEA,KAAK,EAAE;EACT,CAAC,EACD;IAAE;IACAA,KAAK,EAAE,GAAG,GAAGN,IAAI,CAACuB,cAAc,GAAG,OAAO;IAC1CZ,QAAQ,EAAE,CACRX,IAAI,CAACqB,iBAAiB,EACtB;MACEhB,SAAS,EAAE,QAAQ;MACnBmB,OAAO,EAAE,KAAK;MACdb,QAAQ,EAAE,CAACX,IAAI,CAACY,gBAAgB,EAAER,KAAK,CAAC;MACxCS,QAAQ,EAAE,CACR;QACEP,KAAK,EAAE,GAAG;QAAEC,GAAG,EAAE;MACnB,CAAC,EACD;QACED,KAAK,EAAE,OAAO;QAAEC,GAAG,EAAE;MACvB,CAAC;IAEL,CAAC,CACF;IACDe,SAAS,EAAE;EACb,CAAC,CACF;EACDlB,KAAK,CAACO,QAAQ,GAAGS,uBAAuB;EAExC,OAAO;IACLZ,OAAO,EAAEP,eAAe;IACxBQ,QAAQ,EAAEN,eAAe;IACzBQ,QAAQ,EAAES;EACZ,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}