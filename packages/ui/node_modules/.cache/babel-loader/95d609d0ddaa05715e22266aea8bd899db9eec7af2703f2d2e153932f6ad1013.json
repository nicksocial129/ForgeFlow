{"ast":null,"code":"module.exports = function (hljs) {\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/,\n    returnBegin: true,\n    end: ';',\n    endsWithParent: true,\n    contains: [{\n      className: 'attribute',\n      begin: /\\S/,\n      end: ':',\n      excludeEnd: true,\n      starts: {\n        endsWithParent: true,\n        excludeEnd: true,\n        contains: [{\n          begin: /[\\w-]+\\(/,\n          returnBegin: true,\n          contains: [{\n            className: 'built_in',\n            begin: /[\\w-]+/\n          }, {\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE]\n          }]\n        }, hljs.CSS_NUMBER_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n          className: 'number',\n          begin: '#[0-9A-Fa-f]+'\n        }, {\n          className: 'meta',\n          begin: '!important'\n        }]\n      }\n    }]\n  };\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'selector-id',\n      begin: /#[A-Za-z0-9_-]+/\n    }, {\n      className: 'selector-class',\n      begin: /\\.[A-Za-z0-9_-]+/\n    }, {\n      className: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$'\n    }, {\n      className: 'selector-pseudo',\n      begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n    }, {\n      begin: '@(font-face|page)',\n      lexemes: '[a-z-]+',\n      keywords: 'font-face page'\n    }, {\n      begin: '@',\n      end: '[{;]',\n      // at_rule eating first \"{\" is a good thing\n      // because it doesn’t let it to be parsed as\n      // a rule set but instead drops parser into\n      // the default mode which is how it should be.\n      illegal: /:/,\n      // break on Less variables @var: ...\n      contains: [{\n        className: 'keyword',\n        begin: /\\w+/\n      }, {\n        begin: /\\s/,\n        endsWithParent: true,\n        excludeEnd: true,\n        relevance: 0,\n        contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.CSS_NUMBER_MODE]\n      }]\n    }, {\n      className: 'selector-tag',\n      begin: IDENT_RE,\n      relevance: 0\n    }, {\n      begin: '{',\n      end: '}',\n      illegal: /\\S/,\n      contains: [hljs.C_BLOCK_COMMENT_MODE, RULE]\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","IDENT_RE","RULE","begin","returnBegin","end","endsWithParent","contains","className","excludeEnd","starts","APOS_STRING_MODE","QUOTE_STRING_MODE","CSS_NUMBER_MODE","C_BLOCK_COMMENT_MODE","case_insensitive","illegal","lexemes","keywords","relevance"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/css.js"],"sourcesContent":["module.exports = function(hljs) {\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      {\n        className: 'attribute',\n        begin: /\\S/, end: ':', excludeEnd: true,\n        starts: {\n          endsWithParent: true, excludeEnd: true,\n          contains: [\n            {\n              begin: /[\\w-]+\\(/, returnBegin: true,\n              contains: [\n                {\n                  className: 'built_in',\n                  begin: /[\\w-]+/\n                },\n                {\n                  begin: /\\(/, end: /\\)/,\n                  contains: [\n                    hljs.APOS_STRING_MODE,\n                    hljs.QUOTE_STRING_MODE\n                  ]\n                }\n              ]\n            },\n            hljs.CSS_NUMBER_MODE,\n            hljs.QUOTE_STRING_MODE,\n            hljs.APOS_STRING_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            {\n              className: 'number', begin: '#[0-9A-Fa-f]+'\n            },\n            {\n              className: 'meta', begin: '!important'\n            }\n          ]\n        }\n      }\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id', begin: /#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-class', begin: /\\.[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-attr',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$'\n      },\n      {\n        className: 'selector-pseudo',\n        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n      },\n      {\n        begin: '@(font-face|page)',\n        lexemes: '[a-z-]+',\n        keywords: 'font-face page'\n      },\n      {\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesn’t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        illegal: /:/, // break on Less variables @var: ...\n        contains: [\n          {\n            className: 'keyword',\n            begin: /\\w+/\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            contains: [\n              hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          RULE,\n        ]\n      }\n    ]\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,QAAQ,GAAG,yBAAyB;EACxC,IAAIC,IAAI,GAAG;IACTC,KAAK,EAAE,uCAAuC;IAAEC,WAAW,EAAE,IAAI;IAAEC,GAAG,EAAE,GAAG;IAAEC,cAAc,EAAE,IAAI;IACjGC,QAAQ,EAAE,CACR;MACEC,SAAS,EAAE,WAAW;MACtBL,KAAK,EAAE,IAAI;MAAEE,GAAG,EAAE,GAAG;MAAEI,UAAU,EAAE,IAAI;MACvCC,MAAM,EAAE;QACNJ,cAAc,EAAE,IAAI;QAAEG,UAAU,EAAE,IAAI;QACtCF,QAAQ,EAAE,CACR;UACEJ,KAAK,EAAE,UAAU;UAAEC,WAAW,EAAE,IAAI;UACpCG,QAAQ,EAAE,CACR;YACEC,SAAS,EAAE,UAAU;YACrBL,KAAK,EAAE;UACT,CAAC,EACD;YACEA,KAAK,EAAE,IAAI;YAAEE,GAAG,EAAE,IAAI;YACtBE,QAAQ,EAAE,CACRP,IAAI,CAACW,gBAAgB,EACrBX,IAAI,CAACY,iBAAiB;UAE1B,CAAC;QAEL,CAAC,EACDZ,IAAI,CAACa,eAAe,EACpBb,IAAI,CAACY,iBAAiB,EACtBZ,IAAI,CAACW,gBAAgB,EACrBX,IAAI,CAACc,oBAAoB,EACzB;UACEN,SAAS,EAAE,QAAQ;UAAEL,KAAK,EAAE;QAC9B,CAAC,EACD;UACEK,SAAS,EAAE,MAAM;UAAEL,KAAK,EAAE;QAC5B,CAAC;MAEL;IACF,CAAC;EAEL,CAAC;EAED,OAAO;IACLY,gBAAgB,EAAE,IAAI;IACtBC,OAAO,EAAE,WAAW;IACpBT,QAAQ,EAAE,CACRP,IAAI,CAACc,oBAAoB,EACzB;MACEN,SAAS,EAAE,aAAa;MAAEL,KAAK,EAAE;IACnC,CAAC,EACD;MACEK,SAAS,EAAE,gBAAgB;MAAEL,KAAK,EAAE;IACtC,CAAC,EACD;MACEK,SAAS,EAAE,eAAe;MAC1BL,KAAK,EAAE,IAAI;MAAEE,GAAG,EAAE,IAAI;MACtBW,OAAO,EAAE;IACX,CAAC,EACD;MACER,SAAS,EAAE,iBAAiB;MAC5BL,KAAK,EAAE;IACT,CAAC,EACD;MACEA,KAAK,EAAE,mBAAmB;MAC1Bc,OAAO,EAAE,SAAS;MAClBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEf,KAAK,EAAE,GAAG;MAAEE,GAAG,EAAE,MAAM;MAAE;MACA;MACA;MACA;MACzBW,OAAO,EAAE,GAAG;MAAE;MACdT,QAAQ,EAAE,CACR;QACEC,SAAS,EAAE,SAAS;QACpBL,KAAK,EAAE;MACT,CAAC,EACD;QACEA,KAAK,EAAE,IAAI;QAAEG,cAAc,EAAE,IAAI;QAAEG,UAAU,EAAE,IAAI;QACnDU,SAAS,EAAE,CAAC;QACZZ,QAAQ,EAAE,CACRP,IAAI,CAACW,gBAAgB,EAAEX,IAAI,CAACY,iBAAiB,EAC7CZ,IAAI,CAACa,eAAe;MAExB,CAAC;IAEL,CAAC,EACD;MACEL,SAAS,EAAE,cAAc;MAAEL,KAAK,EAAEF,QAAQ;MAC1CkB,SAAS,EAAE;IACb,CAAC,EACD;MACEhB,KAAK,EAAE,GAAG;MAAEE,GAAG,EAAE,GAAG;MACpBW,OAAO,EAAE,IAAI;MACbT,QAAQ,EAAE,CACRP,IAAI,CAACc,oBAAoB,EACzBZ,IAAI;IAER,CAAC;EAEL,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}