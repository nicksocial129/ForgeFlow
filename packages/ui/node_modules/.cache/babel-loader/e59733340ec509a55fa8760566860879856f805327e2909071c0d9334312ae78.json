{"ast":null,"code":"module.exports = function (hljs) {\n  /* Variables: simple (eg $(var)) and special (eg $@) */\n  var VARIABLE = {\n    className: 'variable',\n    variants: [{\n      begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\\$[@%<?\\^\\+\\*]/\n    }]\n  };\n  /* Quoted string with variables inside */\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [hljs.BACKSLASH_ESCAPE, VARIABLE]\n  };\n  /* Function: $(func arg,...) */\n  var FUNC = {\n    className: 'variable',\n    begin: /\\$\\([\\w-]+\\s/,\n    end: /\\)/,\n    keywords: {\n      built_in: 'subst patsubst strip findstring filter filter-out sort ' + 'word wordlist firstword lastword dir notdir suffix basename ' + 'addsuffix addprefix join wildcard realpath abspath error warning ' + 'shell origin flavor foreach if or and call eval file value'\n    },\n    contains: [VARIABLE]\n  };\n  /* Variable assignment */\n  var VAR_ASSIG = {\n    begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*[:+?]?=',\n    illegal: '\\\\n',\n    returnBegin: true,\n    contains: [{\n      begin: '^' + hljs.UNDERSCORE_IDENT_RE,\n      end: '[:+?]?=',\n      excludeEnd: true\n    }]\n  };\n  /* Meta targets (.PHONY) */\n  var META = {\n    className: 'meta',\n    begin: /^\\.PHONY:/,\n    end: /$/,\n    keywords: {\n      'meta-keyword': '.PHONY'\n    },\n    lexemes: /[\\.\\w]+/\n  };\n  /* Targets */\n  var TARGET = {\n    className: 'section',\n    begin: /^[^\\s]+:/,\n    end: /$/,\n    contains: [VARIABLE]\n  };\n  return {\n    aliases: ['mk', 'mak'],\n    keywords: 'define endef undefine ifdef ifndef ifeq ifneq else endif ' + 'include -include sinclude override export unexport private vpath',\n    lexemes: /[\\w-]+/,\n    contains: [hljs.HASH_COMMENT_MODE, VARIABLE, QUOTE_STRING, FUNC, VAR_ASSIG, META, TARGET]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","VARIABLE","className","variants","begin","UNDERSCORE_IDENT_RE","contains","BACKSLASH_ESCAPE","QUOTE_STRING","end","FUNC","keywords","built_in","VAR_ASSIG","illegal","returnBegin","excludeEnd","META","lexemes","TARGET","aliases","HASH_COMMENT_MODE"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/makefile.js"],"sourcesContent":["module.exports = function(hljs) {\n  /* Variables: simple (eg $(var)) and special (eg $@) */\n  var VARIABLE = {\n    className: 'variable',\n    variants: [\n      {\n        begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\n        contains: [hljs.BACKSLASH_ESCAPE],\n      },\n      {\n        begin: /\\$[@%<?\\^\\+\\*]/\n      },\n    ]\n  };\n  /* Quoted string with variables inside */\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VARIABLE,\n    ]\n  };\n  /* Function: $(func arg,...) */\n  var FUNC = {\n    className: 'variable',\n    begin: /\\$\\([\\w-]+\\s/, end: /\\)/,\n    keywords: {\n      built_in:\n        'subst patsubst strip findstring filter filter-out sort ' +\n        'word wordlist firstword lastword dir notdir suffix basename ' +\n        'addsuffix addprefix join wildcard realpath abspath error warning ' +\n        'shell origin flavor foreach if or and call eval file value',\n    },\n    contains: [\n      VARIABLE,\n    ]\n  };\n  /* Variable assignment */\n  var VAR_ASSIG = {\n    begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*[:+?]?=',\n    illegal: '\\\\n',\n    returnBegin: true,\n    contains: [\n      {\n        begin: '^' + hljs.UNDERSCORE_IDENT_RE, end: '[:+?]?=',\n        excludeEnd: true,\n      }\n    ]\n  };\n  /* Meta targets (.PHONY) */\n  var META = {\n    className: 'meta',\n    begin: /^\\.PHONY:/, end: /$/,\n    keywords: {'meta-keyword': '.PHONY'},\n    lexemes: /[\\.\\w]+/\n  };\n  /* Targets */\n  var TARGET = {\n    className: 'section',\n    begin: /^[^\\s]+:/, end: /$/,\n    contains: [VARIABLE,]\n  };\n  return {\n    aliases: ['mk', 'mak'],\n    keywords:\n      'define endef undefine ifdef ifndef ifeq ifneq else endif ' +\n      'include -include sinclude override export unexport private vpath',\n    lexemes: /[\\w-]+/,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      VARIABLE,\n      QUOTE_STRING,\n      FUNC,\n      VAR_ASSIG,\n      META,\n      TARGET,\n    ]\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B;EACA,IAAIC,QAAQ,GAAG;IACbC,SAAS,EAAE,UAAU;IACrBC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,QAAQ,GAAGJ,IAAI,CAACK,mBAAmB,GAAG,KAAK;MAClDC,QAAQ,EAAE,CAACN,IAAI,CAACO,gBAAgB;IAClC,CAAC,EACD;MACEH,KAAK,EAAE;IACT,CAAC;EAEL,CAAC;EACD;EACA,IAAII,YAAY,GAAG;IACjBN,SAAS,EAAE,QAAQ;IACnBE,KAAK,EAAE,GAAG;IAAEK,GAAG,EAAE,GAAG;IACpBH,QAAQ,EAAE,CACRN,IAAI,CAACO,gBAAgB,EACrBN,QAAQ;EAEZ,CAAC;EACD;EACA,IAAIS,IAAI,GAAG;IACTR,SAAS,EAAE,UAAU;IACrBE,KAAK,EAAE,cAAc;IAAEK,GAAG,EAAE,IAAI;IAChCE,QAAQ,EAAE;MACRC,QAAQ,EACN,yDAAyD,GACzD,8DAA8D,GAC9D,mEAAmE,GACnE;IACJ,CAAC;IACDN,QAAQ,EAAE,CACRL,QAAQ;EAEZ,CAAC;EACD;EACA,IAAIY,SAAS,GAAG;IACdT,KAAK,EAAE,GAAG,GAAGJ,IAAI,CAACK,mBAAmB,GAAG,aAAa;IACrDS,OAAO,EAAE,KAAK;IACdC,WAAW,EAAE,IAAI;IACjBT,QAAQ,EAAE,CACR;MACEF,KAAK,EAAE,GAAG,GAAGJ,IAAI,CAACK,mBAAmB;MAAEI,GAAG,EAAE,SAAS;MACrDO,UAAU,EAAE;IACd,CAAC;EAEL,CAAC;EACD;EACA,IAAIC,IAAI,GAAG;IACTf,SAAS,EAAE,MAAM;IACjBE,KAAK,EAAE,WAAW;IAAEK,GAAG,EAAE,GAAG;IAC5BE,QAAQ,EAAE;MAAC,cAAc,EAAE;IAAQ,CAAC;IACpCO,OAAO,EAAE;EACX,CAAC;EACD;EACA,IAAIC,MAAM,GAAG;IACXjB,SAAS,EAAE,SAAS;IACpBE,KAAK,EAAE,UAAU;IAAEK,GAAG,EAAE,GAAG;IAC3BH,QAAQ,EAAE,CAACL,QAAQ;EACrB,CAAC;EACD,OAAO;IACLmB,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;IACtBT,QAAQ,EACN,2DAA2D,GAC3D,kEAAkE;IACpEO,OAAO,EAAE,QAAQ;IACjBZ,QAAQ,EAAE,CACRN,IAAI,CAACqB,iBAAiB,EACtBpB,QAAQ,EACRO,YAAY,EACZE,IAAI,EACJG,SAAS,EACTI,IAAI,EACJE,MAAM;EAEV,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}