{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGWrapper = void 0;\nvar BBox_js_1 = require(\"../../util/BBox.js\");\nvar Wrapper_js_1 = require(\"../common/Wrapper.js\");\nvar svg_js_1 = require(\"../svg.js\");\nvar SVGWrapper = function (_super) {\n  __extends(SVGWrapper, _super);\n  function SVGWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.element = null;\n    _this.dx = 0;\n    return _this;\n  }\n  SVGWrapper.prototype.toSVG = function (parent) {\n    this.addChildren(this.standardSVGnode(parent));\n  };\n  SVGWrapper.prototype.addChildren = function (parent) {\n    var e_1, _a;\n    var x = 0;\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n        child.toSVG(parent);\n        var bbox = child.getOuterBBox();\n        if (child.element) {\n          child.place(x + bbox.L * bbox.rscale, 0);\n        }\n        x += (bbox.L + bbox.w + bbox.R) * bbox.rscale;\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  SVGWrapper.prototype.standardSVGnode = function (parent) {\n    var svg = this.createSVGnode(parent);\n    this.handleStyles();\n    this.handleScale();\n    this.handleBorder();\n    this.handleColor();\n    this.handleAttributes();\n    return svg;\n  };\n  SVGWrapper.prototype.createSVGnode = function (parent) {\n    this.element = this.svg('g', {\n      'data-mml-node': this.node.kind\n    });\n    var href = this.node.attributes.get('href');\n    if (href) {\n      parent = this.adaptor.append(parent, this.svg('a', {\n        href: href\n      }));\n      var _a = this.getOuterBBox(),\n        h = _a.h,\n        d = _a.d,\n        w = _a.w;\n      this.adaptor.append(this.element, this.svg('rect', {\n        'data-hitbox': true,\n        fill: 'none',\n        stroke: 'none',\n        'pointer-events': 'all',\n        width: this.fixed(w),\n        height: this.fixed(h + d),\n        y: this.fixed(-d)\n      }));\n    }\n    this.adaptor.append(parent, this.element);\n    return this.element;\n  };\n  SVGWrapper.prototype.handleStyles = function () {\n    var _this = this;\n    if (!this.styles) return;\n    var styles = this.styles.cssText;\n    if (styles) {\n      this.adaptor.setAttribute(this.element, 'style', styles);\n    }\n    BBox_js_1.BBox.StyleAdjust.forEach(function (_a) {\n      var _b = __read(_a, 3),\n        name = _b[0],\n        lr = _b[2];\n      if (lr !== 0) return;\n      var x = _this.styles.get(name);\n      if (x) {\n        _this.dx += _this.length2em(x, 1, _this.bbox.rscale);\n      }\n    });\n  };\n  SVGWrapper.prototype.handleScale = function () {\n    if (this.bbox.rscale !== 1) {\n      var scale = 'scale(' + this.fixed(this.bbox.rscale / 1000, 3) + ')';\n      this.adaptor.setAttribute(this.element, 'transform', scale);\n    }\n  };\n  SVGWrapper.prototype.handleColor = function () {\n    var _a;\n    var adaptor = this.adaptor;\n    var attributes = this.node.attributes;\n    var mathcolor = attributes.getExplicit('mathcolor');\n    var color = attributes.getExplicit('color');\n    var mathbackground = attributes.getExplicit('mathbackground');\n    var background = attributes.getExplicit('background');\n    var bgcolor = ((_a = this.styles) === null || _a === void 0 ? void 0 : _a.get('background-color')) || '';\n    if (mathcolor || color) {\n      adaptor.setAttribute(this.element, 'fill', mathcolor || color);\n      adaptor.setAttribute(this.element, 'stroke', mathcolor || color);\n    }\n    if (mathbackground || background || bgcolor) {\n      var _b = this.getOuterBBox(),\n        h = _b.h,\n        d = _b.d,\n        w = _b.w;\n      var rect = this.svg('rect', {\n        fill: mathbackground || background || bgcolor,\n        x: this.fixed(-this.dx),\n        y: this.fixed(-d),\n        width: this.fixed(w),\n        height: this.fixed(h + d),\n        'data-bgcolor': true\n      });\n      var child = adaptor.firstChild(this.element);\n      if (child) {\n        adaptor.insert(rect, child);\n      } else {\n        adaptor.append(this.element, rect);\n      }\n    }\n  };\n  SVGWrapper.prototype.handleBorder = function () {\n    var e_2, _a, e_3, _b;\n    if (!this.styles) return;\n    var width = Array(4).fill(0);\n    var style = Array(4);\n    var color = Array(4);\n    try {\n      for (var _c = __values([['Top', 0], ['Right', 1], ['Bottom', 2], ['Left', 3]]), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var _e = __read(_d.value, 2),\n          name_1 = _e[0],\n          i = _e[1];\n        var key = 'border' + name_1;\n        var w_1 = this.styles.get(key + 'Width');\n        if (!w_1) continue;\n        width[i] = Math.max(0, this.length2em(w_1, 1, this.bbox.rscale));\n        style[i] = this.styles.get(key + 'Style') || 'solid';\n        color[i] = this.styles.get(key + 'Color') || 'currentColor';\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    var f = SVGWrapper.borderFuzz;\n    var bbox = this.getOuterBBox();\n    var _f = __read([bbox.h + f, bbox.d + f, bbox.w + f], 3),\n      h = _f[0],\n      d = _f[1],\n      w = _f[2];\n    var outerRT = [w, h];\n    var outerLT = [-f, h];\n    var outerRB = [w, -d];\n    var outerLB = [-f, -d];\n    var innerRT = [w - width[1], h - width[0]];\n    var innerLT = [-f + width[3], h - width[0]];\n    var innerRB = [w - width[1], -d + width[2]];\n    var innerLB = [-f + width[3], -d + width[2]];\n    var paths = [[outerLT, outerRT, innerRT, innerLT], [outerRB, outerRT, innerRT, innerRB], [outerLB, outerRB, innerRB, innerLB], [outerLB, outerLT, innerLT, innerLB]];\n    var adaptor = this.adaptor;\n    var child = adaptor.firstChild(this.element);\n    try {\n      for (var _g = __values([0, 1, 2, 3]), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var i = _h.value;\n        if (!width[i]) continue;\n        var path = paths[i];\n        if (style[i] === 'dashed' || style[i] === 'dotted') {\n          this.addBorderBroken(path, color[i], style[i], width[i], i);\n        } else {\n          this.addBorderSolid(path, color[i], child);\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n  SVGWrapper.prototype.addBorderSolid = function (path, color, child) {\n    var _this = this;\n    var border = this.svg('polygon', {\n      points: path.map(function (_a) {\n        var _b = __read(_a, 2),\n          x = _b[0],\n          y = _b[1];\n        return \"\".concat(_this.fixed(x - _this.dx), \",\").concat(_this.fixed(y));\n      }).join(' '),\n      stroke: 'none',\n      fill: color\n    });\n    if (child) {\n      this.adaptor.insert(border, child);\n    } else {\n      this.adaptor.append(this.element, border);\n    }\n  };\n  SVGWrapper.prototype.addBorderBroken = function (path, color, style, t, i) {\n    var dot = style === 'dotted';\n    var t2 = t / 2;\n    var _a = __read([[t2, -t2, -t2, -t2], [-t2, t2, -t2, -t2], [t2, t2, -t2, t2], [t2, t2, t2, -t2]][i], 4),\n      tx1 = _a[0],\n      ty1 = _a[1],\n      tx2 = _a[2],\n      ty2 = _a[3];\n    var _b = __read(path, 2),\n      A = _b[0],\n      B = _b[1];\n    var x1 = A[0] + tx1 - this.dx,\n      y1 = A[1] + ty1;\n    var x2 = B[0] + tx2 - this.dx,\n      y2 = B[1] + ty2;\n    var W = Math.abs(i % 2 ? y2 - y1 : x2 - x1);\n    var n = dot ? Math.ceil(W / (2 * t)) : Math.ceil((W - t) / (4 * t));\n    var m = W / (4 * n + 1);\n    var line = this.svg('line', {\n      x1: this.fixed(x1),\n      y1: this.fixed(y1),\n      x2: this.fixed(x2),\n      y2: this.fixed(y2),\n      'stroke-width': this.fixed(t),\n      stroke: color,\n      'stroke-linecap': dot ? 'round' : 'square',\n      'stroke-dasharray': dot ? [1, this.fixed(W / n - .002)].join(' ') : [this.fixed(m), this.fixed(3 * m)].join(' ')\n    });\n    var adaptor = this.adaptor;\n    var child = adaptor.firstChild(this.element);\n    if (child) {\n      adaptor.insert(line, child);\n    } else {\n      adaptor.append(this.element, line);\n    }\n  };\n  SVGWrapper.prototype.handleAttributes = function () {\n    var e_4, _a, e_5, _b;\n    var attributes = this.node.attributes;\n    var defaults = attributes.getAllDefaults();\n    var skip = SVGWrapper.skipAttributes;\n    try {\n      for (var _c = __values(attributes.getExplicitNames()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var name_2 = _d.value;\n        if (skip[name_2] === false || !(name_2 in defaults) && !skip[name_2] && !this.adaptor.hasAttribute(this.element, name_2)) {\n          this.adaptor.setAttribute(this.element, name_2, attributes.getExplicit(name_2));\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    if (attributes.get('class')) {\n      var names = attributes.get('class').trim().split(/ +/);\n      try {\n        for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n          var name_3 = names_1_1.value;\n          this.adaptor.addClass(this.element, name_3);\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (names_1_1 && !names_1_1.done && (_b = names_1.return)) _b.call(names_1);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n    }\n  };\n  SVGWrapper.prototype.place = function (x, y, element) {\n    if (element === void 0) {\n      element = null;\n    }\n    x += this.dx;\n    if (!(x || y)) return;\n    if (!element) {\n      element = this.element;\n      y = this.handleId(y);\n    }\n    var translate = \"translate(\".concat(this.fixed(x), \",\").concat(this.fixed(y), \")\");\n    var transform = this.adaptor.getAttribute(element, 'transform') || '';\n    this.adaptor.setAttribute(element, 'transform', translate + (transform ? ' ' + transform : ''));\n  };\n  SVGWrapper.prototype.handleId = function (y) {\n    if (!this.node.attributes || !this.node.attributes.get('id')) {\n      return y;\n    }\n    var adaptor = this.adaptor;\n    var h = this.getBBox().h;\n    var children = adaptor.childNodes(this.element);\n    children.forEach(function (child) {\n      return adaptor.remove(child);\n    });\n    var g = this.svg('g', {\n      'data-idbox': true,\n      transform: \"translate(0,\".concat(this.fixed(-h), \")\")\n    }, children);\n    adaptor.append(this.element, this.svg('text', {\n      'data-id-align': true\n    }, [this.text('')]));\n    adaptor.append(this.element, g);\n    return y + h;\n  };\n  SVGWrapper.prototype.firstChild = function () {\n    var adaptor = this.adaptor;\n    var child = adaptor.firstChild(this.element);\n    if (child && adaptor.kind(child) === 'text' && adaptor.getAttribute(child, 'data-id-align')) {\n      child = adaptor.firstChild(adaptor.next(child));\n    }\n    if (child && adaptor.kind(child) === 'rect' && adaptor.getAttribute(child, 'data-hitbox')) {\n      child = adaptor.next(child);\n    }\n    return child;\n  };\n  SVGWrapper.prototype.placeChar = function (n, x, y, parent, variant) {\n    var e_6, _a;\n    if (variant === void 0) {\n      variant = null;\n    }\n    if (variant === null) {\n      variant = this.variant;\n    }\n    var C = n.toString(16).toUpperCase();\n    var _b = __read(this.getVariantChar(variant, n), 4),\n      w = _b[2],\n      data = _b[3];\n    if ('p' in data) {\n      var path = data.p ? 'M' + data.p + 'Z' : '';\n      this.place(x, y, this.adaptor.append(parent, this.charNode(variant, C, path)));\n    } else if ('c' in data) {\n      var g = this.adaptor.append(parent, this.svg('g', {\n        'data-c': C\n      }));\n      this.place(x, y, g);\n      x = 0;\n      try {\n        for (var _c = __values(this.unicodeChars(data.c, variant)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var n_1 = _d.value;\n          x += this.placeChar(n_1, x, y, g, variant);\n        }\n      } catch (e_6_1) {\n        e_6 = {\n          error: e_6_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_6) throw e_6.error;\n        }\n      }\n    } else if (data.unknown) {\n      var char = String.fromCodePoint(n);\n      var text = this.adaptor.append(parent, this.jax.unknownText(char, variant));\n      this.place(x, y, text);\n      return this.jax.measureTextNodeWithCache(text, char, variant).w;\n    }\n    return w;\n  };\n  SVGWrapper.prototype.charNode = function (variant, C, path) {\n    var cache = this.jax.options.fontCache;\n    return cache !== 'none' ? this.useNode(variant, C, path) : this.pathNode(C, path);\n  };\n  SVGWrapper.prototype.pathNode = function (C, path) {\n    return this.svg('path', {\n      'data-c': C,\n      d: path\n    });\n  };\n  SVGWrapper.prototype.useNode = function (variant, C, path) {\n    var use = this.svg('use', {\n      'data-c': C\n    });\n    var id = '#' + this.jax.fontCache.cachePath(variant, C, path);\n    this.adaptor.setAttribute(use, 'href', id, svg_js_1.XLINKNS);\n    return use;\n  };\n  SVGWrapper.prototype.drawBBox = function () {\n    var _a = this.getBBox(),\n      w = _a.w,\n      h = _a.h,\n      d = _a.d;\n    var box = this.svg('g', {\n      style: {\n        opacity: .25\n      }\n    }, [this.svg('rect', {\n      fill: 'red',\n      height: this.fixed(h),\n      width: this.fixed(w)\n    }), this.svg('rect', {\n      fill: 'green',\n      height: this.fixed(d),\n      width: this.fixed(w),\n      y: this.fixed(-d)\n    })]);\n    var node = this.element || this.parent.element;\n    this.adaptor.append(node, box);\n  };\n  SVGWrapper.prototype.html = function (type, def, content) {\n    if (def === void 0) {\n      def = {};\n    }\n    if (content === void 0) {\n      content = [];\n    }\n    return this.jax.html(type, def, content);\n  };\n  SVGWrapper.prototype.svg = function (type, def, content) {\n    if (def === void 0) {\n      def = {};\n    }\n    if (content === void 0) {\n      content = [];\n    }\n    return this.jax.svg(type, def, content);\n  };\n  SVGWrapper.prototype.text = function (text) {\n    return this.jax.text(text);\n  };\n  SVGWrapper.prototype.fixed = function (x, n) {\n    if (n === void 0) {\n      n = 1;\n    }\n    return this.jax.fixed(x * 1000, n);\n  };\n  SVGWrapper.kind = 'unknown';\n  SVGWrapper.borderFuzz = 0.005;\n  return SVGWrapper;\n}(Wrapper_js_1.CommonWrapper);\nexports.SVGWrapper = SVGWrapper;","map":{"version":3,"names":["BBox_js_1","require","Wrapper_js_1","svg_js_1","SVGWrapper","_super","__extends","_this","apply","arguments","element","dx","prototype","toSVG","parent","addChildren","standardSVGnode","x","_b","__values","childNodes","_c","next","done","child","value","bbox","getOuterBBox","place","L","rscale","w","R","svg","createSVGnode","handleStyles","handleScale","handleBorder","handleColor","handleAttributes","node","kind","href","attributes","get","adaptor","append","_a","h","d","fill","stroke","width","fixed","height","y","styles","cssText","setAttribute","BBox","StyleAdjust","forEach","__read","name","lr","length2em","scale","mathcolor","getExplicit","color","mathbackground","background","bgcolor","rect","firstChild","insert","Array","style","_d","_e","name_1","i","key","w_1","Math","max","f","borderFuzz","_f","outerRT","outerLT","outerRB","outerLB","innerRT","innerLT","innerRB","innerLB","paths","_g","_h","path","addBorderBroken","addBorderSolid","border","points","map","concat","join","t","dot","t2","tx1","ty1","tx2","ty2","A","B","x1","y1","x2","y2","W","abs","n","ceil","m","line","defaults","getAllDefaults","skip","skipAttributes","getExplicitNames","name_2","hasAttribute","names","trim","split","names_1","names_1_1","name_3","addClass","handleId","translate","transform","getAttribute","getBBox","children","remove","g","text","placeChar","variant","C","toString","toUpperCase","getVariantChar","data","p","charNode","unicodeChars","c","n_1","unknown","char","String","fromCodePoint","jax","unknownText","measureTextNodeWithCache","cache","options","fontCache","useNode","pathNode","use","id","cachePath","XLINKNS","drawBBox","box","opacity","html","type","def","content","CommonWrapper","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/svg/Wrapper.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGWrapper class\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {OptionList} from '../../util/Options.js';\nimport {BBox} from '../../util/BBox.js';\nimport {CommonWrapper, AnyWrapperClass, Constructor} from '../common/Wrapper.js';\nimport {SVG, XLINKNS} from '../svg.js';\nimport {SVGWrapperFactory} from './WrapperFactory.js';\nimport {SVGFontData, SVGDelimiterData, SVGCharOptions} from './FontData.js';\n\nexport {Constructor, StringMap} from '../common/Wrapper.js';\n\n/*****************************************************************/\n\n/**\n * Shorthand for makeing a SVGWrapper constructor\n */\nexport type SVGConstructor<N, T, D> = Constructor<SVGWrapper<N, T, D>>;\n\n\n/*****************************************************************/\n/**\n *  The type of the SVGWrapper class (used when creating the wrapper factory for this class)\n */\nexport interface SVGWrapperClass extends AnyWrapperClass {\n\n  kind: string;\n\n}\n\n/*****************************************************************/\n/**\n *  The base SVGWrapper class\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGWrapper<N, T, D> extends\nCommonWrapper<\n  SVG<N, T, D>,\n  SVGWrapper<N, T, D>,\n  SVGWrapperClass,\n  SVGCharOptions,\n  SVGDelimiterData,\n  SVGFontData\n> {\n\n  /**\n   * The kind of wrapper\n   */\n  public static kind: string = 'unknown';\n\n  /**\n   * A fuzz factor for borders to avoid anti-alias problems at the edges\n   */\n  public static borderFuzz = 0.005;\n\n  /**\n   * The factory used to create more SVGWrappers\n   */\n  protected factory: SVGWrapperFactory<N, T, D>;\n\n  /**\n   * @override\n   */\n  public parent: SVGWrapper<N, T, D>;\n  /**\n   * @override\n   */\n  public childNodes: SVGWrapper<N, T, D>[];\n\n  /**\n   * The SVG element generated for this wrapped node\n   */\n  public element: N = null;\n\n  /**\n   * Offset due to border/padding\n   */\n  public dx: number = 0;\n\n  /**\n   * @override\n   */\n  public font: SVGFontData;\n\n  /*******************************************************************/\n\n  /**\n   * Create the HTML for the wrapped node.\n   *\n   * @param {N} parent  The HTML node where the output is added\n   */\n  public toSVG(parent: N) {\n    this.addChildren(this.standardSVGnode(parent));\n  }\n\n  /**\n   * @param {N} parent  The element in which to add the children\n   */\n  public addChildren(parent: N) {\n    let x = 0;\n    for (const child of this.childNodes) {\n      child.toSVG(parent);\n      const bbox = child.getOuterBBox();\n      if (child.element) {\n        child.place(x + bbox.L * bbox.rscale, 0);\n      }\n      x += (bbox.L + bbox.w + bbox.R) * bbox.rscale;\n    }\n  }\n\n  /*******************************************************************/\n\n  /**\n   * Create the standard SVG element for the given wrapped node.\n   *\n   * @param {N} parent  The HTML element in which the node is to be created\n   * @returns {N}  The root of the HTML tree for the wrapped node's output\n   */\n  protected standardSVGnode(parent: N): N {\n    const svg = this.createSVGnode(parent);\n    this.handleStyles();\n    this.handleScale();\n    this.handleBorder();\n    this.handleColor();\n    this.handleAttributes();\n    return svg;\n  }\n\n  /**\n   * @param {N} parent  The HTML element in which the node is to be created\n   * @returns {N}  The root of the HTML tree for the wrapped node's output\n   */\n  protected createSVGnode(parent: N): N {\n    this.element = this.svg('g', {'data-mml-node': this.node.kind});\n    const href = this.node.attributes.get('href');\n    if (href) {\n      parent = this.adaptor.append(parent, this.svg('a', {href: href})) as N;\n      const {h, d, w} = this.getOuterBBox();\n      this.adaptor.append(this.element, this.svg('rect', {\n        'data-hitbox': true, fill: 'none', stroke: 'none', 'pointer-events': 'all',\n        width: this.fixed(w), height: this.fixed(h + d), y: this.fixed(-d)\n      }));\n    }\n    this.adaptor.append(parent, this.element) as N;\n    return this.element;\n  }\n\n  /**\n   * Set the CSS styles for the svg element\n   */\n  protected handleStyles() {\n    if (!this.styles) return;\n    const styles = this.styles.cssText;\n    if (styles) {\n      this.adaptor.setAttribute(this.element, 'style', styles);\n    }\n    BBox.StyleAdjust.forEach(([name, , lr]) => {\n      if (lr !== 0) return;\n      const x = this.styles.get(name);\n      if (x) {\n        this.dx += this.length2em(x, 1, this.bbox.rscale);\n      }\n    });\n  }\n\n  /**\n   * Set the (relative) scaling factor for the node\n   */\n  protected handleScale() {\n    if (this.bbox.rscale !== 1) {\n      const scale = 'scale(' + this.fixed(this.bbox.rscale / 1000, 3) + ')';\n      this.adaptor.setAttribute(this.element, 'transform', scale);\n    }\n  }\n\n  /**\n   * Add the foreground and background colors\n   * (Only look at explicit attributes, since inherited ones will\n   *  be applied to a parent element, and we will inherit from that)\n   */\n  protected handleColor() {\n    const adaptor = this.adaptor;\n    const attributes = this.node.attributes;\n    const mathcolor = attributes.getExplicit('mathcolor') as string;\n    const color = attributes.getExplicit('color') as string;\n    const mathbackground = attributes.getExplicit('mathbackground') as string;\n    const background = attributes.getExplicit('background') as string;\n    const bgcolor = (this.styles?.get('background-color') || '');\n    if (mathcolor || color) {\n      adaptor.setAttribute(this.element, 'fill', mathcolor || color);\n      adaptor.setAttribute(this.element, 'stroke', mathcolor || color);\n    }\n    if (mathbackground || background || bgcolor) {\n      let {h, d, w} = this.getOuterBBox();\n      let rect = this.svg('rect', {\n        fill: mathbackground || background || bgcolor,\n        x: this.fixed(-this.dx), y: this.fixed(-d),\n        width: this.fixed(w),\n        height: this.fixed(h + d),\n        'data-bgcolor': true\n      });\n      let child = adaptor.firstChild(this.element);\n      if (child) {\n        adaptor.insert(rect, child);\n      } else {\n        adaptor.append(this.element, rect);\n      }\n    }\n  }\n\n  /**\n   * Create the borders, if any are requested.\n   */\n  protected handleBorder() {\n    if (!this.styles) return;\n    const width = Array(4).fill(0);\n    const style = Array(4);\n    const color = Array(4);\n    for (const [name, i] of [['Top', 0], ['Right', 1], ['Bottom', 2], ['Left', 3]] as [string, number][]) {\n      const key = 'border' + name;\n      const w = this.styles.get(key + 'Width');\n      if (!w) continue;\n      width[i] = Math.max(0, this.length2em(w, 1, this.bbox.rscale));\n      style[i] = this.styles.get(key + 'Style') || 'solid';\n      color[i] = this.styles.get(key + 'Color') || 'currentColor';\n    }\n    const f = SVGWrapper.borderFuzz;\n    const bbox = this.getOuterBBox();\n    const [h, d, w] = [bbox.h + f, bbox.d + f, bbox.w + f];\n    const outerRT = [w, h];\n    const outerLT = [-f, h];\n    const outerRB = [w, -d];\n    const outerLB = [-f, -d];\n    const innerRT = [w - width[1], h - width[0]];\n    const innerLT = [-f + width[3], h - width[0]];\n    const innerRB = [w - width[1], -d + width[2]];\n    const innerLB = [-f + width[3], -d + width[2]];\n    const paths: number[][][] = [\n      [outerLT, outerRT, innerRT, innerLT],\n      [outerRB, outerRT, innerRT, innerRB],\n      [outerLB, outerRB, innerRB, innerLB],\n      [outerLB, outerLT, innerLT, innerLB]\n    ];\n    const adaptor = this.adaptor;\n    const child = adaptor.firstChild(this.element) as N;\n    for (const i of [0, 1, 2, 3]) {\n      if (!width[i]) continue;\n      const path = paths[i];\n      if (style[i] === 'dashed' || style[i] === 'dotted') {\n        this.addBorderBroken(path, color[i], style[i], width[i], i);\n      } else {\n        this.addBorderSolid(path, color[i], child);\n      }\n    }\n  }\n\n  /**\n   * Create a solid border piece with the given color\n   *\n   * @param {[number, number][]} path    The points for the border segment\n   * @param {string} color               The color to use\n   * @param {N} child                    Insert the border before this child, if any\n   */\n  protected addBorderSolid(path: number[][], color: string, child: N) {\n    const border = this.svg('polygon', {\n      points: path.map(([x, y]) => `${this.fixed(x - this.dx)},${this.fixed(y)}`).join(' '),\n      stroke: 'none',\n      fill: color\n    });\n    if (child) {\n      this.adaptor.insert(border, child);\n    } else {\n      this.adaptor.append(this.element, border);\n    }\n  }\n\n  /**\n   * Create a dashed or dotted border line with the given width and color\n   *\n   * @param {[number, number][]} path   The points for the border segment\n   * @param {string} color              The color to use\n   * @param {string} style              Either 'dotted' or 'dashed'\n   * @param {number} t                  The thickness for the border line\n   * @param {number} i                  The side being drawn\n   */\n  protected addBorderBroken(path: number[][], color: string, style: string, t: number, i: number) {\n    const dot = (style === 'dotted');\n    const t2 = t / 2;\n    const [tx1, ty1, tx2, ty2] = [[t2, -t2, -t2, -t2], [-t2, t2, -t2, -t2], [t2, t2, -t2, t2], [t2, t2, t2, -t2]][i];\n    const [A, B] = path;\n    const x1 = A[0] + tx1 - this.dx, y1 = A[1] + ty1;\n    const x2 = B[0] + tx2 - this.dx, y2 = B[1] + ty2;\n    const W = Math.abs(i % 2 ? y2 - y1 : x2 - x1);\n    const n = (dot ? Math.ceil(W / (2 * t)) : Math.ceil((W - t) / (4 * t)));\n    const m = W / (4 * n + 1);\n    const line = this.svg('line', {\n      x1: this.fixed(x1), y1: this.fixed(y1),\n      x2: this.fixed(x2), y2: this.fixed(y2),\n      'stroke-width': this.fixed(t), stroke: color, 'stroke-linecap': dot ? 'round' : 'square',\n      'stroke-dasharray': dot ? [1, this.fixed(W / n - .002)].join(' ') : [this.fixed(m), this.fixed(3 * m)].join(' ')\n    });\n    const adaptor = this.adaptor;\n    const child = adaptor.firstChild(this.element);\n    if (child) {\n      adaptor.insert(line, child);\n    } else {\n      adaptor.append(this.element, line);\n    }\n  }\n\n  /**\n   * Copy RDFa, aria, and other tags from the MathML to the SVG output nodes.\n   * Don't copy those in the skipAttributes list, or anything that already exists\n   * as a property of the node (e.g., no \"onlick\", etc.).  If a name in the\n   * skipAttributes object is set to false, then the attribute WILL be copied.\n   * Add the class to any other classes already in use.\n   */\n  protected handleAttributes() {\n    const attributes = this.node.attributes;\n    const defaults = attributes.getAllDefaults();\n    const skip = SVGWrapper.skipAttributes;\n    for (const name of attributes.getExplicitNames()) {\n      if (skip[name] === false || (!(name in defaults) && !skip[name] &&\n                                   !this.adaptor.hasAttribute(this.element, name))) {\n        this.adaptor.setAttribute(this.element, name, attributes.getExplicit(name) as string);\n      }\n    }\n    if (attributes.get('class')) {\n      const names = (attributes.get('class') as string).trim().split(/ +/);\n      for (const name of names) {\n        this.adaptor.addClass(this.element, name);\n      }\n    }\n  }\n\n  /*******************************************************************/\n\n  /**\n   * @param {number} x   The x-offset for the element\n   * @param {number} y   The y-offset for the element\n   * @param {N} element  The element to be placed\n   */\n  public place(x: number, y: number, element: N = null) {\n    x += this.dx;\n    if (!(x || y)) return;\n    if (!element) {\n      element = this.element;\n      y = this.handleId(y);\n    }\n    const translate = `translate(${this.fixed(x)},${this.fixed(y)})`;\n    const transform = this.adaptor.getAttribute(element, 'transform') || '';\n    this.adaptor.setAttribute(element, 'transform', translate + (transform ? ' ' + transform : ''));\n  }\n\n  /**\n   * Firefox and Safari don't scroll to the top of the element with an Id, so\n   *   we shift the element up and then translate its contents down in order to\n   *   correct for their positioning.  Also, Safari will go to the baseline of\n   *   a <text> element (e.g., when mtextInheritFont is true), so add a text\n   *   element to help Safari get the right location.\n   *\n   * @param {number} y     The current offset of the element\n   * @return {number}      The new offset for the element if it has an id\n   */\n  protected handleId(y: number): number {\n    if (!this.node.attributes || !this.node.attributes.get('id')) {\n      return y;\n    }\n    const adaptor = this.adaptor;\n    const h = this.getBBox().h;\n    //\n    //  Remove the element's children and put them into a <g> with transform\n    //\n    const children =  adaptor.childNodes(this.element);\n    children.forEach(child => adaptor.remove(child));\n    const g = this.svg('g', {'data-idbox': true, transform: `translate(0,${this.fixed(-h)})`}, children);\n    //\n    //  Add the text element (not transformed) and the transformed <g>\n    //\n    adaptor.append(this.element, this.svg('text', {'data-id-align': true} , [this.text('')]));\n    adaptor.append(this.element, g);\n    return y + h;\n  }\n\n  /**\n   * Return the first child element, skipping id align boxes and href hit boxes\n   *\n   * @return {N}   The first \"real\" child element\n   */\n  public firstChild(): N {\n    const adaptor = this.adaptor;\n    let child = adaptor.firstChild(this.element);\n    if (child && adaptor.kind(child) === 'text' && adaptor.getAttribute(child, 'data-id-align')) {\n      child = adaptor.firstChild(adaptor.next(child));\n    }\n    if (child && adaptor.kind(child) === 'rect' && adaptor.getAttribute(child, 'data-hitbox')) {\n      child = adaptor.next(child);\n    }\n    return child;\n  }\n\n  /**\n   * @param {number} n        The character number\n   * @param {number} x        The x-position of the character\n   * @param {number} y        The y-position of the character\n   * @param {N} parent        The container for the character\n   * @param {string} variant  The variant to use for the character\n   * @return {number}         The width of the character\n   */\n  public placeChar(n: number, x: number, y: number, parent: N, variant: string = null): number {\n    if (variant === null) {\n      variant = this.variant;\n    }\n    const C = n.toString(16).toUpperCase();\n    const [ , , w, data] = this.getVariantChar(variant, n);\n    if ('p' in data) {\n      const path = (data.p ? 'M' + data.p + 'Z' : '');\n      this.place(x, y, this.adaptor.append(parent, this.charNode(variant, C, path)));\n    } else if ('c' in data) {\n      const g = this.adaptor.append(parent, this.svg('g', {'data-c': C}));\n      this.place(x, y, g);\n      x = 0;\n      for (const n of this.unicodeChars(data.c, variant)) {\n        x += this.placeChar(n, x, y, g, variant);\n      }\n    } else if (data.unknown) {\n      const char = String.fromCodePoint(n);\n      const text = this.adaptor.append(parent, this.jax.unknownText(char, variant));\n      this.place(x, y, text);\n      return this.jax.measureTextNodeWithCache(text, char, variant).w;\n    }\n    return w;\n  }\n\n  /**\n   * @param {string} variant    The name of the variant being used\n   * @param {string} C          The hex string for the character code\n   * @param {string} path       The data from the character\n   * @return {N}                The <path> or <use> node for the glyph\n   */\n  protected charNode(variant: string, C: string, path: string): N {\n    const cache = this.jax.options.fontCache;\n    return (cache !== 'none' ? this.useNode(variant, C, path) : this.pathNode(C, path));\n  }\n\n  /**\n   * @param {string} C          The hex string for the character code\n   * @param {string} path       The data from the character\n   * @return {N}                The <path> for the glyph\n   */\n  protected pathNode(C: string, path: string): N {\n    return this.svg('path', {'data-c': C, d: path});\n  }\n\n  /**\n   * @param {string} variant    The name of the variant being used\n   * @param {string} C          The hex string for the character code\n   * @param {string} path       The data from the character\n   * @return {N}                The <use> node for the glyph\n   */\n  protected useNode(variant: string, C: string, path: string): N {\n    const use = this.svg('use', {'data-c': C});\n    const id = '#' + this.jax.fontCache.cachePath(variant, C, path);\n    this.adaptor.setAttribute(use, 'href', id, XLINKNS);\n    return use;\n  }\n\n  /*******************************************************************/\n  /**\n   * For debugging\n   */\n\n  public drawBBox() {\n    let {w, h, d}  = this.getBBox();\n    const box = this.svg('g', {style: {\n      opacity: .25\n    }}, [\n      this.svg('rect', {\n        fill: 'red',\n        height: this.fixed(h),\n        width: this.fixed(w)\n      }),\n      this.svg('rect', {\n        fill: 'green',\n        height: this.fixed(d),\n        width: this.fixed(w),\n        y: this.fixed(-d)\n      })\n    ] as N[]);\n    const node = this.element || this.parent.element;\n    this.adaptor.append(node, box);\n  }\n\n  /*******************************************************************/\n  /*\n   * Easy access to some utility routines\n   */\n\n  /**\n   * @param {string} type      The tag name of the HTML node to be created\n   * @param {OptionList} def   The properties to set for the created node\n   * @param {(N|T)[]} content  The child nodes for the created HTML node\n   * @return {N}               The generated HTML tree\n   */\n  public html(type: string, def: OptionList = {}, content: (N | T)[] = []): N {\n    return this.jax.html(type, def, content);\n  }\n\n  /**\n   * @param {string} type      The tag name of the svg node to be created\n   * @param {OptionList} def   The properties to set for the created node\n   * @param {(N|T)[]} content  The child nodes for the created SVG node\n   * @return {N}               The generated SVG tree\n   */\n  public svg(type: string, def: OptionList = {}, content: (N | T)[] = []): N {\n    return this.jax.svg(type, def, content);\n  }\n\n  /**\n   * @param {string} text  The text from which to create an HTML text node\n   * @return {T}  The generated text node with the given text\n   */\n  public text(text: string): T {\n    return this.jax.text(text);\n  }\n\n  /**\n   * @param {number} x   The dimension to display\n   * @param {number=} n  The number of digits to display\n   * @return {string}    The dimension with the given number of digits (minus trailing zeros)\n   */\n  public fixed(x: number, n: number = 1): string {\n    return this.jax.fixed(x * 1000, n);\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}