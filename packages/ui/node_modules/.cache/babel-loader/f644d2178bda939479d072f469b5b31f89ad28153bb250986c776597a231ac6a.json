{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextParser = void 0;\nvar TexParser_js_1 = __importDefault(require(\"../TexParser.js\"));\nvar TexError_js_1 = __importDefault(require(\"../TexError.js\"));\nvar ParseUtil_js_1 = __importDefault(require(\"../ParseUtil.js\"));\nvar MmlNode_js_1 = require(\"../../../core/MmlTree/MmlNode.js\");\nvar NodeUtil_js_1 = __importDefault(require(\"../NodeUtil.js\"));\nvar BaseItems_js_1 = require(\"../base/BaseItems.js\");\nvar TextParser = function (_super) {\n  __extends(TextParser, _super);\n  function TextParser(text, env, configuration, level) {\n    var _this = _super.call(this, text, env, configuration) || this;\n    _this.level = level;\n    return _this;\n  }\n  Object.defineProperty(TextParser.prototype, \"texParser\", {\n    get: function () {\n      return this.configuration.packageData.get('textmacros').texParser;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TextParser.prototype, \"tags\", {\n    get: function () {\n      return this.texParser.tags;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TextParser.prototype.mml = function () {\n    return this.level != null ? this.create('node', 'mstyle', this.nodes, {\n      displaystyle: false,\n      scriptlevel: this.level\n    }) : this.nodes.length === 1 ? this.nodes[0] : this.create('node', 'mrow', this.nodes);\n  };\n  TextParser.prototype.Parse = function () {\n    this.text = '';\n    this.nodes = [];\n    this.envStack = [];\n    _super.prototype.Parse.call(this);\n  };\n  TextParser.prototype.saveText = function () {\n    if (this.text) {\n      var mathvariant = this.stack.env.mathvariant;\n      var text = ParseUtil_js_1.default.internalText(this, this.text, mathvariant ? {\n        mathvariant: mathvariant\n      } : {});\n      this.text = '';\n      this.Push(text);\n    }\n  };\n  TextParser.prototype.Push = function (mml) {\n    if (this.text) {\n      this.saveText();\n    }\n    if (mml instanceof BaseItems_js_1.StopItem) {\n      return _super.prototype.Push.call(this, mml);\n    }\n    if (mml instanceof BaseItems_js_1.StyleItem) {\n      this.stack.env.mathcolor = this.stack.env.color;\n      return;\n    }\n    if (mml instanceof MmlNode_js_1.AbstractMmlNode) {\n      this.addAttributes(mml);\n      this.nodes.push(mml);\n    }\n  };\n  TextParser.prototype.PushMath = function (mml) {\n    var e_1, _a;\n    var env = this.stack.env;\n    if (!mml.isKind('TeXAtom')) {\n      mml = this.create('node', 'TeXAtom', [mml]);\n    }\n    try {\n      for (var _b = __values(['mathsize', 'mathcolor']), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n        if (env[name_1] && !mml.attributes.getExplicit(name_1)) {\n          if (!mml.isToken && !mml.isKind('mstyle')) {\n            mml = this.create('node', 'mstyle', [mml]);\n          }\n          NodeUtil_js_1.default.setAttribute(mml, name_1, env[name_1]);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    if (mml.isInferred) {\n      mml = this.create('node', 'mrow', mml.childNodes);\n    }\n    this.nodes.push(mml);\n  };\n  TextParser.prototype.addAttributes = function (mml) {\n    var e_2, _a;\n    var env = this.stack.env;\n    if (!mml.isToken) return;\n    try {\n      for (var _b = __values(['mathsize', 'mathcolor', 'mathvariant']), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_2 = _c.value;\n        if (env[name_2] && !mml.attributes.getExplicit(name_2)) {\n          NodeUtil_js_1.default.setAttribute(mml, name_2, env[name_2]);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n  TextParser.prototype.ParseTextArg = function (name, env) {\n    var text = this.GetArgument(name);\n    env = Object.assign(Object.assign({}, this.stack.env), env);\n    return new TextParser(text, env, this.configuration).mml();\n  };\n  TextParser.prototype.ParseArg = function (name) {\n    return new TextParser(this.GetArgument(name), this.stack.env, this.configuration).mml();\n  };\n  TextParser.prototype.Error = function (id, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n    throw new (TexError_js_1.default.bind.apply(TexError_js_1.default, __spreadArray([void 0, id, message], __read(args), false)))();\n  };\n  return TextParser;\n}(TexParser_js_1.default);\nexports.TextParser = TextParser;","map":{"version":3,"names":["TexParser_js_1","__importDefault","require","TexError_js_1","ParseUtil_js_1","MmlNode_js_1","NodeUtil_js_1","BaseItems_js_1","TextParser","_super","__extends","text","env","configuration","level","_this","call","Object","defineProperty","prototype","get","packageData","texParser","tags","mml","create","nodes","displaystyle","scriptlevel","length","Parse","envStack","saveText","mathvariant","stack","default","internalText","Push","StopItem","StyleItem","mathcolor","color","AbstractMmlNode","addAttributes","push","PushMath","isKind","_b","__values","_c","next","done","name_1","value","attributes","getExplicit","isToken","setAttribute","isInferred","childNodes","name_2","ParseTextArg","name","GetArgument","assign","ParseArg","Error","id","message","args","_i","arguments","bind","apply","__spreadArray","__read","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/textmacros/TextParser.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2020-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview  The TextParser class for the textmacros package\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport ParseOptions from '../ParseOptions.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {StackItem} from '../StackItem.js';\nimport {MmlNode, AbstractMmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {EnvList} from '../StackItem.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {StopItem, StyleItem} from '../base/BaseItems.js';\n\n/**\n * Subclass of the TexParser but for handling text-mode material\n */\nexport class TextParser extends TexParser {\n\n  /**\n   * The accumulated text material to go into an mtext element\n   */\n  public text: string;\n\n  /**\n   * Saved stack environments for processing braces\n   */\n  public envStack: EnvList[];\n\n  /**\n   * The scriptlevel of this text-mode material\n   */\n  public level: number | string | undefined;\n\n  /**\n   * The accumulated MmlNodes generated by parsing the text-mode material\n   */\n  protected nodes: MmlNode[];\n\n  /**\n   * Short-hand for obtaining the saved TexParser\n   */\n  public get texParser() {\n    return this.configuration.packageData.get('textmacros').texParser;\n  }\n\n  /**\n   * @override\n   */\n  public get tags() {\n    return this.texParser.tags;\n  }\n\n  /**\n   * @override\n   * @constructor\n   */\n  constructor(text: string, env: EnvList, configuration: ParseOptions, level?: number | string) {\n    super(text, env, configuration);\n    this.level = level;\n  }\n\n  /**\n   * Make sure we only return one element (wrap multiple ones in an mrow or mstyle, as needed).\n   *\n   * @override\n   */\n  public mml() {\n    return (this.level != null ?\n            this.create('node', 'mstyle', this.nodes, {displaystyle: false, scriptlevel: this.level}) :\n            this.nodes.length === 1 ? this.nodes[0] : this.create('node', 'mrow', this.nodes));\n  }\n\n  /**\n   * @override\n   */\n  public Parse() {\n    this.text = '';\n    this.nodes = [];\n    this.envStack = [];\n    super.Parse();\n  }\n\n  /**\n   * Creates an mtext element for the saved text and pushes that onto the node list\n   */\n  public saveText() {\n    if (this.text) {\n      const mathvariant = this.stack.env.mathvariant;\n      const text = ParseUtil.internalText(this, this.text, mathvariant ? {mathvariant} : {});\n      this.text = '';\n      this.Push(text);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public Push(mml: MmlNode | StackItem) {\n    if (this.text) {\n      this.saveText();\n    }\n    if (mml instanceof StopItem) {\n      return super.Push(mml);\n    }\n    if (mml instanceof StyleItem) {\n      this.stack.env.mathcolor = this.stack.env.color;\n      return;\n    }\n    if (mml instanceof AbstractMmlNode) {\n      this.addAttributes(mml);\n      this.nodes.push(mml);\n    }\n  }\n\n  /**\n   * Push some math into the node list, adding mathsize and mathcolor\n   *   if specified in the environment.\n   *\n   * @param {MmlNode} mml   The math nodes to push\n   */\n  public PushMath(mml: MmlNode) {\n    const env = this.stack.env;\n    if (!mml.isKind('TeXAtom')) {\n      mml = this.create('node', 'TeXAtom', [mml]);  // make sure the math is an ORD\n    }\n    for (const name of ['mathsize', 'mathcolor']) {\n      if (env[name] && !mml.attributes.getExplicit(name)) {\n        if (!mml.isToken && !mml.isKind('mstyle')) {\n          mml = this.create('node', 'mstyle', [mml]);\n        }\n        NodeUtil.setAttribute(mml, name, env[name]);\n      }\n    }\n    if (mml.isInferred) {\n      mml = this.create('node', 'mrow', mml.childNodes);\n    }\n    this.nodes.push(mml);\n  }\n\n  /**\n   * Add mathsize, mathcolor, and mathvariant to token nodes,\n   *   if they are specified in the environment\n   *\n   * @param {MmlNode} mml   The node to adjust\n   */\n  public addAttributes(mml: MmlNode) {\n    const env = this.stack.env;\n    if (!mml.isToken) return;\n    for (const name of ['mathsize', 'mathcolor', 'mathvariant']) {\n      if (env[name] && !mml.attributes.getExplicit(name)) {\n        NodeUtil.setAttribute(mml, name, env[name]);\n      }\n    }\n  }\n\n  /**\n   * Process the argument as text with the given environment settings\n   *\n   * @param {string} name   The macro that is calling for a parameter\n   * @param {EnvList} env   The environment to use\n   */\n  public ParseTextArg(name: string, env: EnvList) {\n    const text = this.GetArgument(name);\n    env = Object.assign(Object.assign({}, this.stack.env), env);\n    return (new TextParser(text, env, this.configuration)).mml();\n  }\n\n  /**\n   * Process an argument as text rather than math\n   *\n   * @override\n   */\n  public ParseArg(name: string) {\n    return (new TextParser(this.GetArgument(name), this.stack.env, this.configuration)).mml();\n  }\n\n  /**\n   * Throw an error\n   *\n   * @param {string} id        The id for the message string\n   * @param {string} message   The English version of the message\n   * @param {string[]} args    Any substitution args for the message\n   */\n  public Error(id: string, message: string, ...args: string[]) {\n    throw new TexError(id, message, ...args);\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}