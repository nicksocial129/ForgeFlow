{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CasesConfiguration = exports.CasesMethods = exports.CasesTags = exports.CasesBeginItem = void 0;\nvar Configuration_js_1 = require(\"../Configuration.js\");\nvar SymbolMap_js_1 = require(\"../SymbolMap.js\");\nvar ParseUtil_js_1 = __importDefault(require(\"../ParseUtil.js\"));\nvar BaseMethods_js_1 = __importDefault(require(\"../base/BaseMethods.js\"));\nvar TexError_js_1 = __importDefault(require(\"../TexError.js\"));\nvar BaseItems_js_1 = require(\"../base/BaseItems.js\");\nvar AmsConfiguration_js_1 = require(\"../ams/AmsConfiguration.js\");\nvar EmpheqUtil_js_1 = require(\"../empheq/EmpheqUtil.js\");\nvar CasesBeginItem = function (_super) {\n  __extends(CasesBeginItem, _super);\n  function CasesBeginItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(CasesBeginItem.prototype, \"kind\", {\n    get: function () {\n      return 'cases-begin';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  CasesBeginItem.prototype.checkItem = function (item) {\n    if (item.isKind('end') && item.getName() === this.getName()) {\n      if (this.getProperty('end')) {\n        this.setProperty('end', false);\n        return [[], true];\n      }\n    }\n    return _super.prototype.checkItem.call(this, item);\n  };\n  return CasesBeginItem;\n}(BaseItems_js_1.BeginItem);\nexports.CasesBeginItem = CasesBeginItem;\nvar CasesTags = function (_super) {\n  __extends(CasesTags, _super);\n  function CasesTags() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.subcounter = 0;\n    return _this;\n  }\n  CasesTags.prototype.start = function (env, taggable, defaultTags) {\n    this.subcounter = 0;\n    _super.prototype.start.call(this, env, taggable, defaultTags);\n  };\n  CasesTags.prototype.autoTag = function () {\n    if (this.currentTag.tag != null) return;\n    if (this.currentTag.env === 'subnumcases') {\n      if (this.subcounter === 0) this.counter++;\n      this.subcounter++;\n      this.tag(this.formatNumber(this.counter, this.subcounter), false);\n    } else {\n      if (this.subcounter === 0 || this.currentTag.env !== 'numcases-left') this.counter++;\n      this.tag(this.formatNumber(this.counter), false);\n    }\n  };\n  CasesTags.prototype.formatNumber = function (n, m) {\n    if (m === void 0) {\n      m = null;\n    }\n    return n.toString() + (m === null ? '' : String.fromCharCode(0x60 + m));\n  };\n  return CasesTags;\n}(AmsConfiguration_js_1.AmsTags);\nexports.CasesTags = CasesTags;\nexports.CasesMethods = {\n  NumCases: function (parser, begin) {\n    if (parser.stack.env.closing === begin.getName()) {\n      delete parser.stack.env.closing;\n      parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName()));\n      var cases = parser.stack.Top();\n      var table = cases.Last;\n      var original = ParseUtil_js_1.default.copyNode(table, parser);\n      var left = cases.getProperty('left');\n      EmpheqUtil_js_1.EmpheqUtil.left(table, original, left + '\\\\empheqlbrace\\\\,', parser, 'numcases-left');\n      parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName()));\n      return null;\n    } else {\n      var left = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n      begin.setProperty('left', left);\n      var array = BaseMethods_js_1.default.EqnArray(parser, begin, true, true, 'll');\n      array.arraydef.displaystyle = false;\n      array.arraydef.rowspacing = '.2em';\n      array.setProperty('numCases', true);\n      parser.Push(begin);\n      return array;\n    }\n  },\n  Entry: function (parser, name) {\n    if (!parser.stack.Top().getProperty('numCases')) {\n      return BaseMethods_js_1.default.Entry(parser, name);\n    }\n    parser.Push(parser.itemFactory.create('cell').setProperties({\n      isEntry: true,\n      name: name\n    }));\n    var tex = parser.string;\n    var braces = 0,\n      i = parser.i,\n      m = tex.length;\n    while (i < m) {\n      var c = tex.charAt(i);\n      if (c === '{') {\n        braces++;\n        i++;\n      } else if (c === '}') {\n        if (braces === 0) {\n          break;\n        } else {\n          braces--;\n          i++;\n        }\n      } else if (c === '&' && braces === 0) {\n        throw new TexError_js_1.default('ExtraCasesAlignTab', 'Extra alignment tab in text for numcase environment');\n      } else if (c === '\\\\' && braces === 0) {\n        var cs = (tex.slice(i + 1).match(/^[a-z]+|./i) || [])[0];\n        if (cs === '\\\\' || cs === 'cr' || cs === 'end' || cs === 'label') {\n          break;\n        } else {\n          i += cs.length;\n        }\n      } else {\n        i++;\n      }\n    }\n    var text = tex.substr(parser.i, i - parser.i).replace(/^\\s*/, '');\n    parser.PushAll(ParseUtil_js_1.default.internalMath(parser, text, 0));\n    parser.i = i;\n  }\n};\nnew SymbolMap_js_1.EnvironmentMap('cases-env', EmpheqUtil_js_1.EmpheqUtil.environment, {\n  numcases: ['NumCases', 'cases'],\n  subnumcases: ['NumCases', 'cases']\n}, exports.CasesMethods);\nnew SymbolMap_js_1.MacroMap('cases-macros', {\n  '&': 'Entry'\n}, exports.CasesMethods);\nexports.CasesConfiguration = Configuration_js_1.Configuration.create('cases', {\n  handler: {\n    environment: ['cases-env'],\n    character: ['cases-macros']\n  },\n  items: (_a = {}, _a[CasesBeginItem.prototype.kind] = CasesBeginItem, _a),\n  tags: {\n    'cases': CasesTags\n  }\n});","map":{"version":3,"names":["Configuration_js_1","require","SymbolMap_js_1","ParseUtil_js_1","__importDefault","BaseMethods_js_1","TexError_js_1","BaseItems_js_1","AmsConfiguration_js_1","EmpheqUtil_js_1","CasesBeginItem","_super","__extends","Object","defineProperty","prototype","get","checkItem","item","isKind","getName","getProperty","setProperty","call","BeginItem","exports","CasesTags","_this","apply","arguments","subcounter","start","env","taggable","defaultTags","autoTag","currentTag","tag","counter","formatNumber","n","m","toString","String","fromCharCode","AmsTags","CasesMethods","NumCases","parser","begin","stack","closing","Push","itemFactory","create","cases","Top","table","Last","original","default","copyNode","left","EmpheqUtil","GetArgument","array","EqnArray","arraydef","displaystyle","rowspacing","Entry","name","setProperties","isEntry","tex","string","braces","i","length","c","charAt","cs","slice","match","text","substr","replace","PushAll","internalMath","EnvironmentMap","environment","numcases","subnumcases","MacroMap","CasesConfiguration","Configuration","handler","character","items","_a","kind","tags"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/cases/CasesConfiguration.ts"],"sourcesContent":["import {Configuration} from '../Configuration.js';\nimport {EnvironmentMap, MacroMap} from '../SymbolMap.js';\nimport ParseUtil from '../ParseUtil.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {BeginItem, EqnArrayItem} from '../base/BaseItems.js';\nimport {AmsTags} from '../ams/AmsConfiguration.js';\nimport {StackItem, CheckType} from '../StackItem.js';\nimport {MmlMtable} from '../../../core/MmlTree/MmlNodes/mtable.js';\nimport {EmpheqUtil} from '../empheq/EmpheqUtil.js';\n\n/**\n * The StackItem for the numcases environment.\n */\nexport class CasesBeginItem extends BeginItem {\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'cases-begin';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem) {\n    if (item.isKind('end') && item.getName() === this.getName()) {\n      if (this.getProperty('end')) {\n        this.setProperty('end', false);\n        return [[], true] as CheckType;\n      }\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n/**\n * A tagging class for the subnumcases environment.\n */\nexport class CasesTags extends AmsTags {\n\n  /**\n   * The counter for the subnumber.\n   */\n  protected subcounter = 0;\n\n  /**\n   * @override\n   */\n  public start(env: string, taggable: boolean, defaultTags: boolean) {\n    this.subcounter = 0;\n    super.start(env, taggable, defaultTags);\n  }\n\n  /**\n   * @override\n   */\n  public autoTag() {\n    if (this.currentTag.tag != null) return;\n    if (this.currentTag.env === 'subnumcases') {\n      if (this.subcounter === 0) this.counter++;\n      this.subcounter++;\n      this.tag(this.formatNumber(this.counter, this.subcounter), false);\n    } else {\n      if (this.subcounter === 0 || this.currentTag.env !== 'numcases-left') this.counter++;\n      this.tag(this.formatNumber(this.counter), false);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public formatNumber(n: number, m: number = null) {\n    return n.toString() + (m === null ? '' : String.fromCharCode(0x60 + m));\n  }\n\n}\n\nexport const CasesMethods = {\n\n  /**\n   * Implements the numcases environment.\n   *\n   * @param {TexParser} texparser   The active tex parser.\n   * @param {CasesBeginItem} begin  The environment begin item.\n   */\n  NumCases(parser: TexParser, begin: CasesBeginItem) {\n    if (parser.stack.env.closing === begin.getName()) {\n      delete parser.stack.env.closing;\n      parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName())); // finish eqnarray\n      const cases = parser.stack.Top();\n      const table = cases.Last as MmlMtable;\n      const original = ParseUtil.copyNode(table, parser) as MmlMtable;\n      const left = cases.getProperty('left');\n      EmpheqUtil.left(table, original, left + '\\\\empheqlbrace\\\\,', parser, 'numcases-left');\n      parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName()));\n      return null;\n    } else {\n      const left = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n      begin.setProperty('left', left);\n      const array = BaseMethods.EqnArray(parser, begin, true, true, 'll', ) as EqnArrayItem;\n      array.arraydef.displaystyle = false;\n      array.arraydef.rowspacing = '.2em';\n      array.setProperty('numCases', true);\n      parser.Push(begin);\n      return array;\n    }\n  },\n\n  /**\n   * Replacement for & in cases environment.\n   */\n  Entry(parser: TexParser, name: string) {\n    if (!parser.stack.Top().getProperty('numCases')) {\n      return BaseMethods.Entry(parser, name);\n    }\n    parser.Push(parser.itemFactory.create('cell').setProperties({isEntry: true, name: name}));\n    //\n    //  Make second column be in \\text{...}\n    //\n    const tex = parser.string;\n    let braces = 0, i = parser.i, m = tex.length;\n    //\n    //  Look through the string character by character...\n    //\n    while (i < m) {\n      const c = tex.charAt(i);\n      if (c === '{') {\n        //\n        //  Increase the nested brace count and go on\n        //\n        braces++;\n        i++;\n      } else if (c === '}') {\n        //\n        //  If there are too many close braces, just end (we will get an\n        //    error message later when the rest of the string is parsed)\n        //  Otherwise\n        //    decrease the nested brace count,\n        //    go on to the next character.\n        //\n        if (braces === 0) {\n          break;\n        } else {\n          braces--;\n          i++;\n        }\n      } else if (c === '&' && braces === 0) {\n        //\n        //  Extra alignment tabs are not allowed in cases\n        //\n        throw new TexError('ExtraCasesAlignTab', 'Extra alignment tab in text for numcase environment');\n      } else if (c === '\\\\' && braces === 0) {\n        //\n        //  If the macro is \\cr or \\\\, end the search, otherwise skip the macro\n        //  (multi-letter names don't matter, as we will skip the rest of the\n        //   characters in the main loop)\n        //\n        const cs = (tex.slice(i + 1).match(/^[a-z]+|./i) || [])[0];\n        if (cs === '\\\\' || cs === 'cr' || cs === 'end' || cs === 'label') {\n          break;\n        } else {\n          i += cs.length;\n        }\n      } else {\n        //\n        //  Go on to the next character\n        //\n        i++;\n      }\n    }\n    //\n    //  Process the second column as text and continue parsing from there,\n    //\n    const text = tex.substr(parser.i, i - parser.i).replace(/^\\s*/, '');\n    parser.PushAll(ParseUtil.internalMath(parser, text, 0));\n    parser.i = i;\n  }\n\n};\n\n/**\n * The environments for this package\n */\nnew EnvironmentMap('cases-env', EmpheqUtil.environment, {\n  numcases: ['NumCases', 'cases'],\n  subnumcases: ['NumCases', 'cases']\n}, CasesMethods);\n\n/**\n * The macros for this package\n */\nnew MacroMap('cases-macros', {\n  '&': 'Entry'\n}, CasesMethods);\n\n//\n//  Define the package for our new environment\n//\nexport const CasesConfiguration = Configuration.create('cases', {\n  handler: {\n    environment: ['cases-env'],\n    character: ['cases-macros']\n  },\n  items: {\n    [CasesBeginItem.prototype.kind]: CasesBeginItem\n  },\n  tags: {'cases': CasesTags}\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}