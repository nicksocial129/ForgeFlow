{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractOutputJax = void 0;\nvar Options_js_1 = require(\"../util/Options.js\");\nvar FunctionList_js_1 = require(\"../util/FunctionList.js\");\nvar AbstractOutputJax = function () {\n  function AbstractOutputJax(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.adaptor = null;\n    var CLASS = this.constructor;\n    this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), options);\n    this.postFilters = new FunctionList_js_1.FunctionList();\n  }\n  Object.defineProperty(AbstractOutputJax.prototype, \"name\", {\n    get: function () {\n      return this.constructor.NAME;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  AbstractOutputJax.prototype.setAdaptor = function (adaptor) {\n    this.adaptor = adaptor;\n  };\n  AbstractOutputJax.prototype.initialize = function () {};\n  AbstractOutputJax.prototype.reset = function () {\n    var _args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      _args[_i] = arguments[_i];\n    }\n  };\n  AbstractOutputJax.prototype.getMetrics = function (_document) {};\n  AbstractOutputJax.prototype.styleSheet = function (_document) {\n    return null;\n  };\n  AbstractOutputJax.prototype.pageElements = function (_document) {\n    return null;\n  };\n  AbstractOutputJax.prototype.executeFilters = function (filters, math, document, data) {\n    var args = {\n      math: math,\n      document: document,\n      data: data\n    };\n    filters.execute(args);\n    return args.data;\n  };\n  AbstractOutputJax.NAME = 'generic';\n  AbstractOutputJax.OPTIONS = {};\n  return AbstractOutputJax;\n}();\nexports.AbstractOutputJax = AbstractOutputJax;","map":{"version":3,"names":["Options_js_1","require","FunctionList_js_1","AbstractOutputJax","options","adaptor","CLASS","constructor","userOptions","defaultOptions","OPTIONS","postFilters","FunctionList","Object","defineProperty","prototype","get","NAME","setAdaptor","initialize","reset","_args","_i","arguments","length","getMetrics","_document","styleSheet","pageElements","executeFilters","filters","math","document","data","args","execute","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/core/OutputJax.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the interface and abstract class for the OutputJax\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {userOptions, defaultOptions, OptionList} from '../util/Options.js';\nimport {MathDocument} from './MathDocument.js';\nimport {MathItem} from './MathItem.js';\nimport {DOMAdaptor} from '../core/DOMAdaptor.js';\nimport {FunctionList} from '../util/FunctionList.js';\n\n/*****************************************************************/\n/**\n *  The OutputJax interface\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport interface OutputJax<N, T, D> {\n  /**\n   * The name of this output jax class\n   */\n  name: string;\n\n  /**\n   * The options for the instance\n   */\n  options: OptionList;\n\n  /**\n   * Lists of post-filters to call after typesetting the math\n   */\n  postFilters: FunctionList;\n\n  /**\n   * The DOM adaptor for managing HTML elements\n   */\n  adaptor: DOMAdaptor<N, T, D>;\n\n  /**\n   * @param {DOMAdaptor} adaptor The adaptor to use in this jax\n   */\n  setAdaptor(adaptor: DOMAdaptor<N, T, D>): void;\n\n  /**\n   * Do any initialization that depends on the document being set up\n   */\n  initialize(): void;\n\n  /**\n   * Reset any needed features of the output jax\n   *\n   * @param {any[]} args   The arguments needed by the reset operation\n   */\n  reset(...args: any[]): void;\n\n  /**\n   * Typset a given MathItem\n   *\n   * @param {MathItem} math          The MathItem to be typeset\n   * @param {MathDocument} document  The MathDocument in which the typesetting should occur\n   * @return {N}                     The DOM tree for the typeset math\n   */\n  typeset(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * Handle an escaped character (e.g., \\$ from the TeX input jax preventing it from being a delimiter)\n   *\n   * @param {MathItem} math          The MathItem to be escaped\n   * @param {MathDocument} document  The MathDocument in which the math occurs\n   * @return {N}                     The DOM tree for the escaped item\n   */\n  escaped(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * Get the metric information for all math in the given document\n   *\n   * @param {MathDocument} document  The MathDocument being processed\n   */\n  getMetrics(document: MathDocument<N, T, D>): void;\n\n  /**\n   * Produce the stylesheet needed for this output jax\n   *\n   * @param {MathDocument} document  The MathDocument being processed\n   */\n  styleSheet(document: MathDocument<N, T, D>): N;\n\n  /**\n   * Produce any page-specific elements needed for this output jax\n   *\n   * @param {MathDocument} document  The MathDocument being processed\n   */\n  pageElements(document: MathDocument<N, T, D>): N;\n}\n\n\n/*****************************************************************/\n/**\n *  The OutputJax abstract class\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport abstract class AbstractOutputJax<N, T, D> implements OutputJax<N, T, D> {\n\n  /**\n   * The name for the output jax\n   */\n  public static NAME: string = 'generic';\n\n  /**\n   * The default options for the output jax\n   */\n  public static OPTIONS: OptionList = {};\n\n  /**\n   * The actual options supplied to the output jax\n   */\n  public options: OptionList;\n\n  /**\n   * Filters to run after the output is processed\n   */\n  public postFilters: FunctionList;\n\n  /**\n   * The MathDocument's DOMAdaptor\n   */\n  public adaptor: DOMAdaptor<N, T, D> = null;  // set by the handler\n\n  /**\n   * @param {OptionList} options  The options for this instance\n   */\n  constructor(options: OptionList = {}) {\n    let CLASS = this.constructor as typeof AbstractOutputJax;\n    this.options = userOptions(defaultOptions({}, CLASS.OPTIONS), options);\n    this.postFilters = new FunctionList();\n  }\n\n  /**\n   * @return {string}  The name for this output jax class\n   */\n  public get name(): string {\n    return (this.constructor as typeof AbstractOutputJax).NAME;\n  }\n\n  /**\n   * @override\n   */\n  public setAdaptor(adaptor: DOMAdaptor<N, T, D>) {\n    this.adaptor = adaptor;\n  }\n\n  /**\n   * @override\n   */\n  public initialize() {\n  }\n\n  /**\n   * @override\n   */\n  public reset(..._args: any[]) {\n  }\n\n  /**\n   * @override\n   */\n  public abstract typeset(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * @override\n   */\n  public abstract escaped(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * @override\n   */\n  public getMetrics(_document: MathDocument<N, T, D>) {\n  }\n\n  /**\n   * @override\n   */\n  public styleSheet(_document: MathDocument<N, T, D>) {\n    return null as N;\n  }\n\n  /**\n   * @override\n   */\n  public pageElements(_document: MathDocument<N, T, D>) {\n    return null as N;\n  }\n\n  /**\n   * Execute a set of filters, passing them the MathItem and any needed data,\n   *  and return the (possibly modified) data\n   *\n   * @param {FunctionList} filters   The list of functions to be performed\n   * @param {MathItem} math          The math item that is being processed\n   * @param {MathDocument} document  The math document contaiing the math item\n   * @param {any} data               Whatever other data is needed\n   * @return {any}                   The (possibly modified) data\n   */\n  protected executeFilters(\n    filters: FunctionList, math: MathItem<N, T, D>,\n    document: MathDocument<N, T, D>, data: any\n  ): any {\n    let args = {math, document, data};\n    filters.execute(args);\n    return args.data;\n  }\n\n}\n"],"mappings":";;;;;;AAuBA,IAAAA,YAAA,GAAAC,OAAA;AAIA,IAAAC,iBAAA,GAAAD,OAAA;AAiGA,IAAAE,iBAAA;EA8BE,SAAAA,kBAAYC,OAAwB;IAAxB,IAAAA,OAAA;MAAAA,OAAA,KAAwB;IAAA;IAL7B,KAAAC,OAAO,GAAwB,IAAI;IAMxC,IAAIC,KAAK,GAAG,IAAI,CAACC,WAAuC;IACxD,IAAI,CAACH,OAAO,GAAG,IAAAJ,YAAA,CAAAQ,WAAW,EAAC,IAAAR,YAAA,CAAAS,cAAc,EAAC,EAAE,EAAEH,KAAK,CAACI,OAAO,CAAC,EAAEN,OAAO,CAAC;IACtE,IAAI,CAACO,WAAW,GAAG,IAAIT,iBAAA,CAAAU,YAAY,EAAE;EACvC;EAKAC,MAAA,CAAAC,cAAA,CAAWX,iBAAA,CAAAY,SAAA,QAAI;SAAf,SAAAC,CAAA;MACE,OAAQ,IAAI,CAACT,WAAwC,CAACU,IAAI;IAC5D,CAAC;;;;EAKMd,iBAAA,CAAAY,SAAA,CAAAG,UAAU,GAAjB,UAAkBb,OAA4B;IAC5C,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB,CAAC;EAKMF,iBAAA,CAAAY,SAAA,CAAAI,UAAU,GAAjB,aACA,CAAC;EAKMhB,iBAAA,CAAAY,SAAA,CAAAK,KAAK,GAAZ;IAAa,IAAAC,KAAA;SAAA,IAAAC,EAAA,IAAe,EAAfA,EAAA,GAAAC,SAAA,CAAAC,MAAe,EAAfF,EAAA,EAAe;MAAfD,KAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EACb,CAAC;EAeMnB,iBAAA,CAAAY,SAAA,CAAAU,UAAU,GAAjB,UAAkBC,SAAgC,GAClD,CAAC;EAKMvB,iBAAA,CAAAY,SAAA,CAAAY,UAAU,GAAjB,UAAkBD,SAAgC;IAChD,OAAO,IAAS;EAClB,CAAC;EAKMvB,iBAAA,CAAAY,SAAA,CAAAa,YAAY,GAAnB,UAAoBF,SAAgC;IAClD,OAAO,IAAS;EAClB,CAAC;EAYSvB,iBAAA,CAAAY,SAAA,CAAAc,cAAc,GAAxB,UACEC,OAAqB,EAAEC,IAAuB,EAC9CC,QAA+B,EAAEC,IAAS;IAE1C,IAAIC,IAAI,GAAG;MAACH,IAAI,EAAAA,IAAA;MAAEC,QAAQ,EAAAA,QAAA;MAAEC,IAAI,EAAAA;IAAA,CAAC;IACjCH,OAAO,CAACK,OAAO,CAACD,IAAI,CAAC;IACrB,OAAOA,IAAI,CAACD,IAAI;EAClB,CAAC;EAxGa9B,iBAAA,CAAAc,IAAI,GAAW,SAAS;EAKxBd,iBAAA,CAAAO,OAAO,GAAe,EAAE;EAqGxC,OAAAP,iBAAC;CAAA,CA/GD;AAAsBiC,OAAA,CAAAjC,iBAAA,GAAAA,iBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}