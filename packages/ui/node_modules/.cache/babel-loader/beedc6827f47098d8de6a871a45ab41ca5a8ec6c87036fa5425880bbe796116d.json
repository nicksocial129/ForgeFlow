{"ast":null,"code":"module.exports = function (hljs) {\n  var KEYWORDS = 'div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to ' + 'until while with var';\n  var LITERALS = 'false true';\n  var COMMENT_MODES = [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT(/\\{/, /\\}/, {\n    relevance: 0\n  }), hljs.COMMENT(/\\(\\*/, /\\*\\)/, {\n    relevance: 10\n  })];\n  var STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/,\n    contains: [{\n      begin: /''/\n    }]\n  };\n  var CHAR_STRING = {\n    className: 'string',\n    begin: /(#\\d+)+/\n  };\n  var DATE = {\n    className: 'number',\n    begin: '\\\\b\\\\d+(\\\\.\\\\d+)?(DT|D|T)',\n    relevance: 0\n  };\n  var DBL_QUOTED_VARIABLE = {\n    className: 'string',\n    // not a string technically but makes sense to be highlighted in the same style\n    begin: '\"',\n    end: '\"'\n  };\n  var PROCEDURE = {\n    className: 'function',\n    beginKeywords: 'procedure',\n    end: /[:;]/,\n    keywords: 'procedure|10',\n    contains: [hljs.TITLE_MODE, {\n      className: 'params',\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS,\n      contains: [STRING, CHAR_STRING]\n    }].concat(COMMENT_MODES)\n  };\n  var OBJECT = {\n    className: 'class',\n    begin: 'OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\\\d+) ([^\\\\r\\\\n]+)',\n    returnBegin: true,\n    contains: [hljs.TITLE_MODE, PROCEDURE]\n  };\n  return {\n    case_insensitive: true,\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERALS\n    },\n    illegal: /\\/\\*/,\n    contains: [STRING, CHAR_STRING, DATE, DBL_QUOTED_VARIABLE, hljs.NUMBER_MODE, OBJECT, PROCEDURE]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","KEYWORDS","LITERALS","COMMENT_MODES","C_LINE_COMMENT_MODE","COMMENT","relevance","STRING","className","begin","end","contains","CHAR_STRING","DATE","DBL_QUOTED_VARIABLE","PROCEDURE","beginKeywords","keywords","TITLE_MODE","concat","OBJECT","returnBegin","case_insensitive","keyword","literal","illegal","NUMBER_MODE"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/cal.js"],"sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS =\n    'div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to ' +\n    'until while with var';\n  var LITERALS = 'false true';\n  var COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(\n      /\\{/,\n      /\\}/,\n      {\n        relevance: 0\n      }\n    ),\n    hljs.COMMENT(\n      /\\(\\*/,\n      /\\*\\)/,\n      {\n        relevance: 10\n      }\n    )\n  ];\n  var STRING = {\n    className: 'string',\n    begin: /'/, end: /'/,\n    contains: [{begin: /''/}]\n  };\n  var CHAR_STRING = {\n    className: 'string', begin: /(#\\d+)+/\n  };\n  var DATE = {\n      className: 'number',\n      begin: '\\\\b\\\\d+(\\\\.\\\\d+)?(DT|D|T)',\n      relevance: 0\n  };\n  var DBL_QUOTED_VARIABLE = {\n      className: 'string', // not a string technically but makes sense to be highlighted in the same style\n      begin: '\"',\n      end: '\"'\n  };\n\n  var PROCEDURE = {\n    className: 'function',\n    beginKeywords: 'procedure', end: /[:;]/,\n    keywords: 'procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [STRING, CHAR_STRING]\n      }\n    ].concat(COMMENT_MODES)\n  };\n\n  var OBJECT = {\n    className: 'class',\n    begin: 'OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\\\d+) ([^\\\\r\\\\n]+)',\n    returnBegin: true,\n    contains: [\n      hljs.TITLE_MODE,\n        PROCEDURE\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    keywords: { keyword: KEYWORDS, literal: LITERALS },\n    illegal: /\\/\\*/,\n    contains: [\n      STRING, CHAR_STRING,\n      DATE, DBL_QUOTED_VARIABLE,\n      hljs.NUMBER_MODE,\n      OBJECT,\n      PROCEDURE\n    ]\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,QAAQ,GACV,oGAAoG,GACpG,sBAAsB;EACxB,IAAIC,QAAQ,GAAG,YAAY;EAC3B,IAAIC,aAAa,GAAG,CAClBH,IAAI,CAACI,mBAAmB,EACxBJ,IAAI,CAACK,OAAO,CACV,IAAI,EACJ,IAAI,EACJ;IACEC,SAAS,EAAE;EACb,CACF,CAAC,EACDN,IAAI,CAACK,OAAO,CACV,MAAM,EACN,MAAM,EACN;IACEC,SAAS,EAAE;EACb,CACF,CAAC,CACF;EACD,IAAIC,MAAM,GAAG;IACXC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAE,GAAG;IACpBC,QAAQ,EAAE,CAAC;MAACF,KAAK,EAAE;IAAI,CAAC;EAC1B,CAAC;EACD,IAAIG,WAAW,GAAG;IAChBJ,SAAS,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAC9B,CAAC;EACD,IAAII,IAAI,GAAG;IACPL,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,2BAA2B;IAClCH,SAAS,EAAE;EACf,CAAC;EACD,IAAIQ,mBAAmB,GAAG;IACtBN,SAAS,EAAE,QAAQ;IAAE;IACrBC,KAAK,EAAE,GAAG;IACVC,GAAG,EAAE;EACT,CAAC;EAED,IAAIK,SAAS,GAAG;IACdP,SAAS,EAAE,UAAU;IACrBQ,aAAa,EAAE,WAAW;IAAEN,GAAG,EAAE,MAAM;IACvCO,QAAQ,EAAE,cAAc;IACxBN,QAAQ,EAAE,CACRX,IAAI,CAACkB,UAAU,EACf;MACEV,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE,IAAI;MAAEC,GAAG,EAAE,IAAI;MACtBO,QAAQ,EAAEhB,QAAQ;MAClBU,QAAQ,EAAE,CAACJ,MAAM,EAAEK,WAAW;IAChC,CAAC,CACF,CAACO,MAAM,CAAChB,aAAa;EACxB,CAAC;EAED,IAAIiB,MAAM,GAAG;IACXZ,SAAS,EAAE,OAAO;IAClBC,KAAK,EAAE,+FAA+F;IACtGY,WAAW,EAAE,IAAI;IACjBV,QAAQ,EAAE,CACRX,IAAI,CAACkB,UAAU,EACbH,SAAS;EAEf,CAAC;EAED,OAAO;IACLO,gBAAgB,EAAE,IAAI;IACtBL,QAAQ,EAAE;MAAEM,OAAO,EAAEtB,QAAQ;MAAEuB,OAAO,EAAEtB;IAAS,CAAC;IAClDuB,OAAO,EAAE,MAAM;IACfd,QAAQ,EAAE,CACRJ,MAAM,EAAEK,WAAW,EACnBC,IAAI,EAAEC,mBAAmB,EACzBd,IAAI,CAAC0B,WAAW,EAChBN,MAAM,EACNL,SAAS;EAEb,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}