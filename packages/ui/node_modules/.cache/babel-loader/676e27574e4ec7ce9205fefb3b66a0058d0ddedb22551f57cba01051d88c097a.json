{"ast":null,"code":"module.exports = function (hljs) {\n  var KEYWORDS = {\n    keyword:\n    // JS keywords\n    'in if for while finally new do return else break catch instanceof throw try this ' + 'switch continue typeof delete debugger case default function var with ' +\n    // LiveScript keywords\n    'then unless until loop of by when and or is isnt not it that otherwise from to til fallthrough super ' + 'case default function var void const let enum export import native ' + '__hasProp __extends __slice __bind __indexOf',\n    literal:\n    // JS literals\n    'true false null undefined ' +\n    // LiveScript literals\n    'yes no on off it that void',\n    built_in: 'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /}/,\n    keywords: KEYWORDS\n  };\n  var SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/,\n    end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [hljs.BINARY_NUMBER_MODE, {\n    className: 'number',\n    begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n    relevance: 0,\n    starts: {\n      end: '(\\\\s*/)?',\n      relevance: 0\n    } // a number tries to eat the following slash to prevent treating it as a regexp\n  }, {\n    className: 'string',\n    variants: [{\n      begin: /'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n    }, {\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n    }, {\n      begin: /\\\\/,\n      end: /(\\s|$)/,\n      excludeEnd: true\n    }]\n  }, {\n    className: 'regexp',\n    variants: [{\n      begin: '//',\n      end: '//[gim]*',\n      contains: [SUBST, hljs.HASH_COMMENT_MODE]\n    }, {\n      // regex can't start with space to parse x / 2 / 3 as two divisions\n      // regex can't start with *, and it supports an \"illegal\" in the main mode\n      begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n    }]\n  }, {\n    begin: '@' + JS_IDENT_RE\n  }, {\n    begin: '``',\n    end: '``',\n    excludeBegin: true,\n    excludeEnd: true,\n    subLanguage: 'javascript'\n  }];\n  SUBST.contains = EXPRESSIONS;\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n  return {\n    aliases: ['ls'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'), hljs.HASH_COMMENT_MODE, {\n      className: 'function',\n      contains: [TITLE, PARAMS],\n      returnBegin: true,\n      variants: [{\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?',\n        end: '\\\\->\\\\*?'\n      }, {\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?',\n        end: '[-~]{1,2}>\\\\*?'\n      }, {\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?',\n        end: '!?[-~]{1,2}>\\\\*?'\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '$',\n      illegal: /[:=\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends',\n        endsWithParent: true,\n        illegal: /[:=\"\\[\\]]/,\n        contains: [TITLE]\n      }, TITLE]\n    }, {\n      begin: JS_IDENT_RE + ':',\n      end: ':',\n      returnBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }])\n  };\n};","map":{"version":3,"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","JS_IDENT_RE","TITLE","inherit","TITLE_MODE","begin","SUBST","className","end","keywords","SUBST_SIMPLE","EXPRESSIONS","BINARY_NUMBER_MODE","relevance","starts","variants","contains","BACKSLASH_ESCAPE","excludeEnd","HASH_COMMENT_MODE","excludeBegin","subLanguage","PARAMS","returnBegin","concat","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/livescript.js"],"sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // JS keywords\n      'in if for while finally new do return else break catch instanceof throw try this ' +\n      'switch continue typeof delete debugger case default function var with ' +\n      // LiveScript keywords\n      'then unless until loop of by when and or is isnt not it that otherwise from to til fallthrough super ' +\n      'case default function var void const let enum export import native ' +\n      '__hasProp __extends __slice __bind __indexOf',\n    literal:\n      // JS literals\n      'true false null undefined ' +\n      // LiveScript literals\n      'yes no on off it that void',\n    built_in:\n      'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/, end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    {\n      className: 'number',\n      begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n      relevance: 0,\n      starts: {end: '(\\\\s*/)?', relevance: 0} // a number tries to eat the following slash to prevent treating it as a regexp\n    },\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\\\\/, end: /(\\s|$)/,\n          excludeEnd: true\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '//', end: '//[gim]*',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE\n    },\n    {\n      begin: '``', end: '``',\n      excludeBegin: true, excludeEnd: true,\n      subLanguage: 'javascript'\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [\n      {\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: ['self'].concat(EXPRESSIONS)\n      }\n    ]\n  };\n\n  return {\n    aliases: ['ls'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        contains: [TITLE, PARAMS],\n        returnBegin: true,\n        variants: [\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?', end: '\\\\->\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?', end: '[-~]{1,2}>\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?', end: '!?[-~]{1,2}>\\\\*?'\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}