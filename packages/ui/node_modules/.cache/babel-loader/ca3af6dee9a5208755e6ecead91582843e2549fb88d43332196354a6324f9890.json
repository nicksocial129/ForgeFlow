{"ast":null,"code":"module.exports = function (hljs) {\n  // 2.3. Identifiers and keywords\n  var KEYWORDS = 'assembly module package import alias class interface object given value ' + 'assign void function new of extends satisfies abstracts in out return ' + 'break continue throw assert dynamic if else switch case for while try ' + 'catch finally then let this outer super is exists nonempty';\n  // 7.4.1 Declaration Modifiers\n  var DECLARATION_MODIFIERS = 'shared abstract formal default actual variable late native deprecated' + 'final sealed annotation suppressWarnings small';\n  // 7.4.2 Documentation\n  var DOCUMENTATION = 'doc by license see throws tagged';\n  var SUBST = {\n    className: 'subst',\n    excludeBegin: true,\n    excludeEnd: true,\n    begin: /``/,\n    end: /``/,\n    keywords: KEYWORDS,\n    relevance: 10\n  };\n  var EXPRESSIONS = [{\n    // verbatim string\n    className: 'string',\n    begin: '\"\"\"',\n    end: '\"\"\"',\n    relevance: 10\n  }, {\n    // string literal or template\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    contains: [SUBST]\n  }, {\n    // character literal\n    className: 'string',\n    begin: \"'\",\n    end: \"'\"\n  }, {\n    // numeric literal\n    className: 'number',\n    begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n    relevance: 0\n  }];\n  SUBST.contains = EXPRESSIONS;\n  return {\n    keywords: {\n      keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,\n      meta: DOCUMENTATION\n    },\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT('/\\\\*', '\\\\*/', {\n      contains: ['self']\n    }), {\n      // compiler annotation\n      className: 'meta',\n      begin: '@[a-z]\\\\w*(?:\\\\:\\\"[^\\\"]*\\\")?'\n    }].concat(EXPRESSIONS)\n  };\n};","map":{"version":3,"names":["module","exports","hljs","KEYWORDS","DECLARATION_MODIFIERS","DOCUMENTATION","SUBST","className","excludeBegin","excludeEnd","begin","end","keywords","relevance","EXPRESSIONS","contains","keyword","meta","illegal","C_LINE_COMMENT_MODE","COMMENT","concat"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/ceylon.js"],"sourcesContent":["module.exports = function(hljs) {\n  // 2.3. Identifiers and keywords\n  var KEYWORDS =\n    'assembly module package import alias class interface object given value ' +\n    'assign void function new of extends satisfies abstracts in out return ' +\n    'break continue throw assert dynamic if else switch case for while try ' +\n    'catch finally then let this outer super is exists nonempty';\n  // 7.4.1 Declaration Modifiers\n  var DECLARATION_MODIFIERS =\n    'shared abstract formal default actual variable late native deprecated' +\n    'final sealed annotation suppressWarnings small';\n  // 7.4.2 Documentation\n  var DOCUMENTATION =\n    'doc by license see throws tagged';\n  var SUBST = {\n    className: 'subst', excludeBegin: true, excludeEnd: true,\n    begin: /``/, end: /``/,\n    keywords: KEYWORDS,\n    relevance: 10\n  };\n  var EXPRESSIONS = [\n    {\n      // verbatim string\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    },\n    {\n      // string literal or template\n      className: 'string',\n      begin: '\"', end: '\"',\n      contains: [SUBST]\n    },\n    {\n      // character literal\n      className: 'string',\n      begin: \"'\",\n      end: \"'\"\n    },\n    {\n      // numeric literal\n      className: 'number',\n      begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n      relevance: 0\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  return {\n    keywords: {\n      keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,\n      meta: DOCUMENTATION\n    },\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {contains: ['self']}),\n      {\n        // compiler annotation\n        className: 'meta',\n        begin: '@[a-z]\\\\w*(?:\\\\:\\\"[^\\\"]*\\\")?'\n      }\n    ].concat(EXPRESSIONS)\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B;EACA,IAAIC,QAAQ,GACV,0EAA0E,GAC1E,wEAAwE,GACxE,wEAAwE,GACxE,4DAA4D;EAC9D;EACA,IAAIC,qBAAqB,GACvB,uEAAuE,GACvE,gDAAgD;EAClD;EACA,IAAIC,aAAa,GACf,kCAAkC;EACpC,IAAIC,KAAK,GAAG;IACVC,SAAS,EAAE,OAAO;IAAEC,YAAY,EAAE,IAAI;IAAEC,UAAU,EAAE,IAAI;IACxDC,KAAK,EAAE,IAAI;IAAEC,GAAG,EAAE,IAAI;IACtBC,QAAQ,EAAET,QAAQ;IAClBU,SAAS,EAAE;EACb,CAAC;EACD,IAAIC,WAAW,GAAG,CAChB;IACE;IACAP,SAAS,EAAE,QAAQ;IACnBG,KAAK,EAAE,KAAK;IACZC,GAAG,EAAE,KAAK;IACVE,SAAS,EAAE;EACb,CAAC,EACD;IACE;IACAN,SAAS,EAAE,QAAQ;IACnBG,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAE,GAAG;IACpBI,QAAQ,EAAE,CAACT,KAAK;EAClB,CAAC,EACD;IACE;IACAC,SAAS,EAAE,QAAQ;IACnBG,KAAK,EAAE,GAAG;IACVC,GAAG,EAAE;EACP,CAAC,EACD;IACE;IACAJ,SAAS,EAAE,QAAQ;IACnBG,KAAK,EAAE,+EAA+E;IACtFG,SAAS,EAAE;EACb,CAAC,CACF;EACDP,KAAK,CAACS,QAAQ,GAAGD,WAAW;EAE5B,OAAO;IACLF,QAAQ,EAAE;MACRI,OAAO,EAAEb,QAAQ,GAAG,GAAG,GAAGC,qBAAqB;MAC/Ca,IAAI,EAAEZ;IACR,CAAC;IACDa,OAAO,EAAE,wBAAwB;IACjCH,QAAQ,EAAE,CACRb,IAAI,CAACiB,mBAAmB,EACxBjB,IAAI,CAACkB,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE;MAACL,QAAQ,EAAE,CAAC,MAAM;IAAC,CAAC,CAAC,EAClD;MACE;MACAR,SAAS,EAAE,MAAM;MACjBG,KAAK,EAAE;IACT,CAAC,CACF,CAACW,MAAM,CAACP,WAAW;EACtB,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}