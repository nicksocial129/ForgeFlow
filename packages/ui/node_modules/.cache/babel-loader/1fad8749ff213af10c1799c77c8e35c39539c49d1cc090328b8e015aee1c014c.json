{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMpaddedMixin = void 0;\nfunction CommonMpaddedMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    class_1.prototype.getDimens = function () {\n      var values = this.node.attributes.getList('width', 'height', 'depth', 'lspace', 'voffset');\n      var bbox = this.childNodes[0].getBBox();\n      var w = bbox.w,\n        h = bbox.h,\n        d = bbox.d;\n      var W = w,\n        H = h,\n        D = d,\n        x = 0,\n        y = 0,\n        dx = 0;\n      if (values.width !== '') w = this.dimen(values.width, bbox, 'w', 0);\n      if (values.height !== '') h = this.dimen(values.height, bbox, 'h', 0);\n      if (values.depth !== '') d = this.dimen(values.depth, bbox, 'd', 0);\n      if (values.voffset !== '') y = this.dimen(values.voffset, bbox);\n      if (values.lspace !== '') x = this.dimen(values.lspace, bbox);\n      var align = this.node.attributes.get('data-align');\n      if (align) {\n        dx = this.getAlignX(w, bbox, align);\n      }\n      return [H, D, W, h - H, d - D, w - W, x, y, dx];\n    };\n    class_1.prototype.dimen = function (length, bbox, d, m) {\n      if (d === void 0) {\n        d = '';\n      }\n      if (m === void 0) {\n        m = null;\n      }\n      length = String(length);\n      var match = length.match(/width|height|depth/);\n      var size = match ? bbox[match[0].charAt(0)] : d ? bbox[d] : 0;\n      var dimen = this.length2em(length, size) || 0;\n      if (length.match(/^[-+]/) && d) {\n        dimen += size;\n      }\n      if (m != null) {\n        dimen = Math.max(m, dimen);\n      }\n      return dimen;\n    };\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n      var _a = __read(this.getDimens(), 6),\n        H = _a[0],\n        D = _a[1],\n        W = _a[2],\n        dh = _a[3],\n        dd = _a[4],\n        dw = _a[5];\n      bbox.w = W + dw;\n      bbox.h = H + dh;\n      bbox.d = D + dd;\n      this.setChildPWidths(recompute, bbox.w);\n    };\n    class_1.prototype.getWrapWidth = function (_i) {\n      return this.getBBox().w;\n    };\n    class_1.prototype.getChildAlign = function (_i) {\n      return this.node.attributes.get('data-align') || 'left';\n    };\n    return class_1;\n  }(Base);\n}\nexports.CommonMpaddedMixin = CommonMpaddedMixin;","map":{"version":3,"names":["CommonMpaddedMixin","Base","_super","__extends","class_1","prototype","getDimens","values","node","attributes","getList","bbox","childNodes","getBBox","w","h","d","W","H","D","x","y","dx","width","dimen","height","depth","voffset","lspace","align","get","getAlignX","length","m","String","match","size","charAt","length2em","Math","max","computeBBox","recompute","_a","__read","dh","dd","dw","setChildPWidths","getWrapWidth","_i","getChildAlign","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/common/Wrappers/mpadded.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMpadded wrapper mixin for the MmlMpadded object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {Property} from '../../../core/Tree/Node.js';\n\n/*****************************************************************/\n/**\n * The CommonMpadded interface\n */\nexport interface CommonMpadded extends AnyWrapper {\n  /**\n   * Get the content bounding box, and the change in size and offsets\n   *   as specified by the parameters\n   *\n   * @return {number[]}  The original height, depth, width, the changes in height, depth,\n   *                    and width, and the horizontal and vertical offsets of the content\n   */\n  getDimens(): number[];\n\n  /**\n   * Get a particular dimension, which can be relative to any of the BBox dimensions,\n   *   and can be an offset from the default size of the given dimension.\n   *\n   * @param {Property} length   The value to be converted to a length in ems\n   * @param {BBox} bbox         The bbox of the mpadded content\n   * @param {string=} d         The default dimension to use for relative sizes ('w', 'h', or 'd')\n   * @param {number=} m         The minimum value allowed for the dimension\n   * @return {number}           The final dimension in ems\n   */\n  dimen(length: Property, bbox: BBox, d?: string, m?: number): number;\n}\n\n/**\n * Shorthand for the CommonMpadded constructor\n */\nexport type MpaddedConstructor = Constructor<CommonMpadded>;\n\n/*****************************************************************/\n/**\n * The CommomMpadded wrapper for the MmlMpadded object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMpaddedMixin<T extends WrapperConstructor>(Base: T): MpaddedConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * Get the content bounding box, and the change in size and offsets\n     *   as specified by the parameters\n     *\n     * @return {number[]}  The original height, depth, width, the changes in height, depth,\n     *                    and width, and the horizontal and vertical offsets of the content\n     */\n    public getDimens(): number[] {\n      const values = this.node.attributes.getList('width', 'height', 'depth', 'lspace', 'voffset');\n      const bbox = this.childNodes[0].getBBox();  // get unmodified bbox of children\n      let {w, h, d} = bbox;\n      let W = w, H = h, D = d, x = 0, y = 0, dx = 0;\n      if (values.width !== '')   w = this.dimen(values.width, bbox, 'w', 0);\n      if (values.height !== '')  h = this.dimen(values.height, bbox, 'h', 0);\n      if (values.depth !== '')   d = this.dimen(values.depth, bbox, 'd', 0);\n      if (values.voffset !== '') y = this.dimen(values.voffset, bbox);\n      if (values.lspace !== '')  x = this.dimen(values.lspace, bbox);\n      const align = this.node.attributes.get('data-align') as string;\n      if (align) {\n        dx = this.getAlignX(w, bbox, align);\n      }\n      return [H, D, W, h - H, d - D, w - W, x, y, dx];\n    }\n\n    /**\n     * Get a particular dimension, which can be relative to any of the BBox dimensions,\n     *   and can be an offset from the default size of the given dimension.\n     *\n     * @param {Property} length   The value to be converted to a length in ems\n     * @param {BBox} bbox         The bbox of the mpadded content\n     * @param {string} d          The default dimension to use for relative sizes ('w', 'h', or 'd')\n     * @param {number} m          The minimum value allowed for the dimension\n     * @return {number}           The final dimension in ems\n     */\n    public dimen(length: Property, bbox: BBox, d: string = '', m: number = null): number {\n      length = String(length);\n      const match = length.match(/width|height|depth/);\n      const size = (match ? bbox[match[0].charAt(0) as (keyof BBox)] :\n                    (d ? bbox[d as (keyof BBox)] : 0)) as number;\n      let dimen = (this.length2em(length, size) || 0);\n      if (length.match(/^[-+]/) && d) {\n        dimen += size;\n      }\n      if (m != null) {\n        dimen = Math.max(m, dimen);\n      }\n      return dimen;\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      const [H, D, W, dh, dd, dw] = this.getDimens();\n      bbox.w = W + dw;\n      bbox.h = H + dh;\n      bbox.d = D + dd;\n      this.setChildPWidths(recompute, bbox.w);\n    }\n\n    /**\n     * @override\n     */\n    public getWrapWidth(_i: number) {\n      return this.getBBox().w;\n    }\n\n    /**\n     * @override\n     */\n    public getChildAlign(_i: number) {\n      return this.node.attributes.get('data-align') as string || 'left';\n    }\n  };\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}