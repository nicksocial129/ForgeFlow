{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MhchemConfiguration = void 0;\nvar Configuration_js_1 = require(\"../Configuration.js\");\nvar SymbolMap_js_1 = require(\"../SymbolMap.js\");\nvar TexError_js_1 = __importDefault(require(\"../TexError.js\"));\nvar BaseMethods_js_1 = __importDefault(require(\"../base/BaseMethods.js\"));\nvar AmsMethods_js_1 = require(\"../ams/AmsMethods.js\");\nvar mhchemParser_js_1 = require(\"mhchemparser/dist/mhchemParser.js\");\nvar MhchemMethods = {};\nMhchemMethods.Macro = BaseMethods_js_1.default.Macro;\nMhchemMethods.xArrow = AmsMethods_js_1.AmsMethods.xArrow;\nMhchemMethods.Machine = function (parser, name, machine) {\n  var arg = parser.GetArgument(name);\n  var tex;\n  try {\n    tex = mhchemParser_js_1.mhchemParser.toTex(arg, machine);\n  } catch (err) {\n    throw new TexError_js_1.default(err[0], err[1]);\n  }\n  parser.string = tex + parser.string.substr(parser.i);\n  parser.i = 0;\n};\nnew SymbolMap_js_1.CommandMap('mhchem', {\n  ce: ['Machine', 'ce'],\n  pu: ['Machine', 'pu'],\n  longrightleftharpoons: ['Macro', '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'],\n  longRightleftharpoons: ['Macro', '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{\\\\leftharpoondown}}'],\n  longLeftrightharpoons: ['Macro', '\\\\stackrel{\\\\textstyle\\\\vphantom{{-}}{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'],\n  longleftrightarrows: ['Macro', '\\\\stackrel{\\\\longrightarrow}{\\\\smash{\\\\longleftarrow}\\\\Rule{0px}{.25em}{0px}}'],\n  tripledash: ['Macro', '\\\\vphantom{-}\\\\raise2mu{\\\\kern2mu\\\\tiny\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern2mu}'],\n  xleftrightarrow: ['xArrow', 0x2194, 6, 6],\n  xrightleftharpoons: ['xArrow', 0x21CC, 5, 7],\n  xRightleftharpoons: ['xArrow', 0x21CC, 5, 7],\n  xLeftrightharpoons: ['xArrow', 0x21CC, 5, 7]\n}, MhchemMethods);\nexports.MhchemConfiguration = Configuration_js_1.Configuration.create('mhchem', {\n  handler: {\n    macro: ['mhchem']\n  }\n});","map":{"version":3,"names":["Configuration_js_1","require","SymbolMap_js_1","TexError_js_1","__importDefault","BaseMethods_js_1","AmsMethods_js_1","mhchemParser_js_1","MhchemMethods","Macro","default","xArrow","AmsMethods","Machine","parser","name","machine","arg","GetArgument","tex","mhchemParser","toTex","err","string","substr","i","CommandMap","ce","pu","longrightleftharpoons","longRightleftharpoons","longLeftrightharpoons","longleftrightarrows","tripledash","xleftrightarrow","xrightleftharpoons","xRightleftharpoons","xLeftrightharpoons","exports","MhchemConfiguration","Configuration","create","handler","macro"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/mhchem/MhchemConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the mhchem package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport TexError from '../TexError.js';\nimport TexParser from '../TexParser.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport {AmsMethods} from '../ams/AmsMethods.js';\nimport {mhchemParser} from 'mhchemparser/dist/mhchemParser.js';\n\n// Namespace\nlet MhchemMethods: Record<string, ParseMethod> = {};\n\nMhchemMethods.Macro = BaseMethods.Macro;\nMhchemMethods.xArrow = AmsMethods.xArrow;\n\n/**\n * @param{TeXParser} parser   The parser for this expression\n * @param{string} name        The macro name being called\n * @param{string} machine     The name of the fininte-state machine to use\n */\nMhchemMethods.Machine = function(parser: TexParser, name: string, machine: 'tex' | 'ce' | 'pu') {\n  let arg = parser.GetArgument(name);\n  let tex;\n  try {\n    tex = mhchemParser.toTex(arg, machine);\n  } catch (err) {\n    throw new TexError(err[0], err[1]);\n  }\n  parser.string = tex + parser.string.substr(parser.i);\n  parser.i = 0;\n};\n\nnew CommandMap(\n  'mhchem', {\n    ce: ['Machine', 'ce'],\n    pu: ['Machine', 'pu'],\n    longrightleftharpoons: [\n      'Macro',\n      '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'\n    ],\n    longRightleftharpoons: [\n      'Macro',\n      '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{\\\\leftharpoondown}}'\n    ],\n    longLeftrightharpoons: [\n      'Macro',\n      '\\\\stackrel{\\\\textstyle\\\\vphantom{{-}}{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'\n    ],\n    longleftrightarrows: [\n      'Macro',\n      '\\\\stackrel{\\\\longrightarrow}{\\\\smash{\\\\longleftarrow}\\\\Rule{0px}{.25em}{0px}}'\n    ],\n    //\n    //  Needed for \\bond for the ~ forms\n    //\n    tripledash: [\n      'Macro',\n      '\\\\vphantom{-}\\\\raise2mu{\\\\kern2mu\\\\tiny\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern2mu}'\n    ],\n    xleftrightarrow:    ['xArrow', 0x2194, 6, 6],\n    xrightleftharpoons: ['xArrow', 0x21CC, 5, 7],   // FIXME:  doesn't stretch in HTML-CSS output\n    xRightleftharpoons: ['xArrow', 0x21CC, 5, 7],   // FIXME:  how should this be handled?\n    xLeftrightharpoons: ['xArrow', 0x21CC, 5, 7]\n  },\n  MhchemMethods\n);\n\n\nexport const MhchemConfiguration = Configuration.create(\n  'mhchem', {handler: {macro: ['mhchem']}}\n);\n"],"mappings":";;;;;;;;;;;AAwBA,IAAAA,kBAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AAEA,IAAAE,aAAA,GAAAC,eAAA,CAAAH,OAAA;AAEA,IAAAI,gBAAA,GAAAD,eAAA,CAAAH,OAAA;AACA,IAAAK,eAAA,GAAAL,OAAA;AACA,IAAAM,iBAAA,GAAAN,OAAA;AAGA,IAAIO,aAAa,GAAgC,EAAE;AAEnDA,aAAa,CAACC,KAAK,GAAGJ,gBAAA,CAAAK,OAAW,CAACD,KAAK;AACvCD,aAAa,CAACG,MAAM,GAAGL,eAAA,CAAAM,UAAU,CAACD,MAAM;AAOxCH,aAAa,CAACK,OAAO,GAAG,UAASC,MAAiB,EAAEC,IAAY,EAAEC,OAA4B;EAC5F,IAAIC,GAAG,GAAGH,MAAM,CAACI,WAAW,CAACH,IAAI,CAAC;EAClC,IAAII,GAAG;EACP,IAAI;IACFA,GAAG,GAAGZ,iBAAA,CAAAa,YAAY,CAACC,KAAK,CAACJ,GAAG,EAAED,OAAO,CAAC;GACvC,CAAC,OAAOM,GAAG,EAAE;IACZ,MAAM,IAAInB,aAAA,CAAAO,OAAQ,CAACY,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEpCR,MAAM,CAACS,MAAM,GAAGJ,GAAG,GAAGL,MAAM,CAACS,MAAM,CAACC,MAAM,CAACV,MAAM,CAACW,CAAC,CAAC;EACpDX,MAAM,CAACW,CAAC,GAAG,CAAC;AACd,CAAC;AAED,IAAIvB,cAAA,CAAAwB,UAAU,CACZ,QAAQ,EAAE;EACRC,EAAE,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;EACrBC,EAAE,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;EACrBC,qBAAqB,EAAE,CACrB,OAAO,EACP,2FAA2F,CAC5F;EACDC,qBAAqB,EAAE,CACrB,OAAO,EACP,gFAAgF,CACjF;EACDC,qBAAqB,EAAE,CACrB,OAAO,EACP,iGAAiG,CAClG;EACDC,mBAAmB,EAAE,CACnB,OAAO,EACP,+EAA+E,CAChF;EAIDC,UAAU,EAAE,CACV,OAAO,EACP,gGAAgG,CACjG;EACDC,eAAe,EAAK,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;EAC5CC,kBAAkB,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;EAC5CC,kBAAkB,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;EAC5CC,kBAAkB,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;CAC5C,EACD7B,aAAa,CACd;AAGY8B,OAAA,CAAAC,mBAAmB,GAAGvC,kBAAA,CAAAwC,aAAa,CAACC,MAAM,CACrD,QAAQ,EAAE;EAACC,OAAO,EAAE;IAACC,KAAK,EAAE,CAAC,QAAQ;EAAC;AAAC,CAAC,CACzC"},"metadata":{},"sourceType":"script","externalDependencies":[]}