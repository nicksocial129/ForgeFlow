{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EncloseConfiguration = exports.EncloseMethods = exports.ENCLOSE_OPTIONS = void 0;\nvar Configuration_js_1 = require(\"../Configuration.js\");\nvar SymbolMap_js_1 = require(\"../SymbolMap.js\");\nvar ParseUtil_js_1 = __importDefault(require(\"../ParseUtil.js\"));\nexports.ENCLOSE_OPTIONS = {\n  'data-arrowhead': 1,\n  color: 1,\n  mathcolor: 1,\n  background: 1,\n  mathbackground: 1,\n  'data-padding': 1,\n  'data-thickness': 1\n};\nexports.EncloseMethods = {};\nexports.EncloseMethods.Enclose = function (parser, name) {\n  var notation = parser.GetArgument(name).replace(/,/g, ' ');\n  var attr = parser.GetBrackets(name, '');\n  var math = parser.ParseArg(name);\n  var def = ParseUtil_js_1.default.keyvalOptions(attr, exports.ENCLOSE_OPTIONS);\n  def.notation = notation;\n  parser.Push(parser.create('node', 'menclose', [math], def));\n};\nnew SymbolMap_js_1.CommandMap('enclose', {\n  enclose: 'Enclose'\n}, exports.EncloseMethods);\nexports.EncloseConfiguration = Configuration_js_1.Configuration.create('enclose', {\n  handler: {\n    macro: ['enclose']\n  }\n});","map":{"version":3,"names":["Configuration_js_1","require","SymbolMap_js_1","ParseUtil_js_1","__importDefault","exports","ENCLOSE_OPTIONS","color","mathcolor","background","mathbackground","EncloseMethods","Enclose","parser","name","notation","GetArgument","replace","attr","GetBrackets","math","ParseArg","def","default","keyvalOptions","Push","create","CommandMap","enclose","EncloseConfiguration","Configuration","handler","macro"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/enclose/EncloseConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the enclose package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport ParseUtil from '../ParseUtil.js';\n\n\n/**\n * The attributes allowed in \\enclose{notation}[attributes]{math}\n * @type {{[key: string]: number}}\n */\nexport const ENCLOSE_OPTIONS: {[key: string]: number} = {\n  'data-arrowhead': 1,\n  color: 1,\n  mathcolor: 1,\n  background: 1,\n  mathbackground: 1,\n  'data-padding': 1,\n  'data-thickness': 1\n};\n\n\n// Namespace\nexport let EncloseMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Implements \\enclose{notation}[attr]{math}\n * (create <menclose notation=\"notation\">math</menclose>)\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nEncloseMethods.Enclose = function(parser: TexParser, name: string) {\n  let notation = parser.GetArgument(name).replace(/,/g, ' ');\n  const attr = parser.GetBrackets(name, '');\n  const math = parser.ParseArg(name);\n  const def = ParseUtil.keyvalOptions(attr, ENCLOSE_OPTIONS);\n  def.notation = notation;\n  parser.Push(parser.create('node', 'menclose', [math], def));\n};\n\n\nnew CommandMap('enclose', {enclose: 'Enclose'}, EncloseMethods);\n\n\nexport const EncloseConfiguration = Configuration.create(\n  'enclose', {handler: {macro: ['enclose']}}\n);\n\n\n"],"mappings":";;;;;;;;;;;AAwBA,IAAAA,kBAAA,GAAAC,OAAA;AAEA,IAAAC,cAAA,GAAAD,OAAA;AAEA,IAAAE,cAAA,GAAAC,eAAA,CAAAH,OAAA;AAOaI,OAAA,CAAAC,eAAe,GAA4B;EACtD,gBAAgB,EAAE,CAAC;EACnBC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,CAAC;EACZC,UAAU,EAAE,CAAC;EACbC,cAAc,EAAE,CAAC;EACjB,cAAc,EAAE,CAAC;EACjB,gBAAgB,EAAE;CACnB;AAIUL,OAAA,CAAAM,cAAc,GAAgC,EAAE;AAS3DN,OAAA,CAAAM,cAAc,CAACC,OAAO,GAAG,UAASC,MAAiB,EAAEC,IAAY;EAC/D,IAAIC,QAAQ,GAAGF,MAAM,CAACG,WAAW,CAACF,IAAI,CAAC,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EAC1D,IAAMC,IAAI,GAAGL,MAAM,CAACM,WAAW,CAACL,IAAI,EAAE,EAAE,CAAC;EACzC,IAAMM,IAAI,GAAGP,MAAM,CAACQ,QAAQ,CAACP,IAAI,CAAC;EAClC,IAAMQ,GAAG,GAAGnB,cAAA,CAAAoB,OAAS,CAACC,aAAa,CAACN,IAAI,EAAEb,OAAA,CAAAC,eAAe,CAAC;EAC1DgB,GAAG,CAACP,QAAQ,GAAGA,QAAQ;EACvBF,MAAM,CAACY,IAAI,CAACZ,MAAM,CAACa,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,CAACN,IAAI,CAAC,EAAEE,GAAG,CAAC,CAAC;AAC7D,CAAC;AAGD,IAAIpB,cAAA,CAAAyB,UAAU,CAAC,SAAS,EAAE;EAACC,OAAO,EAAE;AAAS,CAAC,EAAEvB,OAAA,CAAAM,cAAc,CAAC;AAGlDN,OAAA,CAAAwB,oBAAoB,GAAG7B,kBAAA,CAAA8B,aAAa,CAACJ,MAAM,CACtD,SAAS,EAAE;EAACK,OAAO,EAAE;IAACC,KAAK,EAAE,CAAC,SAAS;EAAC;AAAC,CAAC,CAC3C"},"metadata":{},"sourceType":"script","externalDependencies":[]}