{"ast":null,"code":"import{useSelector}from'react-redux';import{Box,List,ListItemButton,ListItem,ListItemAvatar,ListItemText,Typography,Stack}from'@mui/material';import PerfectScrollbar from'react-perfect-scrollbar';import robotPNG from'assets/images/robot.png';import chatPNG from'assets/images/chathistory.png';import{baseURL}from'store/constant';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const SelectVariable=_ref=>{let{availableNodesForVariable,disabled=false,onSelectAndReturnVal}=_ref;const customization=useSelector(state=>state.customization);const onSelectOutputResponseClick=(node,prefix)=>{let variablePath=node?\"\".concat(node.id,\".data.instance\"):prefix;const newInput=\"{{\".concat(variablePath,\"}}\");onSelectAndReturnVal(newInput);};return/*#__PURE__*/_jsx(_Fragment,{children:!disabled&&/*#__PURE__*/_jsxs(\"div\",{style:{flex:30},children:[/*#__PURE__*/_jsx(Stack,{flexDirection:\"row\",sx:{mb:1,ml:2,mt:2},children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"Select Variable\"})}),/*#__PURE__*/_jsx(PerfectScrollbar,{style:{height:'100%',maxHeight:'calc(100vh - 220px)',overflowX:'hidden'},children:/*#__PURE__*/_jsx(Box,{sx:{pl:2,pr:2},children:/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsx(ListItemButton,{sx:{p:0,borderRadius:\"\".concat(customization.borderRadius,\"px\"),boxShadow:'0 2px 14px 0 rgb(32 40 45 / 8%)',mb:1},disabled:disabled,onClick:()=>onSelectOutputResponseClick(null,'question'),children:/*#__PURE__*/_jsxs(ListItem,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(\"div\",{style:{width:50,height:50,borderRadius:'50%',backgroundColor:'white'},children:/*#__PURE__*/_jsx(\"img\",{style:{width:'100%',height:'100%',padding:10,objectFit:'contain'},alt:\"AI\",src:robotPNG})})}),/*#__PURE__*/_jsx(ListItemText,{sx:{ml:1},primary:\"question\",secondary:\"User's question from chatbox\"})]})}),/*#__PURE__*/_jsx(ListItemButton,{sx:{p:0,borderRadius:\"\".concat(customization.borderRadius,\"px\"),boxShadow:'0 2px 14px 0 rgb(32 40 45 / 8%)',mb:1},disabled:disabled,onClick:()=>onSelectOutputResponseClick(null,'chat_history'),children:/*#__PURE__*/_jsxs(ListItem,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(\"div\",{style:{width:50,height:50,borderRadius:'50%',backgroundColor:'white'},children:/*#__PURE__*/_jsx(\"img\",{style:{width:'100%',height:'100%',padding:10,objectFit:'contain'},alt:\"chatHistory\",src:chatPNG})})}),/*#__PURE__*/_jsx(ListItemText,{sx:{ml:1},primary:\"chat_history\",secondary:\"Past conversation history between user and AI\"})]})}),availableNodesForVariable&&availableNodesForVariable.length>0&&availableNodesForVariable.map((node,index)=>{var _selectedOutputAnchor;const selectedOutputAnchor=node.data.outputAnchors[0].options.find(ancr=>ancr.name===node.data.outputs['output']);return/*#__PURE__*/_jsx(ListItemButton,{sx:{p:0,borderRadius:\"\".concat(customization.borderRadius,\"px\"),boxShadow:'0 2px 14px 0 rgb(32 40 45 / 8%)',mb:1},disabled:disabled,onClick:()=>onSelectOutputResponseClick(node),children:/*#__PURE__*/_jsxs(ListItem,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(\"div\",{style:{width:50,height:50,borderRadius:'50%',backgroundColor:'white'},children:/*#__PURE__*/_jsx(\"img\",{style:{width:'100%',height:'100%',padding:10,objectFit:'contain'},alt:node.data.name,src:\"\".concat(baseURL,\"/api/v1/node-icon/\").concat(node.data.name)})})}),/*#__PURE__*/_jsx(ListItemText,{sx:{ml:1},primary:node.data.inputs.chainName?node.data.inputs.chainName:node.data.id,secondary:\"\".concat((_selectedOutputAnchor=selectedOutputAnchor===null||selectedOutputAnchor===void 0?void 0:selectedOutputAnchor.label)!==null&&_selectedOutputAnchor!==void 0?_selectedOutputAnchor:'output',\" from \").concat(node.data.label)})]})},index);})]})})})]})});};export default SelectVariable;","map":{"version":3,"names":["useSelector","Box","List","ListItemButton","ListItem","ListItemAvatar","ListItemText","Typography","Stack","PerfectScrollbar","robotPNG","chatPNG","baseURL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SelectVariable","_ref","availableNodesForVariable","disabled","onSelectAndReturnVal","customization","state","onSelectOutputResponseClick","node","prefix","variablePath","concat","id","newInput","children","style","flex","flexDirection","sx","mb","ml","mt","variant","height","maxHeight","overflowX","pl","pr","p","borderRadius","boxShadow","onClick","alignItems","width","backgroundColor","padding","objectFit","alt","src","primary","secondary","length","map","index","_selectedOutputAnchor","selectedOutputAnchor","data","outputAnchors","options","find","ancr","name","outputs","inputs","chainName","label"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/packages/ui/src/ui-component/json/SelectVariable.js"],"sourcesContent":["import { useSelector } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Box, List, ListItemButton, ListItem, ListItemAvatar, ListItemText, Typography, Stack } from '@mui/material'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport robotPNG from 'assets/images/robot.png'\nimport chatPNG from 'assets/images/chathistory.png'\nimport { baseURL } from 'store/constant'\n\nconst SelectVariable = ({ availableNodesForVariable, disabled = false, onSelectAndReturnVal }) => {\n    const customization = useSelector((state) => state.customization)\n\n    const onSelectOutputResponseClick = (node, prefix) => {\n        let variablePath = node ? `${node.id}.data.instance` : prefix\n        const newInput = `{{${variablePath}}}`\n        onSelectAndReturnVal(newInput)\n    }\n\n    return (\n        <>\n            {!disabled && (\n                <div style={{ flex: 30 }}>\n                    <Stack flexDirection='row' sx={{ mb: 1, ml: 2, mt: 2 }}>\n                        <Typography variant='h5'>Select Variable</Typography>\n                    </Stack>\n                    <PerfectScrollbar style={{ height: '100%', maxHeight: 'calc(100vh - 220px)', overflowX: 'hidden' }}>\n                        <Box sx={{ pl: 2, pr: 2 }}>\n                            <List>\n                                <ListItemButton\n                                    sx={{\n                                        p: 0,\n                                        borderRadius: `${customization.borderRadius}px`,\n                                        boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)',\n                                        mb: 1\n                                    }}\n                                    disabled={disabled}\n                                    onClick={() => onSelectOutputResponseClick(null, 'question')}\n                                >\n                                    <ListItem alignItems='center'>\n                                        <ListItemAvatar>\n                                            <div\n                                                style={{\n                                                    width: 50,\n                                                    height: 50,\n                                                    borderRadius: '50%',\n                                                    backgroundColor: 'white'\n                                                }}\n                                            >\n                                                <img\n                                                    style={{\n                                                        width: '100%',\n                                                        height: '100%',\n                                                        padding: 10,\n                                                        objectFit: 'contain'\n                                                    }}\n                                                    alt='AI'\n                                                    src={robotPNG}\n                                                />\n                                            </div>\n                                        </ListItemAvatar>\n                                        <ListItemText sx={{ ml: 1 }} primary='question' secondary={`User's question from chatbox`} />\n                                    </ListItem>\n                                </ListItemButton>\n                                <ListItemButton\n                                    sx={{\n                                        p: 0,\n                                        borderRadius: `${customization.borderRadius}px`,\n                                        boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)',\n                                        mb: 1\n                                    }}\n                                    disabled={disabled}\n                                    onClick={() => onSelectOutputResponseClick(null, 'chat_history')}\n                                >\n                                    <ListItem alignItems='center'>\n                                        <ListItemAvatar>\n                                            <div\n                                                style={{\n                                                    width: 50,\n                                                    height: 50,\n                                                    borderRadius: '50%',\n                                                    backgroundColor: 'white'\n                                                }}\n                                            >\n                                                <img\n                                                    style={{\n                                                        width: '100%',\n                                                        height: '100%',\n                                                        padding: 10,\n                                                        objectFit: 'contain'\n                                                    }}\n                                                    alt='chatHistory'\n                                                    src={chatPNG}\n                                                />\n                                            </div>\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            sx={{ ml: 1 }}\n                                            primary='chat_history'\n                                            secondary={`Past conversation history between user and AI`}\n                                        />\n                                    </ListItem>\n                                </ListItemButton>\n                                {availableNodesForVariable &&\n                                    availableNodesForVariable.length > 0 &&\n                                    availableNodesForVariable.map((node, index) => {\n                                        const selectedOutputAnchor = node.data.outputAnchors[0].options.find(\n                                            (ancr) => ancr.name === node.data.outputs['output']\n                                        )\n                                        return (\n                                            <ListItemButton\n                                                key={index}\n                                                sx={{\n                                                    p: 0,\n                                                    borderRadius: `${customization.borderRadius}px`,\n                                                    boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)',\n                                                    mb: 1\n                                                }}\n                                                disabled={disabled}\n                                                onClick={() => onSelectOutputResponseClick(node)}\n                                            >\n                                                <ListItem alignItems='center'>\n                                                    <ListItemAvatar>\n                                                        <div\n                                                            style={{\n                                                                width: 50,\n                                                                height: 50,\n                                                                borderRadius: '50%',\n                                                                backgroundColor: 'white'\n                                                            }}\n                                                        >\n                                                            <img\n                                                                style={{\n                                                                    width: '100%',\n                                                                    height: '100%',\n                                                                    padding: 10,\n                                                                    objectFit: 'contain'\n                                                                }}\n                                                                alt={node.data.name}\n                                                                src={`${baseURL}/api/v1/node-icon/${node.data.name}`}\n                                                            />\n                                                        </div>\n                                                    </ListItemAvatar>\n                                                    <ListItemText\n                                                        sx={{ ml: 1 }}\n                                                        primary={node.data.inputs.chainName ? node.data.inputs.chainName : node.data.id}\n                                                        secondary={`${selectedOutputAnchor?.label ?? 'output'} from ${node.data.label}`}\n                                                    />\n                                                </ListItem>\n                                            </ListItemButton>\n                                        )\n                                    })}\n                            </List>\n                        </Box>\n                    </PerfectScrollbar>\n                </div>\n            )}\n        </>\n    )\n}\n\nSelectVariable.propTypes = {\n    availableNodesForVariable: PropTypes.array,\n    disabled: PropTypes.bool,\n    onSelectAndReturnVal: PropTypes.func\n}\n\nexport default SelectVariable\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}