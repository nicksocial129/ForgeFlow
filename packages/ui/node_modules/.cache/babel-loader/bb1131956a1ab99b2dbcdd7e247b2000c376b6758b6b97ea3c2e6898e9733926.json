{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigMacrosConfiguration = void 0;\nvar Configuration_js_1 = require(\"../Configuration.js\");\nvar Options_js_1 = require(\"../../../util/Options.js\");\nvar SymbolMap_js_1 = require(\"../SymbolMap.js\");\nvar ParseMethods_js_1 = __importDefault(require(\"../ParseMethods.js\"));\nvar Symbol_js_1 = require(\"../Symbol.js\");\nvar NewcommandMethods_js_1 = __importDefault(require(\"../newcommand/NewcommandMethods.js\"));\nvar NewcommandItems_js_1 = require(\"../newcommand/NewcommandItems.js\");\nvar MACROSMAP = 'configmacros-map';\nvar ENVIRONMENTMAP = 'configmacros-env-map';\nfunction configmacrosInit(config) {\n  new SymbolMap_js_1.CommandMap(MACROSMAP, {}, {});\n  new SymbolMap_js_1.EnvironmentMap(ENVIRONMENTMAP, ParseMethods_js_1.default.environment, {}, {});\n  config.append(Configuration_js_1.Configuration.local({\n    handler: {\n      macro: [MACROSMAP],\n      environment: [ENVIRONMENTMAP]\n    },\n    priority: 3\n  }));\n}\nfunction configmacrosConfig(_config, jax) {\n  configMacros(jax);\n  configEnvironments(jax);\n}\nfunction configMacros(jax) {\n  var e_1, _a;\n  var handler = jax.parseOptions.handlers.retrieve(MACROSMAP);\n  var macros = jax.parseOptions.options.macros;\n  try {\n    for (var _b = __values(Object.keys(macros)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var cs = _c.value;\n      var def = typeof macros[cs] === 'string' ? [macros[cs]] : macros[cs];\n      var macro = Array.isArray(def[2]) ? new Symbol_js_1.Macro(cs, NewcommandMethods_js_1.default.MacroWithTemplate, def.slice(0, 2).concat(def[2])) : new Symbol_js_1.Macro(cs, NewcommandMethods_js_1.default.Macro, def);\n      handler.add(cs, macro);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n}\nfunction configEnvironments(jax) {\n  var e_2, _a;\n  var handler = jax.parseOptions.handlers.retrieve(ENVIRONMENTMAP);\n  var environments = jax.parseOptions.options.environments;\n  try {\n    for (var _b = __values(Object.keys(environments)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var env = _c.value;\n      handler.add(env, new Symbol_js_1.Macro(env, NewcommandMethods_js_1.default.BeginEnv, [true].concat(environments[env])));\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n}\nexports.ConfigMacrosConfiguration = Configuration_js_1.Configuration.create('configmacros', {\n  init: configmacrosInit,\n  config: configmacrosConfig,\n  items: (_a = {}, _a[NewcommandItems_js_1.BeginEnvItem.prototype.kind] = NewcommandItems_js_1.BeginEnvItem, _a),\n  options: {\n    macros: (0, Options_js_1.expandable)({}),\n    environments: (0, Options_js_1.expandable)({})\n  }\n});","map":{"version":3,"names":["Configuration_js_1","require","Options_js_1","SymbolMap_js_1","ParseMethods_js_1","__importDefault","Symbol_js_1","NewcommandMethods_js_1","NewcommandItems_js_1","MACROSMAP","ENVIRONMENTMAP","configmacrosInit","config","CommandMap","EnvironmentMap","default","environment","append","Configuration","local","handler","macro","priority","configmacrosConfig","_config","jax","configMacros","configEnvironments","parseOptions","handlers","retrieve","macros","options","_b","__values","Object","keys","_c","next","done","cs","value","def","Array","isArray","Macro","MacroWithTemplate","slice","concat","add","environments","env","BeginEnv","exports","ConfigMacrosConfiguration","create","init","items","_a","BeginEnvItem","prototype","kind","expandable"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/configmacros/ConfigMacrosConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview    Configuration file for the configmacros package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport {expandable} from '../../../util/Options.js';\nimport {CommandMap, EnvironmentMap} from '../SymbolMap.js';\nimport ParseMethods from '../ParseMethods.js';\nimport {Macro} from '../Symbol.js';\nimport NewcommandMethods from '../newcommand/NewcommandMethods.js';\nimport {BeginEnvItem} from '../newcommand/NewcommandItems.js';\nimport {TeX} from '../../tex.js';\n\ntype TEX = TeX<any, any, any>;\n\n/**\n * The name to use for the macros map\n */\nconst MACROSMAP = 'configmacros-map';\n\n/**\n * The name to use for the environment map\n */\nconst ENVIRONMENTMAP = 'configmacros-env-map';\n\n/**\n * Create the command map for the macros\n *\n * @param {Configuration} config   The configuration object for the input jax\n */\nfunction configmacrosInit(config: ParserConfiguration) {\n  new CommandMap(MACROSMAP, {}, {});\n  new EnvironmentMap(ENVIRONMENTMAP, ParseMethods.environment, {}, {});\n  config.append(Configuration.local({\n    handler: {\n      macro: [MACROSMAP],\n      environment: [ENVIRONMENTMAP]\n    },\n    priority: 3\n  }));\n}\n\n/**\n * Create the user-defined macros and environments from their options\n *\n * @param {Configuration} config   The configuration object for the input jax\n * @param {TeX} jax                The TeX input jax\n */\nfunction configmacrosConfig(_config: ParserConfiguration, jax: TEX) {\n  configMacros(jax);\n  configEnvironments(jax);\n}\n\n/**\n * Create user-defined macros from the macros option\n *\n * @param {TeX} jax                The TeX input jax\n */\nfunction configMacros(jax: TEX) {\n  const handler = jax.parseOptions.handlers.retrieve(MACROSMAP) as CommandMap;\n  const macros = jax.parseOptions.options.macros;\n  for (const cs of Object.keys(macros)) {\n    const def = (typeof macros[cs] === 'string' ? [macros[cs]] : macros[cs]);\n    const macro = Array.isArray(def[2]) ?\n      new Macro(cs, NewcommandMethods.MacroWithTemplate, def.slice(0, 2).concat(def[2])) :\n      new Macro(cs, NewcommandMethods.Macro, def);\n    handler.add(cs, macro);\n  }\n}\n\n/**\n * Create user-defined environments from the environments option\n *\n * @param {TeX} jax                The TeX input jax\n */\nfunction configEnvironments(jax: TEX) {\n  const handler = jax.parseOptions.handlers.retrieve(ENVIRONMENTMAP) as EnvironmentMap;\n  const environments = jax.parseOptions.options.environments;\n  for (const env of Object.keys(environments)) {\n    handler.add(env, new Macro(env, NewcommandMethods.BeginEnv, [true].concat(environments[env])));\n  }\n}\n\n/**\n * The configuration object for configmacros\n */\nexport const ConfigMacrosConfiguration = Configuration.create(\n  'configmacros', {\n    init: configmacrosInit,\n    config: configmacrosConfig,\n    items: {\n      [BeginEnvItem.prototype.kind]: BeginEnvItem,\n    },\n    options: {\n      macros: expandable({}),\n      environments: expandable({})\n    }\n  }\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}