{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnicodeConfiguration = exports.UnicodeMethods = void 0;\nvar Configuration_js_1 = require(\"../Configuration.js\");\nvar TexError_js_1 = __importDefault(require(\"../TexError.js\"));\nvar SymbolMap_js_1 = require(\"../SymbolMap.js\");\nvar ParseUtil_js_1 = __importDefault(require(\"../ParseUtil.js\"));\nvar NodeUtil_js_1 = __importDefault(require(\"../NodeUtil.js\"));\nvar Entities_js_1 = require(\"../../../util/Entities.js\");\nexports.UnicodeMethods = {};\nvar UnicodeCache = {};\nexports.UnicodeMethods.Unicode = function (parser, name) {\n  var HD = parser.GetBrackets(name);\n  var HDsplit = null;\n  var font = null;\n  if (HD) {\n    if (HD.replace(/ /g, '').match(/^(\\d+(\\.\\d*)?|\\.\\d+),(\\d+(\\.\\d*)?|\\.\\d+)$/)) {\n      HDsplit = HD.replace(/ /g, '').split(/,/);\n      font = parser.GetBrackets(name);\n    } else {\n      font = HD;\n    }\n  }\n  var n = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name)).replace(/^0x/, 'x');\n  if (!n.match(/^(x[0-9A-Fa-f]+|[0-9]+)$/)) {\n    throw new TexError_js_1.default('BadUnicode', 'Argument to \\\\unicode must be a number');\n  }\n  var N = parseInt(n.match(/^x/) ? '0' + n : n);\n  if (!UnicodeCache[N]) {\n    UnicodeCache[N] = [800, 200, font, N];\n  } else if (!font) {\n    font = UnicodeCache[N][2];\n  }\n  if (HDsplit) {\n    UnicodeCache[N][0] = Math.floor(parseFloat(HDsplit[0]) * 1000);\n    UnicodeCache[N][1] = Math.floor(parseFloat(HDsplit[1]) * 1000);\n  }\n  var variant = parser.stack.env.font;\n  var def = {};\n  if (font) {\n    UnicodeCache[N][2] = def.fontfamily = font.replace(/'/g, '\\'');\n    if (variant) {\n      if (variant.match(/bold/)) {\n        def.fontweight = 'bold';\n      }\n      if (variant.match(/italic|-mathit/)) {\n        def.fontstyle = 'italic';\n      }\n    }\n  } else if (variant) {\n    def.mathvariant = variant;\n  }\n  var node = parser.create('token', 'mtext', def, (0, Entities_js_1.numeric)(n));\n  NodeUtil_js_1.default.setProperty(node, 'unicode', true);\n  parser.Push(node);\n};\nnew SymbolMap_js_1.CommandMap('unicode', {\n  unicode: 'Unicode'\n}, exports.UnicodeMethods);\nexports.UnicodeConfiguration = Configuration_js_1.Configuration.create('unicode', {\n  handler: {\n    macro: ['unicode']\n  }\n});","map":{"version":3,"names":["Configuration_js_1","require","TexError_js_1","__importDefault","SymbolMap_js_1","ParseUtil_js_1","NodeUtil_js_1","Entities_js_1","exports","UnicodeMethods","UnicodeCache","Unicode","parser","name","HD","GetBrackets","HDsplit","font","replace","match","split","n","default","trimSpaces","GetArgument","N","parseInt","Math","floor","parseFloat","variant","stack","env","def","fontfamily","fontweight","fontstyle","mathvariant","node","create","numeric","setProperty","Push","CommandMap","unicode","UnicodeConfiguration","Configuration","handler","macro"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/unicode/UnicodeConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the unicode package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {EnvList} from '../StackItem.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {numeric} from '../../../util/Entities.js';\n\n// Namespace\nexport let UnicodeMethods: Record<string, ParseMethod> = {};\n\nlet UnicodeCache: {[key: number]: [number, number, string, number]} = {};\n\n/**\n * Parse function for unicode macro.\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the macro.\n */\nUnicodeMethods.Unicode = function(parser: TexParser, name: string) {\n  let HD = parser.GetBrackets(name);\n  let HDsplit = null;\n  let font = null;\n  if (HD) {\n    if (HD.replace(/ /g, '').\n        match(/^(\\d+(\\.\\d*)?|\\.\\d+),(\\d+(\\.\\d*)?|\\.\\d+)$/)) {\n      HDsplit = HD.replace(/ /g, '').split(/,/);\n      font = parser.GetBrackets(name);\n    } else {\n      font = HD;\n    }\n  }\n  let n = ParseUtil.trimSpaces(parser.GetArgument(name)).replace(/^0x/, 'x');\n  if (!n.match(/^(x[0-9A-Fa-f]+|[0-9]+)$/)) {\n    throw new TexError('BadUnicode', 'Argument to \\\\unicode must be a number');\n  }\n  let N = parseInt(n.match(/^x/) ? '0' + n : n);\n  if (!UnicodeCache[N]) {\n    UnicodeCache[N] = [800, 200, font, N];\n  } else if (!font) {\n    font = UnicodeCache[N][2];\n  }\n  if (HDsplit) {\n    UnicodeCache[N][0] = Math.floor(parseFloat(HDsplit[0]) * 1000);\n    UnicodeCache[N][1] = Math.floor(parseFloat(HDsplit[1]) * 1000);\n  }\n  let variant = parser.stack.env.font as string;\n  let def: EnvList = {};\n  if (font) {\n    UnicodeCache[N][2] = def.fontfamily = font.replace(/'/g, '\\'');\n    if (variant) {\n      if (variant.match(/bold/)) {\n        def.fontweight = 'bold';\n      }\n      if (variant.match(/italic|-mathit/)) {\n        def.fontstyle = 'italic';\n      }\n    }\n  } else if (variant) {\n    def.mathvariant = variant;\n  }\n  let node = parser.create('token', 'mtext', def, numeric(n));\n  NodeUtil.setProperty(node, 'unicode', true);\n  parser.Push(node);\n};\n\n\nnew CommandMap('unicode', {unicode: 'Unicode'}, UnicodeMethods);\n\n\nexport const UnicodeConfiguration = Configuration.create(\n  'unicode', {handler: {macro: ['unicode']}}\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}