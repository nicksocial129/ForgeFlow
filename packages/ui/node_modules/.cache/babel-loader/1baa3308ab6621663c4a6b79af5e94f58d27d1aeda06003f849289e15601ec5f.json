{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractNodeFactory = void 0;\nvar Factory_js_1 = require(\"./Factory.js\");\nvar AbstractNodeFactory = function (_super) {\n  __extends(AbstractNodeFactory, _super);\n  function AbstractNodeFactory() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AbstractNodeFactory.prototype.create = function (kind, properties, children) {\n    if (properties === void 0) {\n      properties = {};\n    }\n    if (children === void 0) {\n      children = [];\n    }\n    return this.node[kind](properties, children);\n  };\n  return AbstractNodeFactory;\n}(Factory_js_1.AbstractFactory);\nexports.AbstractNodeFactory = AbstractNodeFactory;","map":{"version":3,"names":["Factory_js_1","require","AbstractNodeFactory","_super","__extends","prototype","create","kind","properties","children","node","AbstractFactory","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/core/Tree/NodeFactory.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  The generic NodeFactory class for creating Node objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Node, PropertyList} from './Node.js';\nimport {Factory, FactoryNodeClass, AbstractFactory} from './Factory.js';\n\n/*****************************************************************/\n/**\n * The NodeFactory interface\n *\n * @template N  The node type created by the factory\n * @template C  The class of the node being constructed (for access to static properties)\n */\nexport interface NodeFactory<N extends Node, C extends FactoryNodeClass<N>> extends Factory<N, C> {\n  /**\n   * @param {string} kind  The kind of node to create\n   * @param {PropertyList} properties  The list of initial properties for the node (if any)\n   * @param {N[]} children  The array of initial child nodes (if any)\n   * @return {N}  The newly created node of the given kind\n   */\n  create(kind: string, properties?: PropertyList, children?: N[]): N;\n}\n\n/*****************************************************************/\n/**\n * The generic NodeFactory class\n *\n * @template N  The node type created by the factory\n * @template C  The class of the node being constructed (for access to static properties)\n */\nexport abstract class AbstractNodeFactory<N extends Node, C extends FactoryNodeClass<N>> extends AbstractFactory<N, C> {\n  /**\n   * @override\n   */\n  public create(kind: string, properties: PropertyList = {}, children: N[] = []) {\n    return this.node[kind](properties, children);\n  }\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAAA,YAAA,GAAAC,OAAA;AA0BA,IAAAC,mBAAA,aAAAC,MAAA;EAAiGC,SAAA,CAAAF,mBAAA,EAAAC,MAAA;EAAjG,SAAAD,oBAAA;;EAQA;EAJSA,mBAAA,CAAAG,SAAA,CAAAC,MAAM,GAAb,UAAcC,IAAY,EAAEC,UAA6B,EAAEC,QAAkB;IAAjD,IAAAD,UAAA;MAAAA,UAAA,KAA6B;IAAA;IAAE,IAAAC,QAAA;MAAAA,QAAA,KAAkB;IAAA;IAC3E,OAAO,IAAI,CAACC,IAAI,CAACH,IAAI,CAAC,CAACC,UAAU,EAAEC,QAAQ,CAAC;EAC9C,CAAC;EAEH,OAAAP,mBAAC;AAAD,CAAC,CARgGF,YAAA,CAAAW,eAAe;AAA1FC,OAAA,CAAAV,mBAAA,GAAAA,mBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}