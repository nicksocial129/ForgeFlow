{"ast":null,"code":"'use strict';\n\nmodule.exports = aspnet;\naspnet.displayName = 'aspnet';\naspnet.aliases = [];\nfunction aspnet(Prism) {\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive tag': {\n      pattern: /<%\\s*@.*%>/i,\n      inside: {\n        'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    'directive tag': {\n      pattern: /<%.*%>/i,\n      inside: {\n        'directive tag': /<%\\s*?[$=%#:]{0,2}|%>/i,\n        rest: Prism.languages.csharp\n      }\n    }\n  }); // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i; // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore('inside', 'punctuation', {\n    'directive tag': Prism.languages.aspnet['directive tag']\n  }, Prism.languages.aspnet.tag.inside['attr-value']);\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp comment': /<%--[\\s\\S]*?--%>/\n  }); // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n    'asp script': {\n      pattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n      lookbehind: true,\n      inside: Prism.languages.csharp || {}\n    }\n  });\n}","map":{"version":3,"names":["module","exports","aspnet","displayName","aliases","Prism","languages","extend","pattern","inside","rest","markup","tag","csharp","insertBefore","javascript","lookbehind"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/refractor/lang/aspnet.js"],"sourcesContent":["'use strict'\n\nmodule.exports = aspnet\naspnet.displayName = 'aspnet'\naspnet.aliases = []\nfunction aspnet(Prism) {\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive tag': {\n      pattern: /<%\\s*@.*%>/i,\n      inside: {\n        'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    'directive tag': {\n      pattern: /<%.*%>/i,\n      inside: {\n        'directive tag': /<%\\s*?[$=%#:]{0,2}|%>/i,\n        rest: Prism.languages.csharp\n      }\n    }\n  }) // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      'directive tag': Prism.languages.aspnet['directive tag']\n    },\n    Prism.languages.aspnet.tag.inside['attr-value']\n  )\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp comment': /<%--[\\s\\S]*?--%>/\n  }) // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore(\n    'aspnet',\n    Prism.languages.javascript ? 'script' : 'tag',\n    {\n      'asp script': {\n        pattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        inside: Prism.languages.csharp || {}\n      }\n    }\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,MAAM;AACvBA,MAAM,CAACC,WAAW,GAAG,QAAQ;AAC7BD,MAAM,CAACE,OAAO,GAAG,EAAE;AACnB,SAASF,MAAMA,CAACG,KAAK,EAAE;EACrBA,KAAK,CAACC,SAAS,CAACJ,MAAM,GAAGG,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,EAAE;IACxD,oBAAoB,EAAE;MACpBC,OAAO,EAAE,aAAa;MACtBC,MAAM,EAAE;QACN,oBAAoB,EAAE,2HAA2H;QACjJC,IAAI,EAAEL,KAAK,CAACC,SAAS,CAACK,MAAM,CAACC,GAAG,CAACH;MACnC;IACF,CAAC;IACD,eAAe,EAAE;MACfD,OAAO,EAAE,SAAS;MAClBC,MAAM,EAAE;QACN,eAAe,EAAE,wBAAwB;QACzCC,IAAI,EAAEL,KAAK,CAACC,SAAS,CAACO;MACxB;IACF;EACF,CAAC,CAAC,EAAC;EACHR,KAAK,CAACC,SAAS,CAACJ,MAAM,CAACU,GAAG,CAACJ,OAAO,GAAG,mGAAmG,EAAC;EACzIH,KAAK,CAACC,SAAS,CAACQ,YAAY,CAC1B,QAAQ,EACR,aAAa,EACb;IACE,eAAe,EAAET,KAAK,CAACC,SAAS,CAACJ,MAAM,CAAC,eAAe;EACzD,CAAC,EACDG,KAAK,CAACC,SAAS,CAACJ,MAAM,CAACU,GAAG,CAACH,MAAM,CAAC,YAAY,CAChD,CAAC;EACDJ,KAAK,CAACC,SAAS,CAACQ,YAAY,CAAC,QAAQ,EAAE,SAAS,EAAE;IAChD,aAAa,EAAE;EACjB,CAAC,CAAC,EAAC;EACHT,KAAK,CAACC,SAAS,CAACQ,YAAY,CAC1B,QAAQ,EACRT,KAAK,CAACC,SAAS,CAACS,UAAU,GAAG,QAAQ,GAAG,KAAK,EAC7C;IACE,YAAY,EAAE;MACZP,OAAO,EAAE,uEAAuE;MAChFQ,UAAU,EAAE,IAAI;MAChBP,MAAM,EAAEJ,KAAK,CAACC,SAAS,CAACO,MAAM,IAAI,CAAC;IACrC;EACF,CACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}