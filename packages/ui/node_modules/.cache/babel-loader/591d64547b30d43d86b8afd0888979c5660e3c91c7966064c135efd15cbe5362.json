{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmenclose = void 0;\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\nvar menclose_js_1 = require(\"../../common/Wrappers/menclose.js\");\nvar Notation = __importStar(require(\"../Notation.js\"));\nvar menclose_js_2 = require(\"../../../core/MmlTree/MmlNodes/menclose.js\");\nvar SVGmenclose = function (_super) {\n  __extends(SVGmenclose, _super);\n  function SVGmenclose() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SVGmenclose.prototype.toSVG = function (parent) {\n    var e_1, _a;\n    var svg = this.standardSVGnode(parent);\n    var left = this.getBBoxExtenders()[3];\n    var def = {};\n    if (left > 0) {\n      def.transform = 'translate(' + this.fixed(left) + ', 0)';\n    }\n    var block = this.adaptor.append(svg, this.svg('g', def));\n    if (this.renderChild) {\n      this.renderChild(this, block);\n    } else {\n      this.childNodes[0].toSVG(block);\n    }\n    try {\n      for (var _b = __values(Object.keys(this.notations)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n        var notation = this.notations[name_1];\n        !notation.renderChild && notation.renderer(this, svg);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  SVGmenclose.prototype.arrow = function (W, a, double, offset, dist) {\n    if (offset === void 0) {\n      offset = '';\n    }\n    if (dist === void 0) {\n      dist = 0;\n    }\n    var _a = this.getBBox(),\n      w = _a.w,\n      h = _a.h,\n      d = _a.d;\n    var dw = (W - w) / 2;\n    var m = (h - d) / 2;\n    var t = this.thickness;\n    var t2 = t / 2;\n    var _b = __read([t * this.arrowhead.x, t * this.arrowhead.y, t * this.arrowhead.dx], 3),\n      x = _b[0],\n      y = _b[1],\n      dx = _b[2];\n    var arrow = double ? this.fill('M', w + dw, m, 'l', -(x + dx), y, 'l', dx, t2 - y, 'L', x - dw, m + t2, 'l', dx, y - t2, 'l', -(x + dx), -y, 'l', x + dx, -y, 'l', -dx, y - t2, 'L', w + dw - x, m - t2, 'l', -dx, t2 - y, 'Z') : this.fill('M', w + dw, m, 'l', -(x + dx), y, 'l', dx, t2 - y, 'L', -dw, m + t2, 'l', 0, -t, 'L', w + dw - x, m - t2, 'l', -dx, t2 - y, 'Z');\n    var transform = [];\n    if (dist) {\n      transform.push(offset === 'X' ? \"translate(\".concat(this.fixed(-dist), \" 0)\") : \"translate(0 \".concat(this.fixed(dist), \")\"));\n    }\n    if (a) {\n      var A = this.jax.fixed(-a * 180 / Math.PI);\n      transform.push(\"rotate(\".concat(A, \" \").concat(this.fixed(w / 2), \" \").concat(this.fixed(m), \")\"));\n    }\n    if (transform.length) {\n      this.adaptor.setAttribute(arrow, 'transform', transform.join(' '));\n    }\n    return arrow;\n  };\n  SVGmenclose.prototype.line = function (pq) {\n    var _a = __read(pq, 4),\n      x1 = _a[0],\n      y1 = _a[1],\n      x2 = _a[2],\n      y2 = _a[3];\n    return this.svg('line', {\n      x1: this.fixed(x1),\n      y1: this.fixed(y1),\n      x2: this.fixed(x2),\n      y2: this.fixed(y2),\n      'stroke-width': this.fixed(this.thickness)\n    });\n  };\n  SVGmenclose.prototype.box = function (w, h, d, r) {\n    if (r === void 0) {\n      r = 0;\n    }\n    var t = this.thickness;\n    var def = {\n      x: this.fixed(t / 2),\n      y: this.fixed(t / 2 - d),\n      width: this.fixed(w - t),\n      height: this.fixed(h + d - t),\n      fill: 'none',\n      'stroke-width': this.fixed(t)\n    };\n    if (r) {\n      def.rx = this.fixed(r);\n    }\n    return this.svg('rect', def);\n  };\n  SVGmenclose.prototype.ellipse = function (w, h, d) {\n    var t = this.thickness;\n    return this.svg('ellipse', {\n      rx: this.fixed((w - t) / 2),\n      ry: this.fixed((h + d - t) / 2),\n      cx: this.fixed(w / 2),\n      cy: this.fixed((h - d) / 2),\n      'fill': 'none',\n      'stroke-width': this.fixed(t)\n    });\n  };\n  SVGmenclose.prototype.path = function (join) {\n    var _this = this;\n    var P = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      P[_i - 1] = arguments[_i];\n    }\n    return this.svg('path', {\n      d: P.map(function (x) {\n        return typeof x === 'string' ? x : _this.fixed(x);\n      }).join(' '),\n      style: {\n        'stroke-width': this.fixed(this.thickness)\n      },\n      'stroke-linecap': 'round',\n      'stroke-linejoin': join,\n      fill: 'none'\n    });\n  };\n  SVGmenclose.prototype.fill = function () {\n    var _this = this;\n    var P = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      P[_i] = arguments[_i];\n    }\n    return this.svg('path', {\n      d: P.map(function (x) {\n        return typeof x === 'string' ? x : _this.fixed(x);\n      }).join(' ')\n    });\n  };\n  SVGmenclose.kind = menclose_js_2.MmlMenclose.prototype.kind;\n  SVGmenclose.notations = new Map([Notation.Border('top'), Notation.Border('right'), Notation.Border('bottom'), Notation.Border('left'), Notation.Border2('actuarial', 'top', 'right'), Notation.Border2('madruwb', 'bottom', 'right'), Notation.DiagonalStrike('up'), Notation.DiagonalStrike('down'), ['horizontalstrike', {\n    renderer: Notation.RenderLine('horizontal', 'Y'),\n    bbox: function (node) {\n      return [0, node.padding, 0, node.padding];\n    }\n  }], ['verticalstrike', {\n    renderer: Notation.RenderLine('vertical', 'X'),\n    bbox: function (node) {\n      return [node.padding, 0, node.padding, 0];\n    }\n  }], ['box', {\n    renderer: function (node, _child) {\n      var _a = node.getBBox(),\n        w = _a.w,\n        h = _a.h,\n        d = _a.d;\n      node.adaptor.append(node.element, node.box(w, h, d));\n    },\n    bbox: Notation.fullBBox,\n    border: Notation.fullBorder,\n    remove: 'left right top bottom'\n  }], ['roundedbox', {\n    renderer: function (node, _child) {\n      var _a = node.getBBox(),\n        w = _a.w,\n        h = _a.h,\n        d = _a.d;\n      var r = node.thickness + node.padding;\n      node.adaptor.append(node.element, node.box(w, h, d, r));\n    },\n    bbox: Notation.fullBBox\n  }], ['circle', {\n    renderer: function (node, _child) {\n      var _a = node.getBBox(),\n        w = _a.w,\n        h = _a.h,\n        d = _a.d;\n      node.adaptor.append(node.element, node.ellipse(w, h, d));\n    },\n    bbox: Notation.fullBBox\n  }], ['phasorangle', {\n    renderer: function (node, _child) {\n      var _a = node.getBBox(),\n        w = _a.w,\n        h = _a.h,\n        d = _a.d;\n      var a = node.getArgMod(1.75 * node.padding, h + d)[0];\n      var t = node.thickness / 2;\n      var HD = h + d;\n      var cos = Math.cos(a);\n      node.adaptor.append(node.element, node.path('mitre', 'M', w, t - d, 'L', t + cos * t, t - d, 'L', cos * HD + t, HD - d - t));\n    },\n    bbox: function (node) {\n      var p = node.padding / 2;\n      var t = node.thickness;\n      return [2 * p, p, p + t, 3 * p + t];\n    },\n    border: function (node) {\n      return [0, 0, node.thickness, 0];\n    },\n    remove: 'bottom'\n  }], Notation.Arrow('up'), Notation.Arrow('down'), Notation.Arrow('left'), Notation.Arrow('right'), Notation.Arrow('updown'), Notation.Arrow('leftright'), Notation.DiagonalArrow('updiagonal'), Notation.DiagonalArrow('northeast'), Notation.DiagonalArrow('southeast'), Notation.DiagonalArrow('northwest'), Notation.DiagonalArrow('southwest'), Notation.DiagonalArrow('northeastsouthwest'), Notation.DiagonalArrow('northwestsoutheast'), ['longdiv', {\n    renderer: function (node, _child) {\n      var _a = node.getBBox(),\n        w = _a.w,\n        h = _a.h,\n        d = _a.d;\n      var t = node.thickness / 2;\n      var p = node.padding;\n      node.adaptor.append(node.element, node.path('round', 'M', t, t - d, 'a', p - t / 2, (h + d) / 2 - 4 * t, 0, '0,1', 0, h + d - 2 * t, 'L', w - t, h - t));\n    },\n    bbox: function (node) {\n      var p = node.padding;\n      var t = node.thickness;\n      return [p + t, p, p, 2 * p + t / 2];\n    }\n  }], ['radical', {\n    renderer: function (node, child) {\n      node.msqrt.toSVG(child);\n      var left = node.sqrtTRBL()[3];\n      node.place(-left, 0, child);\n    },\n    init: function (node) {\n      node.msqrt = node.createMsqrt(node.childNodes[0]);\n    },\n    bbox: function (node) {\n      return node.sqrtTRBL();\n    },\n    renderChild: true\n  }]]);\n  return SVGmenclose;\n}((0, menclose_js_1.CommonMencloseMixin)(Wrapper_js_1.SVGWrapper));\nexports.SVGmenclose = SVGmenclose;","map":{"version":3,"names":["Wrapper_js_1","require","menclose_js_1","Notation","__importStar","menclose_js_2","SVGmenclose","_super","__extends","prototype","toSVG","parent","svg","standardSVGnode","left","getBBoxExtenders","def","transform","fixed","block","adaptor","append","renderChild","childNodes","_b","__values","Object","keys","notations","_c","next","done","name_1","value","notation","renderer","arrow","W","a","double","offset","dist","_a","getBBox","w","h","d","dw","m","t","thickness","t2","__read","arrowhead","x","y","dx","fill","push","concat","A","jax","Math","PI","length","setAttribute","join","line","pq","x1","y1","x2","y2","box","r","width","height","rx","ellipse","ry","cx","cy","path","_this","P","_i","arguments","map","style","kind","MmlMenclose","Map","Border","Border2","DiagonalStrike","RenderLine","bbox","node","padding","_child","element","fullBBox","border","fullBorder","remove","getArgMod","HD","cos","p","Arrow","DiagonalArrow","child","msqrt","sqrtTRBL","place","init","createMsqrt","CommonMencloseMixin","SVGWrapper","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/svg/Wrappers/menclose.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGmenclose wrapper for the MmlMenclose object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor} from '../Wrapper.js';\nimport {CommonMencloseMixin} from '../../common/Wrappers/menclose.js';\nimport {SVGmsqrt} from './msqrt.js';\nimport * as Notation from '../Notation.js';\nimport {MmlMenclose} from '../../../core/MmlTree/MmlNodes/menclose.js';\nimport {OptionList} from '../../../util/Options.js';\n\n/*****************************************************************/\n/**\n * The SVGmenclose wrapper for the MmlMenclose object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class SVGmenclose<N, T, D> extends CommonMencloseMixin<\n  SVGWrapper<any, any, any>,\n  SVGmsqrt<any, any, any>,\n  any,\n  SVGConstructor<any, any, any>\n>(SVGWrapper) {\n\n  /**\n   * The menclose wrapper\n   */\n  public static kind = MmlMenclose.prototype.kind;\n\n  /**\n   *  The definitions of the various notations\n   */\n  public static notations: Notation.DefList<SVGmenclose<any, any, any>, any> = new Map([\n\n    Notation.Border('top'),\n    Notation.Border('right'),\n    Notation.Border('bottom'),\n    Notation.Border('left'),\n\n    Notation.Border2('actuarial', 'top', 'right'),\n    Notation.Border2('madruwb', 'bottom', 'right'),\n\n    Notation.DiagonalStrike('up'),\n    Notation.DiagonalStrike('down'),\n\n    ['horizontalstrike', {\n      renderer: Notation.RenderLine('horizontal', 'Y'),\n      bbox: (node) => [0, node.padding, 0, node.padding]\n    }],\n\n    ['verticalstrike', {\n      renderer: Notation.RenderLine('vertical', 'X'),\n      bbox: (node) => [node.padding, 0, node.padding, 0]\n    }],\n\n    ['box', {\n      renderer: (node, _child) => {\n        const {w, h, d} = node.getBBox();\n        node.adaptor.append(node.element, node.box(w, h, d));\n      },\n      bbox: Notation.fullBBox,\n      border: Notation.fullBorder,\n      remove: 'left right top bottom'\n    }],\n\n    ['roundedbox', {\n      renderer: (node, _child) => {\n        const {w, h, d} = node.getBBox();\n        const r = node.thickness + node.padding;\n        node.adaptor.append(node.element, node.box(w, h, d, r));\n      },\n      bbox: Notation.fullBBox\n    }],\n\n    ['circle', {\n      renderer: (node, _child) => {\n        const {w, h, d} = node.getBBox();\n        node.adaptor.append(node.element, node.ellipse(w, h, d));\n      },\n      bbox: Notation.fullBBox\n    }],\n\n    ['phasorangle', {\n      //\n      // Use a bottom border and an upward strike properly angled\n      //\n      renderer: (node, _child) => {\n        const {w, h, d} = node.getBBox();\n        const a = node.getArgMod(1.75 * node.padding, h + d)[0];\n        const t = node.thickness / 2;\n        const HD = h + d;\n        const cos = Math.cos(a);\n        node.adaptor.append(\n          node.element,\n          node.path('mitre', 'M', w, t - d,  'L', t + cos * t, t - d,  'L' , cos * HD + t, HD - d - t)\n        );\n      },\n      bbox: (node) => {\n        const p = node.padding / 2;\n        const t = node.thickness;\n        return [2 * p, p, p + t, 3 * p + t];\n      },\n      border: (node) => [0, 0, node.thickness, 0],\n      remove: 'bottom'\n    }],\n\n    Notation.Arrow('up'),\n    Notation.Arrow('down'),\n    Notation.Arrow('left'),\n    Notation.Arrow('right'),\n\n    Notation.Arrow('updown'),\n    Notation.Arrow('leftright'),\n\n    Notation.DiagonalArrow('updiagonal'),  // backward compatibility\n    Notation.DiagonalArrow('northeast'),\n    Notation.DiagonalArrow('southeast'),\n    Notation.DiagonalArrow('northwest'),\n    Notation.DiagonalArrow('southwest'),\n\n    Notation.DiagonalArrow('northeastsouthwest'),\n    Notation.DiagonalArrow('northwestsoutheast'),\n\n    ['longdiv', {\n      //\n      // Use a line along the top followed by a half ellipse at the left\n      //\n      renderer: (node, _child) => {\n        const {w, h, d} = node.getBBox();\n        const t = node.thickness / 2;\n        const p = node.padding;\n        node.adaptor.append(\n          node.element,\n          node.path('round',\n                    'M', t, t - d,\n                    'a', p - t / 2, (h + d) / 2 - 4 * t,  0,  '0,1',  0, h + d - 2 * t,\n                    'L', w - t, h - t\n                   )\n        );\n      },\n      bbox: (node) => {\n        const p = node.padding;\n        const t = node.thickness;\n        return [p + t, p, p, 2 * p + t / 2];\n      }\n    }],\n\n    ['radical', {\n      //\n      //  Use the msqrt rendering, but remove the extra space due to the radical\n      //    (it is added in at the end, so other notations overlap the root)\n      //\n      renderer: (node, child) => {\n        node.msqrt.toSVG(child);\n        const left = node.sqrtTRBL()[3];\n        node.place(-left, 0, child);\n      },\n      //\n      //  Create the needed msqrt wrapper\n      //\n      init: (node) => {\n        node.msqrt = node.createMsqrt(node.childNodes[0]);\n      },\n      //\n      //  Add back in the padding for the square root\n      //\n      bbox: (node) => node.sqrtTRBL(),\n      //\n      //  This notation replaces the child\n      //\n      renderChild: true\n    }]\n\n  ] as Notation.DefPair<SVGmenclose<any, any, any>, any>[]);\n\n  /********************************************************/\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = this.standardSVGnode(parent);\n    //\n    //  Create a box at the correct position and add the children\n    //\n    const left = this.getBBoxExtenders()[3];\n    const def: OptionList = {};\n    if (left > 0) {\n      def.transform = 'translate(' + this.fixed(left) + ', 0)';\n    }\n    const block = this.adaptor.append(svg, this.svg('g', def));\n    if (this.renderChild) {\n      this.renderChild(this, block);\n    } else {\n      this.childNodes[0].toSVG(block);\n    }\n    //\n    //  Render all the notations for this menclose element\n    //\n    for (const name of Object.keys(this.notations)) {\n      const notation = this.notations[name];\n      !notation.renderChild && notation.renderer(this, svg);\n    }\n  }\n\n  /********************************************************/\n\n  /**\n   * Create an arrow using SVG elements\n   *\n   * @param {number} W        The length of the arrow\n   * @param {number} a        The angle for the arrow\n   * @param {boolean} double  True if this is a double-headed arrow\n   * @param {string} offset   'X' for vertical arrow, 'Y' for horizontal\n   * @param {number} dist     Distance to translate in the offset direction\n   * @return {N}              The newly created arrow\n   */\n  public arrow(W: number, a: number, double: boolean, offset: string = '', dist: number = 0): N {\n    const {w, h, d} = this.getBBox();\n    const dw = (W - w) / 2;\n    const m = (h - d) / 2;\n    const t = this.thickness;\n    const t2 = t / 2;\n    const [x, y, dx] = [t * this.arrowhead.x, t * this.arrowhead.y, t * this.arrowhead.dx];\n    const arrow =\n      (double ?\n       this.fill(\n         'M', w + dw, m,                            // point of arrow\n         'l', -(x + dx), y,  'l', dx, t2 - y,       // upper right head\n         'L', x - dw, m + t2,                       // upper side of shaft\n         'l', dx, y - t2, 'l', -(x + dx), - y,      // left point\n         'l', x + dx, -y,    'l', -dx, y - t2,      // lower left head\n         'L', w + dw - x, m - t2,                   // lower side of shaft\n         'l', -dx, t2 - y, 'Z'                      // lower head\n       ) :\n       this.fill(\n         'M', w + dw, m,                            // point of arrow\n         'l', -(x + dx), y,  'l', dx, t2 - y,       // upper head\n         'L', -dw, m + t2, 'l', 0, -t,              // upper side of shaft\n         'L', w + dw - x, m - t2,                   // lower side of shaft\n         'l', -dx, t2 - y, 'Z'                      // lower head\n       ));\n    const transform = [];\n    if (dist) {\n      transform.push(offset === 'X' ? `translate(${this.fixed(-dist)} 0)` : `translate(0 ${this.fixed(dist)})`);\n    }\n    if (a) {\n      const A = this.jax.fixed(-a * 180 / Math.PI);\n      transform.push(`rotate(${A} ${this.fixed(w / 2)} ${this.fixed(m)})`);\n    }\n    if (transform.length) {\n      this.adaptor.setAttribute(arrow, 'transform', transform.join(' '));\n    }\n    return arrow as N;\n  }\n\n  /********************************************************/\n\n  /**\n   * Create a line element\n   *\n   * @param {number[]} pq   The coordinates of the endpoints, [x1, y1, x2, y2]\n   * @return {N}            The newly created line element\n   */\n  public line(pq: [number, number, number, number]): N {\n    const [x1, y1, x2, y2] = pq;\n    return this.svg('line', {\n      x1: this.fixed(x1), y1: this.fixed(y1),\n      x2: this.fixed(x2), y2: this.fixed(y2),\n      'stroke-width': this.fixed(this.thickness)\n    });\n  }\n\n  /**\n   * Create a rectangle element\n   *\n   * @param {number} w    The width of the rectangle\n   * @param {number} h    The height of the rectangle\n   * @param {number} d    The depth of the rectangle\n   * @param {number=} r   The corner radius for a rounded rectangle\n   * @return {N}          The newly created line element\n   */\n  public box(w: number, h: number, d: number, r: number = 0): N {\n    const t = this.thickness;\n    const def: OptionList = {\n      x: this.fixed(t / 2), y: this.fixed(t / 2 - d),\n      width: this.fixed(w - t), height: this.fixed(h + d - t),\n      fill: 'none', 'stroke-width': this.fixed(t)\n    };\n    if (r) {\n      def.rx = this.fixed(r);\n    }\n    return this.svg('rect', def);\n  }\n\n  /**\n   * Create an ellipse element\n   *\n   * @param {number} w  The width of the ellipse\n   * @param {number} h  The height of the ellipse\n   * @param {number} d  The depth of the ellipse\n   * @return {N}        The newly created ellipse node\n   */\n  public ellipse(w: number, h: number, d: number): N {\n    const t = this.thickness;\n    return this.svg('ellipse', {\n      rx: this.fixed((w - t) / 2), ry: this.fixed((h + d - t) / 2),\n      cx: this.fixed(w / 2), cy: this.fixed((h - d) / 2),\n      'fill': 'none', 'stroke-width': this.fixed(t)\n    });\n  }\n\n  /**\n   * Create a path element from the commands that specify it\n   *\n   * @param {string} join           The join style for the path\n   * @param {(string|number)[]} P   The list of commands and coordinates for the path\n   * @return {N}                    The newly created path\n   */\n  public path(join: string, ...P: (string | number)[]): N {\n    return this.svg('path', {\n      d: P.map(x => (typeof x === 'string' ? x : this.fixed(x))).join(' '),\n      style: {'stroke-width': this.fixed(this.thickness)},\n      'stroke-linecap': 'round', 'stroke-linejoin': join,\n      fill: 'none'\n    });\n  }\n\n  /**\n   * Create a filled path element from the commands the specify it\n   *   (same as path above, but no thickness adjustments)\n   *\n   * @param {(string|number)[]} P   The list of commands and coordinates for the path\n   * @return {N}                    The newly created path\n   */\n  public fill(...P: (string | number)[]): N {\n    return this.svg('path', {\n      d: P.map(x => (typeof x === 'string' ? x : this.fixed(x))).join(' ')\n    });\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}