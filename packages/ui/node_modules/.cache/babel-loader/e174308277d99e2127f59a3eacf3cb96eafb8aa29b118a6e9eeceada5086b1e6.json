{"ast":null,"code":"module.exports = function (hljs) {\n  var BACKTICK_ESCAPE = {\n    begin: '`[\\\\s\\\\S]'\n  };\n  return {\n    case_insensitive: true,\n    aliases: ['ahk'],\n    keywords: {\n      keyword: 'Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group',\n      literal: 'true false NOT AND OR',\n      built_in: 'ComSpec Clipboard ClipboardAll ErrorLevel'\n    },\n    contains: [BACKTICK_ESCAPE, hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      contains: [BACKTICK_ESCAPE]\n    }), hljs.COMMENT(';', '$', {\n      relevance: 0\n    }), hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'number',\n      begin: hljs.NUMBER_RE,\n      relevance: 0\n    }, {\n      className: 'variable',\n      //subst would be the most accurate however fails the point of highlighting. variable is comparably the most accurate that actually has some effect\n      begin: '%[a-zA-Z0-9#_$@]+%'\n    }, {\n      className: 'built_in',\n      begin: '^\\\\s*\\\\w+\\\\s*(,|%)'\n      //I don't really know if this is totally relevant\n    }, {\n      className: 'title',\n      //symbol would be most accurate however is higlighted just like built_in and that makes up a lot of AutoHotkey code\n      //meaning that it would fail to highlight anything\n      variants: [{\n        begin: '^[^\\\\n\";]+::(?!=)'\n      }, {\n        begin: '^[^\\\\n\";]+:(?!=)',\n        relevance: 0\n      } // zero relevance as it catches a lot of things\n      // followed by a single ':' in many languages\n      ]\n    }, {\n      className: 'meta',\n      begin: '^\\\\s*#\\\\w+',\n      end: '$',\n      relevance: 0\n    }, {\n      className: 'built_in',\n      begin: 'A_[a-zA-Z0-9]+'\n    }, {\n      // consecutive commas, not for highlighting but just for relevance\n      begin: ',\\\\s*,'\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","BACKTICK_ESCAPE","begin","case_insensitive","aliases","keywords","keyword","literal","built_in","contains","inherit","QUOTE_STRING_MODE","COMMENT","relevance","C_BLOCK_COMMENT_MODE","className","NUMBER_RE","variants","end"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/autohotkey.js"],"sourcesContent":["module.exports = function(hljs) {\n  var BACKTICK_ESCAPE = {\n    begin: '`[\\\\s\\\\S]'\n  };\n\n  return {\n    case_insensitive: true,\n    aliases: [ 'ahk' ],\n    keywords: {\n      keyword: 'Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group',\n      literal: 'true false NOT AND OR',\n      built_in: 'ComSpec Clipboard ClipboardAll ErrorLevel',\n    },\n    contains: [\n      BACKTICK_ESCAPE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [BACKTICK_ESCAPE]}),\n      hljs.COMMENT(';', '$', {relevance: 0}),\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        begin: hljs.NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'variable', //subst would be the most accurate however fails the point of highlighting. variable is comparably the most accurate that actually has some effect\n        begin: '%[a-zA-Z0-9#_$@]+%'\n      },\n      {\n        className: 'built_in',\n        begin: '^\\\\s*\\\\w+\\\\s*(,|%)'\n        //I don't really know if this is totally relevant\n      },\n      {\n        className: 'title', //symbol would be most accurate however is higlighted just like built_in and that makes up a lot of AutoHotkey code\n\t\t                        //meaning that it would fail to highlight anything\n        variants: [\n          {begin: '^[^\\\\n\";]+::(?!=)'},\n          {begin: '^[^\\\\n\";]+:(?!=)', relevance: 0} // zero relevance as it catches a lot of things\n                                                    // followed by a single ':' in many languages\n        ]\n      },\n      {\n        className: 'meta', \n        begin: '^\\\\s*#\\\\w+', end:'$',\n        relevance: 0\n      },\n\t    {\n        className: 'built_in',\n        begin: 'A_[a-zA-Z0-9]+'\n      },\n      {\n        // consecutive commas, not for highlighting but just for relevance\n        begin: ',\\\\s*,'\n      }\n    ]\n  }\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,eAAe,GAAG;IACpBC,KAAK,EAAE;EACT,CAAC;EAED,OAAO;IACLC,gBAAgB,EAAE,IAAI;IACtBC,OAAO,EAAE,CAAE,KAAK,CAAE;IAClBC,QAAQ,EAAE;MACRC,OAAO,EAAE,sKAAsK;MAC/KC,OAAO,EAAE,uBAAuB;MAChCC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE,CACRR,eAAe,EACfD,IAAI,CAACU,OAAO,CAACV,IAAI,CAACW,iBAAiB,EAAE;MAACF,QAAQ,EAAE,CAACR,eAAe;IAAC,CAAC,CAAC,EACnED,IAAI,CAACY,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE;MAACC,SAAS,EAAE;IAAC,CAAC,CAAC,EACtCb,IAAI,CAACc,oBAAoB,EACzB;MACEC,SAAS,EAAE,QAAQ;MACnBb,KAAK,EAAEF,IAAI,CAACgB,SAAS;MACrBH,SAAS,EAAE;IACb,CAAC,EACD;MACEE,SAAS,EAAE,UAAU;MAAE;MACvBb,KAAK,EAAE;IACT,CAAC,EACD;MACEa,SAAS,EAAE,UAAU;MACrBb,KAAK,EAAE;MACP;IACF,CAAC,EACD;MACEa,SAAS,EAAE,OAAO;MAAE;MACF;MAClBE,QAAQ,EAAE,CACR;QAACf,KAAK,EAAE;MAAmB,CAAC,EAC5B;QAACA,KAAK,EAAE,kBAAkB;QAAEW,SAAS,EAAE;MAAC,CAAC,CAAC;MACA;MAAA;IAE9C,CAAC,EACD;MACEE,SAAS,EAAE,MAAM;MACjBb,KAAK,EAAE,YAAY;MAAEgB,GAAG,EAAC,GAAG;MAC5BL,SAAS,EAAE;IACb,CAAC,EACF;MACGE,SAAS,EAAE,UAAU;MACrBb,KAAK,EAAE;IACT,CAAC,EACD;MACE;MACAA,KAAK,EAAE;IACT,CAAC;EAEL,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}