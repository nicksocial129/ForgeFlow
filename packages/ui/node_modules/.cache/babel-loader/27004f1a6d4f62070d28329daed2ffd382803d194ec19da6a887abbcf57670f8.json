{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonTeXAtomMixin = void 0;\nvar MmlNode_js_1 = require(\"../../../core/MmlTree/MmlNode.js\");\nfunction CommonTeXAtomMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n      _super.prototype.computeBBox.call(this, bbox, recompute);\n      if (this.childNodes[0] && this.childNodes[0].bbox.ic) {\n        bbox.ic = this.childNodes[0].bbox.ic;\n      }\n      if (this.node.texClass === MmlNode_js_1.TEXCLASS.VCENTER) {\n        var h = bbox.h,\n          d = bbox.d;\n        var a = this.font.params.axis_height;\n        var dh = (h + d) / 2 + a - h;\n        bbox.h += dh;\n        bbox.d -= dh;\n      }\n    };\n    return class_1;\n  }(Base);\n}\nexports.CommonTeXAtomMixin = CommonTeXAtomMixin;","map":{"version":3,"names":["MmlNode_js_1","require","CommonTeXAtomMixin","Base","_super","__extends","class_1","prototype","computeBBox","bbox","recompute","call","childNodes","ic","node","texClass","TEXCLASS","VCENTER","h","d","a","font","params","axis_height","dh","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/common/Wrappers/TeXAtom.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonTeXAtom wrapper mixin for the MmlTeXAtom object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\n\n/*****************************************************************/\n/**\n * The CommonTeXAtom interface\n */\nexport interface CommonTeXAtom extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonTeXAtom constructor\n */\nexport type TeXAtomConstructor = Constructor<CommonTeXAtom>;\n\n/*****************************************************************/\n/**\n * The CommonTeXAtom wrapper mixin for the TeXAtom object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonTeXAtomMixin<T extends WrapperConstructor>(Base: T): TeXAtomConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      super.computeBBox(bbox, recompute);\n      if (this.childNodes[0] && this.childNodes[0].bbox.ic) {\n        bbox.ic = this.childNodes[0].bbox.ic;\n      }\n      //\n      // Center VCENTER atoms vertically\n      //\n      if (this.node.texClass === TEXCLASS.VCENTER) {\n        const {h, d} = bbox;\n        const a = this.font.params.axis_height;\n        const dh = ((h + d) / 2 + a) - h;  // new height minus old height\n        bbox.h += dh;\n        bbox.d -= dh;\n      }\n    }\n\n  };\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAAA,YAAA,GAAAC,OAAA;AAoBA,SAAgBC,kBAAkBA,CAA+BC,IAAO;EAEtE,iBAAAC,MAAA;IAAqBC,SAAA,CAAAC,OAAA,EAAAF,MAAA;IAAd,SAAAE,QAAA;;IAsBP;IAjBSA,OAAA,CAAAC,SAAA,CAAAC,WAAW,GAAlB,UAAmBC,IAAU,EAAEC,SAA0B;MAA1B,IAAAA,SAAA;QAAAA,SAAA,QAA0B;MAAA;MACvDN,MAAA,CAAAG,SAAA,CAAMC,WAAW,CAAAG,IAAA,OAACF,IAAI,EAAEC,SAAS,CAAC;MAClC,IAAI,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAACA,UAAU,CAAC,CAAC,CAAC,CAACH,IAAI,CAACI,EAAE,EAAE;QACpDJ,IAAI,CAACI,EAAE,GAAG,IAAI,CAACD,UAAU,CAAC,CAAC,CAAC,CAACH,IAAI,CAACI,EAAE;;MAKtC,IAAI,IAAI,CAACC,IAAI,CAACC,QAAQ,KAAKf,YAAA,CAAAgB,QAAQ,CAACC,OAAO,EAAE;QACpC,IAAAC,CAAC,GAAOT,IAAI,CAAAS,CAAX;UAAEC,CAAC,GAAIV,IAAI,CAAAU,CAAR;QACX,IAAMC,CAAC,GAAG,IAAI,CAACC,IAAI,CAACC,MAAM,CAACC,WAAW;QACtC,IAAMC,EAAE,GAAI,CAACN,CAAC,GAAGC,CAAC,IAAI,CAAC,GAAGC,CAAC,GAAIF,CAAC;QAChCT,IAAI,CAACS,CAAC,IAAIM,EAAE;QACZf,IAAI,CAACU,CAAC,IAAIK,EAAE;;IAEhB,CAAC;IAEH,OAAAlB,OAAC;EAAD,CAAC,CAtBoBH,IAAI;AAwB3B;AA1BAsB,OAAA,CAAAvB,kBAAA,GAAAA,kBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}