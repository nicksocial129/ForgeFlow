{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar TexError = function () {\n  function TexError(id, message) {\n    var rest = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      rest[_i - 2] = arguments[_i];\n    }\n    this.id = id;\n    this.message = TexError.processString(message, rest);\n  }\n  TexError.processString = function (str, args) {\n    var parts = str.split(TexError.pattern);\n    for (var i = 1, m = parts.length; i < m; i += 2) {\n      var c = parts[i].charAt(0);\n      if (c >= '0' && c <= '9') {\n        parts[i] = args[parseInt(parts[i], 10) - 1];\n        if (typeof parts[i] === 'number') {\n          parts[i] = parts[i].toString();\n        }\n      } else if (c === '{') {\n        c = parts[i].substr(1);\n        if (c >= '0' && c <= '9') {\n          parts[i] = args[parseInt(parts[i].substr(1, parts[i].length - 2), 10) - 1];\n          if (typeof parts[i] === 'number') {\n            parts[i] = parts[i].toString();\n          }\n        } else {\n          var match = parts[i].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);\n          if (match) {\n            parts[i] = '%' + parts[i];\n          }\n        }\n      }\n      if (parts[i] == null) {\n        parts[i] = '???';\n      }\n    }\n    return parts.join('');\n  };\n  TexError.pattern = /%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g;\n  return TexError;\n}();\nexports.default = TexError;","map":{"version":3,"names":["TexError","id","message","rest","_i","arguments","length","processString","str","args","parts","split","pattern","i","m","c","charAt","parseInt","toString","substr","match","join"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/TexError.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Error class for the TeX parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nexport default class TexError {\n\n  private static pattern =\n    /%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g;\n\n  /**\n   * Default error message.\n   * @type {string}\n   */\n  public message: string;\n\n  /**\n   * The old MathJax processing function.\n   * @param {string} str The basic error message.\n   * @param {string[]} args The arguments to be replaced in the error message.\n   * @return {string} The processed error string.\n   */\n  private static processString(str: string, args: string[]): string {\n    let parts = str.split(TexError.pattern);\n    for (let i = 1, m = parts.length; i < m; i += 2) {\n      let c = parts[i].charAt(0);  // first char will be { or \\d or a char to be\n                                   // kept literally\n      if (c >= '0' && c <= '9') {    // %n\n        parts[i] = args[parseInt(parts[i], 10) - 1];\n        if (typeof parts[i] === 'number') {\n          parts[i] = parts[i].toString();\n        }\n      } else if (c === '{') {        // %{n} or %{plural:%n|...}\n        c = parts[i].substr(1);\n        if (c >= '0' && c <= '9') {  // %{n}\n          parts[i] = args[parseInt(parts[i].substr(1, parts[i].length - 2), 10) - 1];\n          if (typeof parts[i] === 'number') {\n            parts[i] = parts[i].toString();\n          }\n        } else {                     // %{plural:%n|...}\n          let match = parts[i].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);\n          if (match) {\n            // Removed plural here.\n            parts[i] = '%' + parts[i];\n          }\n        }\n      }\n      if (parts[i] == null) {\n        parts[i] = '???';\n      }\n    }\n    return parts.join('');\n  }\n\n  /**\n   * @constructor\n   * @param{string} id        message id (for localization)\n   * @param{string} message   text of English message\n   * @param{string[]=} rest   any substitution arguments\n   */\n  constructor(public id: string, message: string, ...rest: string[]) {\n    this.message = TexError.processString(message, rest);\n  }\n\n}\n"],"mappings":";;;;;AAyBA,IAAAA,QAAA;EAuDE,SAAAA,SAAmBC,EAAU,EAAEC,OAAe;IAAE,IAAAC,IAAA;SAAA,IAAAC,EAAA,IAAiB,EAAjBA,EAAA,GAAAC,SAAA,CAAAC,MAAiB,EAAjBF,EAAA,EAAiB;MAAjBD,IAAA,CAAAC,EAAA,QAAAC,SAAA,CAAAD,EAAA;;IAA7B,KAAAH,EAAE,GAAFA,EAAE;IACnB,IAAI,CAACC,OAAO,GAAGF,QAAQ,CAACO,aAAa,CAACL,OAAO,EAAEC,IAAI,CAAC;EACtD;EAxCeH,QAAA,CAAAO,aAAa,GAA5B,UAA6BC,GAAW,EAAEC,IAAc;IACtD,IAAIC,KAAK,GAAGF,GAAG,CAACG,KAAK,CAACX,QAAQ,CAACY,OAAO,CAAC;IACvC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGJ,KAAK,CAACJ,MAAM,EAAEO,CAAC,GAAGC,CAAC,EAAED,CAAC,IAAI,CAAC,EAAE;MAC/C,IAAIE,CAAC,GAAGL,KAAK,CAACG,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC,CAAC;MAE1B,IAAID,CAAC,IAAI,GAAG,IAAIA,CAAC,IAAI,GAAG,EAAE;QACxBL,KAAK,CAACG,CAAC,CAAC,GAAGJ,IAAI,CAACQ,QAAQ,CAACP,KAAK,CAACG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,OAAOH,KAAK,CAACG,CAAC,CAAC,KAAK,QAAQ,EAAE;UAChCH,KAAK,CAACG,CAAC,CAAC,GAAGH,KAAK,CAACG,CAAC,CAAC,CAACK,QAAQ,EAAE;;OAEjC,MAAM,IAAIH,CAAC,KAAK,GAAG,EAAE;QACpBA,CAAC,GAAGL,KAAK,CAACG,CAAC,CAAC,CAACM,MAAM,CAAC,CAAC,CAAC;QACtB,IAAIJ,CAAC,IAAI,GAAG,IAAIA,CAAC,IAAI,GAAG,EAAE;UACxBL,KAAK,CAACG,CAAC,CAAC,GAAGJ,IAAI,CAACQ,QAAQ,CAACP,KAAK,CAACG,CAAC,CAAC,CAACM,MAAM,CAAC,CAAC,EAAET,KAAK,CAACG,CAAC,CAAC,CAACP,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;UAC1E,IAAI,OAAOI,KAAK,CAACG,CAAC,CAAC,KAAK,QAAQ,EAAE;YAChCH,KAAK,CAACG,CAAC,CAAC,GAAGH,KAAK,CAACG,CAAC,CAAC,CAACK,QAAQ,EAAE;;SAEjC,MAAM;UACL,IAAIE,KAAK,GAAGV,KAAK,CAACG,CAAC,CAAC,CAACO,KAAK,CAAC,6BAA6B,CAAC;UACzD,IAAIA,KAAK,EAAE;YAETV,KAAK,CAACG,CAAC,CAAC,GAAG,GAAG,GAAGH,KAAK,CAACG,CAAC,CAAC;;;;MAI/B,IAAIH,KAAK,CAACG,CAAC,CAAC,IAAI,IAAI,EAAE;QACpBH,KAAK,CAACG,CAAC,CAAC,GAAG,KAAK;;;IAGpB,OAAOH,KAAK,CAACW,IAAI,CAAC,EAAE,CAAC;EACvB,CAAC;EA7CcrB,QAAA,CAAAY,OAAO,GACpB,iEAAiE;EAwDrE,OAAAZ,QAAC;CAAA,CA3DD;kBAAqBA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}