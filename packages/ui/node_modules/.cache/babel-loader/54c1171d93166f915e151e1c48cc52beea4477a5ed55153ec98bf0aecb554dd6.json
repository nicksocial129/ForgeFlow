{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BussproofsMethods_js_1 = __importDefault(require(\"./BussproofsMethods.js\"));\nvar ParseMethods_js_1 = __importDefault(require(\"../ParseMethods.js\"));\nvar SymbolMap_js_1 = require(\"../SymbolMap.js\");\nnew SymbolMap_js_1.CommandMap('Bussproofs-macros', {\n  AxiomC: 'Axiom',\n  UnaryInfC: ['Inference', 1],\n  BinaryInfC: ['Inference', 2],\n  TrinaryInfC: ['Inference', 3],\n  QuaternaryInfC: ['Inference', 4],\n  QuinaryInfC: ['Inference', 5],\n  RightLabel: ['Label', 'right'],\n  LeftLabel: ['Label', 'left'],\n  AXC: 'Axiom',\n  UIC: ['Inference', 1],\n  BIC: ['Inference', 2],\n  TIC: ['Inference', 3],\n  RL: ['Label', 'right'],\n  LL: ['Label', 'left'],\n  noLine: ['SetLine', 'none', false],\n  singleLine: ['SetLine', 'solid', false],\n  solidLine: ['SetLine', 'solid', false],\n  dashedLine: ['SetLine', 'dashed', false],\n  alwaysNoLine: ['SetLine', 'none', true],\n  alwaysSingleLine: ['SetLine', 'solid', true],\n  alwaysSolidLine: ['SetLine', 'solid', true],\n  alwaysDashedLine: ['SetLine', 'dashed', true],\n  rootAtTop: ['RootAtTop', true],\n  alwaysRootAtTop: ['RootAtTop', true],\n  rootAtBottom: ['RootAtTop', false],\n  alwaysRootAtBottom: ['RootAtTop', false],\n  fCenter: 'FCenter',\n  Axiom: 'AxiomF',\n  UnaryInf: ['InferenceF', 1],\n  BinaryInf: ['InferenceF', 2],\n  TrinaryInf: ['InferenceF', 3],\n  QuaternaryInf: ['InferenceF', 4],\n  QuinaryInf: ['InferenceF', 5]\n}, BussproofsMethods_js_1.default);\nnew SymbolMap_js_1.EnvironmentMap('Bussproofs-environments', ParseMethods_js_1.default.environment, {\n  prooftree: ['Prooftree', null, false]\n}, BussproofsMethods_js_1.default);","map":{"version":3,"names":["BussproofsMethods_js_1","__importDefault","require","ParseMethods_js_1","SymbolMap_js_1","CommandMap","AxiomC","UnaryInfC","BinaryInfC","TrinaryInfC","QuaternaryInfC","QuinaryInfC","RightLabel","LeftLabel","AXC","UIC","BIC","TIC","RL","LL","noLine","singleLine","solidLine","dashedLine","alwaysNoLine","alwaysSingleLine","alwaysSolidLine","alwaysDashedLine","rootAtTop","alwaysRootAtTop","rootAtBottom","alwaysRootAtBottom","fCenter","Axiom","UnaryInf","BinaryInf","TrinaryInf","QuaternaryInf","QuinaryInf","default","EnvironmentMap","environment","prooftree"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/bussproofs/BussproofsMappings.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing for Bussproofs package commands.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport BussproofsMethods from './BussproofsMethods.js';\nimport ParseMethods from '../ParseMethods.js';\nimport {CommandMap, EnvironmentMap} from '../SymbolMap.js';\n\n\n/**\n * Macros for bussproofs etc.\n */\nnew CommandMap('Bussproofs-macros', {\n  AxiomC:           'Axiom',\n  UnaryInfC:        ['Inference', 1],\n  BinaryInfC:       ['Inference', 2],\n  TrinaryInfC:      ['Inference', 3],\n  QuaternaryInfC:   ['Inference', 4],\n  QuinaryInfC:      ['Inference', 5],\n  RightLabel:       ['Label', 'right'],\n  LeftLabel:        ['Label', 'left'],\n  // Abbreviations are automatically enabled\n  AXC:              'Axiom',\n  UIC:              ['Inference', 1],\n  BIC:              ['Inference', 2],\n  TIC:              ['Inference', 3],\n  RL:               ['Label', 'right'],\n  LL:               ['Label', 'left'],\n\n  noLine:           ['SetLine', 'none', false],\n  singleLine:       ['SetLine', 'solid', false],\n  solidLine:        ['SetLine', 'solid', false],\n  dashedLine:       ['SetLine', 'dashed', false],\n  // Not yet implemented in CSS!\n  // doubleLine:       ['SetLine', 'double', false],\n  // dottedLine:       ['SetLine', 'dotted', false],\n\n  alwaysNoLine:           ['SetLine', 'none', true],\n  alwaysSingleLine:       ['SetLine', 'solid', true],\n  alwaysSolidLine:        ['SetLine', 'solid', true],\n  alwaysDashedLine:       ['SetLine', 'dashed', true],\n  // Not yet implemented in CSS!\n  // alwaysDoubleLine:       ['SetLine', 'double', true],\n  // alwaysDottedLine:       ['SetLine', 'dotted', true],\n\n  rootAtTop: ['RootAtTop', true],\n  alwaysRootAtTop: ['RootAtTop', true],\n\n  rootAtBottom: ['RootAtTop', false],\n  alwaysRootAtBottom: ['RootAtTop', false],\n  // TODO: always commands should be persistent.\n\n  fCenter:         'FCenter',\n  Axiom:           'AxiomF',\n  UnaryInf:        ['InferenceF', 1],\n  BinaryInf:        ['InferenceF', 2],\n  TrinaryInf:        ['InferenceF', 3],\n  QuaternaryInf:        ['InferenceF', 4],\n  QuinaryInf:        ['InferenceF', 5]\n}, BussproofsMethods);\n\n\nnew EnvironmentMap('Bussproofs-environments', ParseMethods.environment, {\n  prooftree:        ['Prooftree', null, false]\n}, BussproofsMethods);\n"],"mappings":";;;;;;;;;;AAwBA,IAAAA,sBAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAF,eAAA,CAAAC,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AAMA,IAAIE,cAAA,CAAAC,UAAU,CAAC,mBAAmB,EAAE;EAClCC,MAAM,EAAY,OAAO;EACzBC,SAAS,EAAS,CAAC,WAAW,EAAE,CAAC,CAAC;EAClCC,UAAU,EAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;EAClCC,WAAW,EAAO,CAAC,WAAW,EAAE,CAAC,CAAC;EAClCC,cAAc,EAAI,CAAC,WAAW,EAAE,CAAC,CAAC;EAClCC,WAAW,EAAO,CAAC,WAAW,EAAE,CAAC,CAAC;EAClCC,UAAU,EAAQ,CAAC,OAAO,EAAE,OAAO,CAAC;EACpCC,SAAS,EAAS,CAAC,OAAO,EAAE,MAAM,CAAC;EAEnCC,GAAG,EAAe,OAAO;EACzBC,GAAG,EAAe,CAAC,WAAW,EAAE,CAAC,CAAC;EAClCC,GAAG,EAAe,CAAC,WAAW,EAAE,CAAC,CAAC;EAClCC,GAAG,EAAe,CAAC,WAAW,EAAE,CAAC,CAAC;EAClCC,EAAE,EAAgB,CAAC,OAAO,EAAE,OAAO,CAAC;EACpCC,EAAE,EAAgB,CAAC,OAAO,EAAE,MAAM,CAAC;EAEnCC,MAAM,EAAY,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC;EAC5CC,UAAU,EAAQ,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC;EAC7CC,SAAS,EAAS,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC;EAC7CC,UAAU,EAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC;EAK9CC,YAAY,EAAY,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC;EACjDC,gBAAgB,EAAQ,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC;EAClDC,eAAe,EAAS,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC;EAClDC,gBAAgB,EAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;EAKnDC,SAAS,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC;EAC9BC,eAAe,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC;EAEpCC,YAAY,EAAE,CAAC,WAAW,EAAE,KAAK,CAAC;EAClCC,kBAAkB,EAAE,CAAC,WAAW,EAAE,KAAK,CAAC;EAGxCC,OAAO,EAAU,SAAS;EAC1BC,KAAK,EAAY,QAAQ;EACzBC,QAAQ,EAAS,CAAC,YAAY,EAAE,CAAC,CAAC;EAClCC,SAAS,EAAS,CAAC,YAAY,EAAE,CAAC,CAAC;EACnCC,UAAU,EAAS,CAAC,YAAY,EAAE,CAAC,CAAC;EACpCC,aAAa,EAAS,CAAC,YAAY,EAAE,CAAC,CAAC;EACvCC,UAAU,EAAS,CAAC,YAAY,EAAE,CAAC;CACpC,EAAEtC,sBAAA,CAAAuC,OAAiB,CAAC;AAGrB,IAAInC,cAAA,CAAAoC,cAAc,CAAC,yBAAyB,EAAErC,iBAAA,CAAAoC,OAAY,CAACE,WAAW,EAAE;EACtEC,SAAS,EAAS,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK;CAC5C,EAAE1C,sBAAA,CAAAuC,OAAiB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}