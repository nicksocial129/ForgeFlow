{"ast":null,"code":"'use strict';\n\nmodule.exports = sas;\nsas.displayName = 'sas';\nsas.aliases = [];\nfunction sas(Prism) {\n  Prism.languages.sas = {\n    datalines: {\n      pattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n      alias: 'string',\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n          lookbehind: true\n        },\n        punctuation: /;/\n      }\n    },\n    comment: [{\n      pattern: /(^\\s*|;\\s*)\\*.*;/m,\n      lookbehind: true\n    }, /\\/\\*[\\s\\S]+?\\*\\//],\n    datetime: {\n      // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n      pattern: /'[^']+'(?:dt?|t)\\b/i,\n      alias: 'number'\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n      greedy: true\n    },\n    keyword: /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then|libname|set|output|options)\\b/i,\n    // Decimal (1.2e23), hexadecimal (0c1x)\n    number: /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n    operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n    punctuation: /[$%@.(){}\\[\\];,\\\\]/\n  };\n}","map":{"version":3,"names":["module","exports","sas","displayName","aliases","Prism","languages","datalines","pattern","alias","inside","keyword","lookbehind","punctuation","comment","datetime","string","greedy","number","operator"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/refractor/lang/sas.js"],"sourcesContent":["'use strict'\n\nmodule.exports = sas\nsas.displayName = 'sas'\nsas.aliases = []\nfunction sas(Prism) {\n  Prism.languages.sas = {\n    datalines: {\n      pattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n      alias: 'string',\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n          lookbehind: true\n        },\n        punctuation: /;/\n      }\n    },\n    comment: [\n      {\n        pattern: /(^\\s*|;\\s*)\\*.*;/m,\n        lookbehind: true\n      },\n      /\\/\\*[\\s\\S]+?\\*\\//\n    ],\n    datetime: {\n      // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n      pattern: /'[^']+'(?:dt?|t)\\b/i,\n      alias: 'number'\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n      greedy: true\n    },\n    keyword: /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then|libname|set|output|options)\\b/i,\n    // Decimal (1.2e23), hexadecimal (0c1x)\n    number: /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n    operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n    punctuation: /[$%@.(){}\\[\\];,\\\\]/\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,GAAG;AACpBA,GAAG,CAACC,WAAW,GAAG,KAAK;AACvBD,GAAG,CAACE,OAAO,GAAG,EAAE;AAChB,SAASF,GAAGA,CAACG,KAAK,EAAE;EAClBA,KAAK,CAACC,SAAS,CAACJ,GAAG,GAAG;IACpBK,SAAS,EAAE;MACTC,OAAO,EAAE,sDAAsD;MAC/DC,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE;QACNC,OAAO,EAAE;UACPH,OAAO,EAAE,iCAAiC;UAC1CI,UAAU,EAAE;QACd,CAAC;QACDC,WAAW,EAAE;MACf;IACF,CAAC;IACDC,OAAO,EAAE,CACP;MACEN,OAAO,EAAE,mBAAmB;MAC5BI,UAAU,EAAE;IACd,CAAC,EACD,kBAAkB,CACnB;IACDG,QAAQ,EAAE;MACR;MACAP,OAAO,EAAE,qBAAqB;MAC9BC,KAAK,EAAE;IACT,CAAC;IACDO,MAAM,EAAE;MACNR,OAAO,EAAE,gCAAgC;MACzCS,MAAM,EAAE;IACV,CAAC;IACDN,OAAO,EAAE,uFAAuF;IAChG;IACAO,MAAM,EAAE,8CAA8C;IACtDC,QAAQ,EAAE,sFAAsF;IAChGN,WAAW,EAAE;EACf,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}