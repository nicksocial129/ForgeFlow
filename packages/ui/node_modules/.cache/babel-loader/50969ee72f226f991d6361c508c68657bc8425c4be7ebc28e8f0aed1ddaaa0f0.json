{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMsMixin = void 0;\nfunction CommonMsMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n    function class_1() {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;\n      var attributes = _this.node.attributes;\n      var quotes = attributes.getList('lquote', 'rquote');\n      if (_this.variant !== 'monospace') {\n        if (!attributes.isSet('lquote') && quotes.lquote === '\"') quotes.lquote = '\\u201C';\n        if (!attributes.isSet('rquote') && quotes.rquote === '\"') quotes.rquote = '\\u201D';\n      }\n      _this.childNodes.unshift(_this.createText(quotes.lquote));\n      _this.childNodes.push(_this.createText(quotes.rquote));\n      return _this;\n    }\n    class_1.prototype.createText = function (text) {\n      var node = this.wrap(this.mmlText(text));\n      node.parent = this;\n      return node;\n    };\n    return class_1;\n  }(Base);\n}\nexports.CommonMsMixin = CommonMsMixin;","map":{"version":3,"names":["CommonMsMixin","Base","_super","__extends","class_1","args","_i","arguments","length","_this","apply","__spreadArray","__read","attributes","node","quotes","getList","variant","isSet","lquote","rquote","childNodes","unshift","createText","push","prototype","text","wrap","mmlText","parent","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/common/Wrappers/ms.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMs wrapper mixin for the MmlMs object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\n\n/*****************************************************************/\n/**\n * The CommonMs interface\n */\nexport interface CommonMs extends AnyWrapper {\n  /**\n   * Create a text wrapper with the given text;\n   *\n   * @param {string} text  The text for the wrapped element\n   * @return {CommonWrapper}   The wrapped text node\n   */\n  createText(text: string): AnyWrapper;\n}\n\n/**\n * Shorthand for the CommonMs constructor\n */\nexport type MsConstructor = Constructor<CommonMs>;\n\n/*****************************************************************/\n/**\n * The CommonMs wrapper mixin for the MmlMs object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMsMixin<T extends WrapperConstructor>(Base: T): MsConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * Add the quote characters to the wrapper children so they will be output\n     *\n     * @override\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      const attributes = this.node.attributes;\n      let quotes = attributes.getList('lquote', 'rquote');\n      if (this.variant !== 'monospace') {\n        if (!attributes.isSet('lquote') && quotes.lquote === '\"') quotes.lquote = '\\u201C';\n        if (!attributes.isSet('rquote') && quotes.rquote === '\"') quotes.rquote = '\\u201D';\n      }\n      this.childNodes.unshift(this.createText(quotes.lquote as string));\n      this.childNodes.push(this.createText(quotes.rquote as string));\n    }\n\n    /**\n     * Create a text wrapper with the given text;\n     *\n     * @param {string} text   The text for the wrapped element\n     * @return {AnyWrapper}   The wrapped text node\n     */\n    public createText(text: string): AnyWrapper {\n      const node = this.wrap(this.mmlText(text));\n      node.parent = this;\n      return node;\n    }\n  };\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,SAAgBA,aAAaA,CAA+BC,IAAO;EAEjE,iBAAAC,MAAA;IAAqBC,SAAA,CAAAC,OAAA,EAAAF,MAAA;IAOnB,SAAAE,QAAA;MAAY,IAAAC,IAAA;WAAA,IAAAC,EAAA,IAAc,EAAdA,EAAA,GAAAC,SAAA,CAAAC,MAAc,EAAdF,EAAA,EAAc;QAAdD,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;MAAZ,IAAAG,KAAA,GAAAP,MAAA,CAAAQ,KAAA,OAAAC,aAAA,KAAAC,MAAA,CACWP,IAAI;MACb,IAAMQ,UAAU,GAAGJ,KAAI,CAACK,IAAI,CAACD,UAAU;MACvC,IAAIE,MAAM,GAAGF,UAAU,CAACG,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC;MACnD,IAAIP,KAAI,CAACQ,OAAO,KAAK,WAAW,EAAE;QAChC,IAAI,CAACJ,UAAU,CAACK,KAAK,CAAC,QAAQ,CAAC,IAAIH,MAAM,CAACI,MAAM,KAAK,GAAG,EAAEJ,MAAM,CAACI,MAAM,GAAG,QAAQ;QAClF,IAAI,CAACN,UAAU,CAACK,KAAK,CAAC,QAAQ,CAAC,IAAIH,MAAM,CAACK,MAAM,KAAK,GAAG,EAAEL,MAAM,CAACK,MAAM,GAAG,QAAQ;;MAEpFX,KAAI,CAACY,UAAU,CAACC,OAAO,CAACb,KAAI,CAACc,UAAU,CAACR,MAAM,CAACI,MAAgB,CAAC,CAAC;MACjEV,KAAI,CAACY,UAAU,CAACG,IAAI,CAACf,KAAI,CAACc,UAAU,CAACR,MAAM,CAACK,MAAgB,CAAC,CAAC;;IAChE;IAQOhB,OAAA,CAAAqB,SAAA,CAAAF,UAAU,GAAjB,UAAkBG,IAAY;MAC5B,IAAMZ,IAAI,GAAG,IAAI,CAACa,IAAI,CAAC,IAAI,CAACC,OAAO,CAACF,IAAI,CAAC,CAAC;MAC1CZ,IAAI,CAACe,MAAM,GAAG,IAAI;MAClB,OAAOf,IAAI;IACb,CAAC;IACH,OAAAV,OAAC;EAAD,CAAC,CA9BoBH,IAAI;AAgC3B;AAlCA6B,OAAA,CAAA9B,aAAA,GAAAA,aAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}