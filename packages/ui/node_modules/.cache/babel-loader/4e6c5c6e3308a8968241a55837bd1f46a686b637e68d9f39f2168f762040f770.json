{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EquationItem = exports.EqnArrayItem = exports.ArrayItem = exports.DotsItem = exports.NonscriptItem = exports.NotItem = exports.FnItem = exports.MmlItem = exports.CellItem = exports.PositionItem = exports.StyleItem = exports.EndItem = exports.BeginItem = exports.RightItem = exports.Middle = exports.LeftItem = exports.OverItem = exports.SubsupItem = exports.PrimeItem = exports.CloseItem = exports.OpenItem = exports.StopItem = exports.StartItem = void 0;\nvar MapHandler_js_1 = require(\"../MapHandler.js\");\nvar Entities_js_1 = require(\"../../../util/Entities.js\");\nvar MmlNode_js_1 = require(\"../../../core/MmlTree/MmlNode.js\");\nvar TexError_js_1 = __importDefault(require(\"../TexError.js\"));\nvar ParseUtil_js_1 = __importDefault(require(\"../ParseUtil.js\"));\nvar NodeUtil_js_1 = __importDefault(require(\"../NodeUtil.js\"));\nvar StackItem_js_1 = require(\"../StackItem.js\");\nvar StartItem = function (_super) {\n  __extends(StartItem, _super);\n  function StartItem(factory, global) {\n    var _this = _super.call(this, factory) || this;\n    _this.global = global;\n    return _this;\n  }\n  Object.defineProperty(StartItem.prototype, \"kind\", {\n    get: function () {\n      return 'start';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StartItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StartItem.prototype.checkItem = function (item) {\n    if (item.isKind('stop')) {\n      var node = this.toMml();\n      if (!this.global.isInner) {\n        node = this.factory.configuration.tags.finalize(node, this.env);\n      }\n      return [[this.factory.create('mml', node)], true];\n    }\n    return _super.prototype.checkItem.call(this, item);\n  };\n  return StartItem;\n}(StackItem_js_1.BaseItem);\nexports.StartItem = StartItem;\nvar StopItem = function (_super) {\n  __extends(StopItem, _super);\n  function StopItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(StopItem.prototype, \"kind\", {\n    get: function () {\n      return 'stop';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StopItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return StopItem;\n}(StackItem_js_1.BaseItem);\nexports.StopItem = StopItem;\nvar OpenItem = function (_super) {\n  __extends(OpenItem, _super);\n  function OpenItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(OpenItem.prototype, \"kind\", {\n    get: function () {\n      return 'open';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OpenItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  OpenItem.prototype.checkItem = function (item) {\n    if (item.isKind('close')) {\n      var mml = this.toMml();\n      var node = this.create('node', 'TeXAtom', [mml]);\n      return [[this.factory.create('mml', node)], true];\n    }\n    return _super.prototype.checkItem.call(this, item);\n  };\n  OpenItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n    'stop': ['ExtraOpenMissingClose', 'Extra open brace or missing close brace']\n  });\n  return OpenItem;\n}(StackItem_js_1.BaseItem);\nexports.OpenItem = OpenItem;\nvar CloseItem = function (_super) {\n  __extends(CloseItem, _super);\n  function CloseItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(CloseItem.prototype, \"kind\", {\n    get: function () {\n      return 'close';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CloseItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return CloseItem;\n}(StackItem_js_1.BaseItem);\nexports.CloseItem = CloseItem;\nvar PrimeItem = function (_super) {\n  __extends(PrimeItem, _super);\n  function PrimeItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(PrimeItem.prototype, \"kind\", {\n    get: function () {\n      return 'prime';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  PrimeItem.prototype.checkItem = function (item) {\n    var _a = __read(this.Peek(2), 2),\n      top0 = _a[0],\n      top1 = _a[1];\n    if (!NodeUtil_js_1.default.isType(top0, 'msubsup') || NodeUtil_js_1.default.isType(top0, 'msup')) {\n      var node = this.create('node', 'msup', [top0, top1]);\n      return [[node, item], true];\n    }\n    NodeUtil_js_1.default.setChild(top0, top0.sup, top1);\n    return [[top0, item], true];\n  };\n  return PrimeItem;\n}(StackItem_js_1.BaseItem);\nexports.PrimeItem = PrimeItem;\nvar SubsupItem = function (_super) {\n  __extends(SubsupItem, _super);\n  function SubsupItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(SubsupItem.prototype, \"kind\", {\n    get: function () {\n      return 'subsup';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  SubsupItem.prototype.checkItem = function (item) {\n    if (item.isKind('open') || item.isKind('left')) {\n      return StackItem_js_1.BaseItem.success;\n    }\n    var top = this.First;\n    var position = this.getProperty('position');\n    if (item.isKind('mml')) {\n      if (this.getProperty('primes')) {\n        if (position !== 2) {\n          NodeUtil_js_1.default.setChild(top, 2, this.getProperty('primes'));\n        } else {\n          NodeUtil_js_1.default.setProperty(this.getProperty('primes'), 'variantForm', true);\n          var node = this.create('node', 'mrow', [this.getProperty('primes'), item.First]);\n          item.First = node;\n        }\n      }\n      NodeUtil_js_1.default.setChild(top, position, item.First);\n      if (this.getProperty('movesupsub') != null) {\n        NodeUtil_js_1.default.setProperty(top, 'movesupsub', this.getProperty('movesupsub'));\n      }\n      var result = this.factory.create('mml', top);\n      return [[result], true];\n    }\n    if (_super.prototype.checkItem.call(this, item)[1]) {\n      var error = this.getErrors(['', 'sub', 'sup'][position]);\n      throw new (TexError_js_1.default.bind.apply(TexError_js_1.default, __spreadArray([void 0, error[0], error[1]], __read(error.splice(2)), false)))();\n    }\n    return null;\n  };\n  SubsupItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n    'stop': ['MissingScript', 'Missing superscript or subscript argument'],\n    'sup': ['MissingOpenForSup', 'Missing open brace for superscript'],\n    'sub': ['MissingOpenForSub', 'Missing open brace for subscript']\n  });\n  return SubsupItem;\n}(StackItem_js_1.BaseItem);\nexports.SubsupItem = SubsupItem;\nvar OverItem = function (_super) {\n  __extends(OverItem, _super);\n  function OverItem(factory) {\n    var _this = _super.call(this, factory) || this;\n    _this.setProperty('name', '\\\\over');\n    return _this;\n  }\n  Object.defineProperty(OverItem.prototype, \"kind\", {\n    get: function () {\n      return 'over';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OverItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  OverItem.prototype.checkItem = function (item) {\n    if (item.isKind('over')) {\n      throw new TexError_js_1.default('AmbiguousUseOf', 'Ambiguous use of %1', item.getName());\n    }\n    if (item.isClose) {\n      var mml = this.create('node', 'mfrac', [this.getProperty('num'), this.toMml(false)]);\n      if (this.getProperty('thickness') != null) {\n        NodeUtil_js_1.default.setAttribute(mml, 'linethickness', this.getProperty('thickness'));\n      }\n      if (this.getProperty('open') || this.getProperty('close')) {\n        NodeUtil_js_1.default.setProperty(mml, 'withDelims', true);\n        mml = ParseUtil_js_1.default.fixedFence(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));\n      }\n      return [[this.factory.create('mml', mml), item], true];\n    }\n    return _super.prototype.checkItem.call(this, item);\n  };\n  OverItem.prototype.toString = function () {\n    return 'over[' + this.getProperty('num') + ' / ' + this.nodes.join('; ') + ']';\n  };\n  return OverItem;\n}(StackItem_js_1.BaseItem);\nexports.OverItem = OverItem;\nvar LeftItem = function (_super) {\n  __extends(LeftItem, _super);\n  function LeftItem(factory, delim) {\n    var _this = _super.call(this, factory) || this;\n    _this.setProperty('delim', delim);\n    return _this;\n  }\n  Object.defineProperty(LeftItem.prototype, \"kind\", {\n    get: function () {\n      return 'left';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(LeftItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  LeftItem.prototype.checkItem = function (item) {\n    if (item.isKind('right')) {\n      return [[this.factory.create('mml', ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('delim'), this.toMml(), item.getProperty('delim'), '', item.getProperty('color')))], true];\n    }\n    if (item.isKind('middle')) {\n      var def = {\n        stretchy: true\n      };\n      if (item.getProperty('color')) {\n        def.mathcolor = item.getProperty('color');\n      }\n      this.Push(this.create('node', 'TeXAtom', [], {\n        texClass: MmlNode_js_1.TEXCLASS.CLOSE\n      }), this.create('token', 'mo', def, item.getProperty('delim')), this.create('node', 'TeXAtom', [], {\n        texClass: MmlNode_js_1.TEXCLASS.OPEN\n      }));\n      this.env = {};\n      return [[this], true];\n    }\n    return _super.prototype.checkItem.call(this, item);\n  };\n  LeftItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n    'stop': ['ExtraLeftMissingRight', 'Extra \\\\left or missing \\\\right']\n  });\n  return LeftItem;\n}(StackItem_js_1.BaseItem);\nexports.LeftItem = LeftItem;\nvar Middle = function (_super) {\n  __extends(Middle, _super);\n  function Middle(factory, delim, color) {\n    var _this = _super.call(this, factory) || this;\n    _this.setProperty('delim', delim);\n    color && _this.setProperty('color', color);\n    return _this;\n  }\n  Object.defineProperty(Middle.prototype, \"kind\", {\n    get: function () {\n      return 'middle';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Middle.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Middle;\n}(StackItem_js_1.BaseItem);\nexports.Middle = Middle;\nvar RightItem = function (_super) {\n  __extends(RightItem, _super);\n  function RightItem(factory, delim, color) {\n    var _this = _super.call(this, factory) || this;\n    _this.setProperty('delim', delim);\n    color && _this.setProperty('color', color);\n    return _this;\n  }\n  Object.defineProperty(RightItem.prototype, \"kind\", {\n    get: function () {\n      return 'right';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RightItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return RightItem;\n}(StackItem_js_1.BaseItem);\nexports.RightItem = RightItem;\nvar BeginItem = function (_super) {\n  __extends(BeginItem, _super);\n  function BeginItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(BeginItem.prototype, \"kind\", {\n    get: function () {\n      return 'begin';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BeginItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  BeginItem.prototype.checkItem = function (item) {\n    if (item.isKind('end')) {\n      if (item.getName() !== this.getName()) {\n        throw new TexError_js_1.default('EnvBadEnd', '\\\\begin{%1} ended with \\\\end{%2}', this.getName(), item.getName());\n      }\n      if (!this.getProperty('end')) {\n        return [[this.factory.create('mml', this.toMml())], true];\n      }\n      return StackItem_js_1.BaseItem.fail;\n    }\n    if (item.isKind('stop')) {\n      throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    return _super.prototype.checkItem.call(this, item);\n  };\n  return BeginItem;\n}(StackItem_js_1.BaseItem);\nexports.BeginItem = BeginItem;\nvar EndItem = function (_super) {\n  __extends(EndItem, _super);\n  function EndItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(EndItem.prototype, \"kind\", {\n    get: function () {\n      return 'end';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EndItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return EndItem;\n}(StackItem_js_1.BaseItem);\nexports.EndItem = EndItem;\nvar StyleItem = function (_super) {\n  __extends(StyleItem, _super);\n  function StyleItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(StyleItem.prototype, \"kind\", {\n    get: function () {\n      return 'style';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StyleItem.prototype.checkItem = function (item) {\n    if (!item.isClose) {\n      return _super.prototype.checkItem.call(this, item);\n    }\n    var mml = this.create('node', 'mstyle', this.nodes, this.getProperty('styles'));\n    return [[this.factory.create('mml', mml), item], true];\n  };\n  return StyleItem;\n}(StackItem_js_1.BaseItem);\nexports.StyleItem = StyleItem;\nvar PositionItem = function (_super) {\n  __extends(PositionItem, _super);\n  function PositionItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(PositionItem.prototype, \"kind\", {\n    get: function () {\n      return 'position';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  PositionItem.prototype.checkItem = function (item) {\n    if (item.isClose) {\n      throw new TexError_js_1.default('MissingBoxFor', 'Missing box for %1', this.getName());\n    }\n    if (item.isFinal) {\n      var mml = item.toMml();\n      switch (this.getProperty('move')) {\n        case 'vertical':\n          mml = this.create('node', 'mpadded', [mml], {\n            height: this.getProperty('dh'),\n            depth: this.getProperty('dd'),\n            voffset: this.getProperty('dh')\n          });\n          return [[this.factory.create('mml', mml)], true];\n        case 'horizontal':\n          return [[this.factory.create('mml', this.getProperty('left')), item, this.factory.create('mml', this.getProperty('right'))], true];\n      }\n    }\n    return _super.prototype.checkItem.call(this, item);\n  };\n  return PositionItem;\n}(StackItem_js_1.BaseItem);\nexports.PositionItem = PositionItem;\nvar CellItem = function (_super) {\n  __extends(CellItem, _super);\n  function CellItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(CellItem.prototype, \"kind\", {\n    get: function () {\n      return 'cell';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CellItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return CellItem;\n}(StackItem_js_1.BaseItem);\nexports.CellItem = CellItem;\nvar MmlItem = function (_super) {\n  __extends(MmlItem, _super);\n  function MmlItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(MmlItem.prototype, \"isFinal\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlItem.prototype, \"kind\", {\n    get: function () {\n      return 'mml';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return MmlItem;\n}(StackItem_js_1.BaseItem);\nexports.MmlItem = MmlItem;\nvar FnItem = function (_super) {\n  __extends(FnItem, _super);\n  function FnItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(FnItem.prototype, \"kind\", {\n    get: function () {\n      return 'fn';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  FnItem.prototype.checkItem = function (item) {\n    var top = this.First;\n    if (top) {\n      if (item.isOpen) {\n        return StackItem_js_1.BaseItem.success;\n      }\n      if (!item.isKind('fn')) {\n        var mml = item.First;\n        if (!item.isKind('mml') || !mml) {\n          return [[top, item], true];\n        }\n        if (NodeUtil_js_1.default.isType(mml, 'mstyle') && mml.childNodes.length && NodeUtil_js_1.default.isType(mml.childNodes[0].childNodes[0], 'mspace') || NodeUtil_js_1.default.isType(mml, 'mspace')) {\n          return [[top, item], true];\n        }\n        if (NodeUtil_js_1.default.isEmbellished(mml)) {\n          mml = NodeUtil_js_1.default.getCoreMO(mml);\n        }\n        var form = NodeUtil_js_1.default.getForm(mml);\n        if (form != null && [0, 0, 1, 1, 0, 1, 1, 0, 0, 0][form[2]]) {\n          return [[top, item], true];\n        }\n      }\n      var node = this.create('token', 'mo', {\n        texClass: MmlNode_js_1.TEXCLASS.NONE\n      }, Entities_js_1.entities.ApplyFunction);\n      return [[top, node, item], true];\n    }\n    return _super.prototype.checkItem.apply(this, arguments);\n  };\n  return FnItem;\n}(StackItem_js_1.BaseItem);\nexports.FnItem = FnItem;\nvar NotItem = function (_super) {\n  __extends(NotItem, _super);\n  function NotItem() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.remap = MapHandler_js_1.MapHandler.getMap('not_remap');\n    return _this;\n  }\n  Object.defineProperty(NotItem.prototype, \"kind\", {\n    get: function () {\n      return 'not';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  NotItem.prototype.checkItem = function (item) {\n    var mml;\n    var c;\n    var textNode;\n    if (item.isKind('open') || item.isKind('left')) {\n      return StackItem_js_1.BaseItem.success;\n    }\n    if (item.isKind('mml') && (NodeUtil_js_1.default.isType(item.First, 'mo') || NodeUtil_js_1.default.isType(item.First, 'mi') || NodeUtil_js_1.default.isType(item.First, 'mtext'))) {\n      mml = item.First;\n      c = NodeUtil_js_1.default.getText(mml);\n      if (c.length === 1 && !NodeUtil_js_1.default.getProperty(mml, 'movesupsub') && NodeUtil_js_1.default.getChildren(mml).length === 1) {\n        if (this.remap.contains(c)) {\n          textNode = this.create('text', this.remap.lookup(c).char);\n          NodeUtil_js_1.default.setChild(mml, 0, textNode);\n        } else {\n          textNode = this.create('text', '\\u0338');\n          NodeUtil_js_1.default.appendChildren(mml, [textNode]);\n        }\n        return [[item], true];\n      }\n    }\n    textNode = this.create('text', '\\u29F8');\n    var mtextNode = this.create('node', 'mtext', [], {}, textNode);\n    var paddedNode = this.create('node', 'mpadded', [mtextNode], {\n      width: 0\n    });\n    mml = this.create('node', 'TeXAtom', [paddedNode], {\n      texClass: MmlNode_js_1.TEXCLASS.REL\n    });\n    return [[mml, item], true];\n  };\n  return NotItem;\n}(StackItem_js_1.BaseItem);\nexports.NotItem = NotItem;\nvar NonscriptItem = function (_super) {\n  __extends(NonscriptItem, _super);\n  function NonscriptItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(NonscriptItem.prototype, \"kind\", {\n    get: function () {\n      return 'nonscript';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  NonscriptItem.prototype.checkItem = function (item) {\n    if (item.isKind('mml') && item.Size() === 1) {\n      var mml = item.First;\n      if (mml.isKind('mstyle') && mml.notParent) {\n        mml = NodeUtil_js_1.default.getChildren(NodeUtil_js_1.default.getChildren(mml)[0])[0];\n      }\n      if (mml.isKind('mspace')) {\n        if (mml !== item.First) {\n          var mrow = this.create('node', 'mrow', [item.Pop()]);\n          item.Push(mrow);\n        }\n        this.factory.configuration.addNode('nonscript', item.First);\n      }\n    }\n    return [[item], true];\n  };\n  return NonscriptItem;\n}(StackItem_js_1.BaseItem);\nexports.NonscriptItem = NonscriptItem;\nvar DotsItem = function (_super) {\n  __extends(DotsItem, _super);\n  function DotsItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(DotsItem.prototype, \"kind\", {\n    get: function () {\n      return 'dots';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  DotsItem.prototype.checkItem = function (item) {\n    if (item.isKind('open') || item.isKind('left')) {\n      return StackItem_js_1.BaseItem.success;\n    }\n    var dots = this.getProperty('ldots');\n    var top = item.First;\n    if (item.isKind('mml') && NodeUtil_js_1.default.isEmbellished(top)) {\n      var tclass = NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(top));\n      if (tclass === MmlNode_js_1.TEXCLASS.BIN || tclass === MmlNode_js_1.TEXCLASS.REL) {\n        dots = this.getProperty('cdots');\n      }\n    }\n    return [[dots, item], true];\n  };\n  return DotsItem;\n}(StackItem_js_1.BaseItem);\nexports.DotsItem = DotsItem;\nvar ArrayItem = function (_super) {\n  __extends(ArrayItem, _super);\n  function ArrayItem() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.table = [];\n    _this.row = [];\n    _this.frame = [];\n    _this.hfill = [];\n    _this.arraydef = {};\n    _this.dashed = false;\n    return _this;\n  }\n  Object.defineProperty(ArrayItem.prototype, \"kind\", {\n    get: function () {\n      return 'array';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ArrayItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ArrayItem.prototype, \"copyEnv\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ArrayItem.prototype.checkItem = function (item) {\n    if (item.isClose && !item.isKind('over')) {\n      if (item.getProperty('isEntry')) {\n        this.EndEntry();\n        this.clearEnv();\n        return StackItem_js_1.BaseItem.fail;\n      }\n      if (item.getProperty('isCR')) {\n        this.EndEntry();\n        this.EndRow();\n        this.clearEnv();\n        return StackItem_js_1.BaseItem.fail;\n      }\n      this.EndTable();\n      this.clearEnv();\n      var newItem = this.factory.create('mml', this.createMml());\n      if (this.getProperty('requireClose')) {\n        if (item.isKind('close')) {\n          return [[newItem], true];\n        }\n        throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');\n      }\n      return [[newItem, item], true];\n    }\n    return _super.prototype.checkItem.call(this, item);\n  };\n  ArrayItem.prototype.createMml = function () {\n    var scriptlevel = this.arraydef['scriptlevel'];\n    delete this.arraydef['scriptlevel'];\n    var mml = this.create('node', 'mtable', this.table, this.arraydef);\n    if (scriptlevel) {\n      mml.setProperty('scriptlevel', scriptlevel);\n    }\n    if (this.frame.length === 4) {\n      NodeUtil_js_1.default.setAttribute(mml, 'frame', this.dashed ? 'dashed' : 'solid');\n    } else if (this.frame.length) {\n      if (this.arraydef['rowlines']) {\n        this.arraydef['rowlines'] = this.arraydef['rowlines'].replace(/none( none)+$/, 'none');\n      }\n      NodeUtil_js_1.default.setAttribute(mml, 'frame', '');\n      mml = this.create('node', 'menclose', [mml], {\n        notation: this.frame.join(' ')\n      });\n      if ((this.arraydef['columnlines'] || 'none') !== 'none' || (this.arraydef['rowlines'] || 'none') !== 'none') {\n        NodeUtil_js_1.default.setAttribute(mml, 'data-padding', 0);\n      }\n    }\n    if (this.getProperty('open') || this.getProperty('close')) {\n      mml = ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));\n    }\n    return mml;\n  };\n  ArrayItem.prototype.EndEntry = function () {\n    var mtd = this.create('node', 'mtd', this.nodes);\n    if (this.hfill.length) {\n      if (this.hfill[0] === 0) {\n        NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', 'right');\n      }\n      if (this.hfill[this.hfill.length - 1] === this.Size()) {\n        NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', NodeUtil_js_1.default.getAttribute(mtd, 'columnalign') ? 'center' : 'left');\n      }\n    }\n    this.row.push(mtd);\n    this.Clear();\n    this.hfill = [];\n  };\n  ArrayItem.prototype.EndRow = function () {\n    var node;\n    if (this.getProperty('isNumbered') && this.row.length === 3) {\n      this.row.unshift(this.row.pop());\n      node = this.create('node', 'mlabeledtr', this.row);\n    } else {\n      node = this.create('node', 'mtr', this.row);\n    }\n    this.table.push(node);\n    this.row = [];\n  };\n  ArrayItem.prototype.EndTable = function () {\n    if (this.Size() || this.row.length) {\n      this.EndEntry();\n      this.EndRow();\n    }\n    this.checkLines();\n  };\n  ArrayItem.prototype.checkLines = function () {\n    if (this.arraydef['rowlines']) {\n      var lines = this.arraydef['rowlines'].split(/ /);\n      if (lines.length === this.table.length) {\n        this.frame.push('bottom');\n        lines.pop();\n        this.arraydef['rowlines'] = lines.join(' ');\n      } else if (lines.length < this.table.length - 1) {\n        this.arraydef['rowlines'] += ' none';\n      }\n    }\n    if (this.getProperty('rowspacing')) {\n      var rows = this.arraydef['rowspacing'].split(/ /);\n      while (rows.length < this.table.length) {\n        rows.push(this.getProperty('rowspacing') + 'em');\n      }\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  };\n  ArrayItem.prototype.addRowSpacing = function (spacing) {\n    if (this.arraydef['rowspacing']) {\n      var rows = this.arraydef['rowspacing'].split(/ /);\n      if (!this.getProperty('rowspacing')) {\n        var dimem = ParseUtil_js_1.default.dimen2em(rows[0]);\n        this.setProperty('rowspacing', dimem);\n      }\n      var rowspacing = this.getProperty('rowspacing');\n      while (rows.length < this.table.length) {\n        rows.push(ParseUtil_js_1.default.Em(rowspacing));\n      }\n      rows[this.table.length - 1] = ParseUtil_js_1.default.Em(Math.max(0, rowspacing + ParseUtil_js_1.default.dimen2em(spacing)));\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  };\n  return ArrayItem;\n}(StackItem_js_1.BaseItem);\nexports.ArrayItem = ArrayItem;\nvar EqnArrayItem = function (_super) {\n  __extends(EqnArrayItem, _super);\n  function EqnArrayItem(factory) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var _this = _super.call(this, factory) || this;\n    _this.maxrow = 0;\n    _this.factory.configuration.tags.start(args[0], args[2], args[1]);\n    return _this;\n  }\n  Object.defineProperty(EqnArrayItem.prototype, \"kind\", {\n    get: function () {\n      return 'eqnarray';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  EqnArrayItem.prototype.EndEntry = function () {\n    if (this.row.length) {\n      ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);\n    }\n    var node = this.create('node', 'mtd', this.nodes);\n    this.row.push(node);\n    this.Clear();\n  };\n  EqnArrayItem.prototype.EndRow = function () {\n    if (this.row.length > this.maxrow) {\n      this.maxrow = this.row.length;\n    }\n    var mtr = 'mtr';\n    var tag = this.factory.configuration.tags.getTag();\n    if (tag) {\n      this.row = [tag].concat(this.row);\n      mtr = 'mlabeledtr';\n    }\n    this.factory.configuration.tags.clearTag();\n    var node = this.create('node', mtr, this.row);\n    this.table.push(node);\n    this.row = [];\n  };\n  EqnArrayItem.prototype.EndTable = function () {\n    _super.prototype.EndTable.call(this);\n    this.factory.configuration.tags.end();\n    this.extendArray('columnalign', this.maxrow);\n    this.extendArray('columnwidth', this.maxrow);\n    this.extendArray('columnspacing', this.maxrow - 1);\n  };\n  EqnArrayItem.prototype.extendArray = function (name, max) {\n    if (!this.arraydef[name]) return;\n    var repeat = this.arraydef[name].split(/ /);\n    var columns = __spreadArray([], __read(repeat), false);\n    if (columns.length > 1) {\n      while (columns.length < max) {\n        columns.push.apply(columns, __spreadArray([], __read(repeat), false));\n      }\n      this.arraydef[name] = columns.slice(0, max).join(' ');\n    }\n  };\n  return EqnArrayItem;\n}(ArrayItem);\nexports.EqnArrayItem = EqnArrayItem;\nvar EquationItem = function (_super) {\n  __extends(EquationItem, _super);\n  function EquationItem(factory) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var _this = _super.call(this, factory) || this;\n    _this.factory.configuration.tags.start('equation', true, args[0]);\n    return _this;\n  }\n  Object.defineProperty(EquationItem.prototype, \"kind\", {\n    get: function () {\n      return 'equation';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EquationItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  EquationItem.prototype.checkItem = function (item) {\n    if (item.isKind('end')) {\n      var mml = this.toMml();\n      var tag = this.factory.configuration.tags.getTag();\n      this.factory.configuration.tags.end();\n      return [[tag ? this.factory.configuration.tags.enTag(mml, tag) : mml, item], true];\n    }\n    if (item.isKind('stop')) {\n      throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    return _super.prototype.checkItem.call(this, item);\n  };\n  return EquationItem;\n}(StackItem_js_1.BaseItem);\nexports.EquationItem = EquationItem;","map":{"version":3,"names":["MapHandler_js_1","require","Entities_js_1","MmlNode_js_1","TexError_js_1","__importDefault","ParseUtil_js_1","NodeUtil_js_1","StackItem_js_1","StartItem","_super","__extends","factory","global","_this","call","Object","defineProperty","prototype","get","checkItem","item","isKind","node","toMml","isInner","configuration","tags","finalize","env","create","BaseItem","exports","StopItem","OpenItem","mml","errors","assign","CloseItem","PrimeItem","_a","__read","Peek","top0","top1","default","isType","setChild","sup","SubsupItem","success","top","First","position","getProperty","setProperty","result","error","getErrors","bind","apply","__spreadArray","splice","OverItem","getName","isClose","setAttribute","fixedFence","toString","nodes","join","LeftItem","delim","fenced","def","stretchy","mathcolor","Push","texClass","TEXCLASS","CLOSE","OPEN","Middle","color","RightItem","BeginItem","fail","EndItem","StyleItem","PositionItem","isFinal","height","depth","voffset","CellItem","MmlItem","FnItem","isOpen","childNodes","length","isEmbellished","getCoreMO","form","getForm","NONE","entities","ApplyFunction","arguments","NotItem","remap","MapHandler","getMap","c","textNode","getText","getChildren","contains","lookup","char","appendChildren","mtextNode","paddedNode","width","REL","NonscriptItem","Size","notParent","mrow","Pop","addNode","DotsItem","dots","tclass","getTexClass","BIN","ArrayItem","table","row","frame","hfill","arraydef","dashed","EndEntry","clearEnv","EndRow","EndTable","newItem","createMml","scriptlevel","replace","notation","mtd","getAttribute","push","Clear","unshift","pop","checkLines","lines","split","rows","addRowSpacing","spacing","dimem","dimen2em","rowspacing","Em","Math","max","EqnArrayItem","args","_i","maxrow","start","fixInitialMO","mtr","tag","getTag","concat","clearTag","end","extendArray","name","repeat","columns","slice","EquationItem","enTag"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/base/BaseItems.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Stack items for basic Tex parsing.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {MapHandler} from '../MapHandler.js';\nimport {CharacterMap} from '../SymbolMap.js';\nimport {entities} from '../../../util/Entities.js';\nimport {MmlNode, TextNode, TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMsubsup} from '../../../core/MmlTree/MmlNodes/msubsup.js';\nimport TexError from '../TexError.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {Property} from '../../../core/Tree/Node.js';\nimport StackItemFactory from '../StackItemFactory.js';\nimport {CheckType, BaseItem, StackItem, EnvList} from '../StackItem.js';\n\n\n/**\n * Initial item on the stack. It's pushed when parsing begins.\n */\nexport class StartItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, public global: EnvList) {\n    super(factory);\n  }\n\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'start';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('stop')) {\n      let node = this.toMml();\n      if (!this.global.isInner) {\n        node = this.factory.configuration.tags.finalize(node, this.env);\n      }\n      return [[this.factory.create('mml', node)], true];\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n\n/**\n * Final item on the stack. Errors will be thrown if other items than the start\n * item are still on the stack.\n */\nexport class StopItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'stop';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item indicating an open brace.\n */\nexport class OpenItem extends BaseItem {\n\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test ExtraOpenMissingClose\n    'stop': ['ExtraOpenMissingClose',\n             'Extra open brace or missing close brace']\n  });\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'open';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('close')) {\n      // @test PrimeSup\n      let mml = this.toMml();\n      const node = this.create('node', 'TeXAtom', [mml]);\n      return [[this.factory.create('mml', node)], true];\n    }\n    return super.checkItem(item);\n  }\n}\n\n\n/**\n * Item indicating a close brace. Collapses stack until an OpenItem is found.\n */\nexport class CloseItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'close';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item indicating an we are currently dealing with a prime mark.\n */\nexport class PrimeItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'prime';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    let [top0, top1] = this.Peek(2);\n    if (!NodeUtil.isType(top0, 'msubsup') || NodeUtil.isType(top0, 'msup')) {\n      // @test Prime, Double Prime\n      const node = this.create('node', 'msup', [top0, top1]);\n      return [[node, item], true];\n    }\n    NodeUtil.setChild(top0, (top0 as MmlMsubsup).sup, top1);\n    return [[top0, item], true];\n  }\n}\n\n\n/**\n * Item indicating an we are currently dealing with a sub/superscript\n * expression.\n */\nexport class SubsupItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test MissingScript Sub, MissingScript Sup\n    'stop': ['MissingScript',\n             'Missing superscript or subscript argument'],\n    // @test MissingOpenForSup\n    'sup': ['MissingOpenForSup',\n            'Missing open brace for superscript'],\n    // @test MissingOpenForSub\n    'sub': ['MissingOpenForSub',\n            'Missing open brace for subscript']\n  });\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'subsup';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType | null {\n    if (item.isKind('open') || item.isKind('left')) {\n      return BaseItem.success;\n    }\n    const top = this.First;\n    const position = this.getProperty('position') as number;\n    if (item.isKind('mml')) {\n      if (this.getProperty('primes')) {\n        if (position !== 2) {\n          // @test Prime on Sub\n          NodeUtil.setChild(top, 2, this.getProperty('primes') as MmlNode);\n        } else {\n          // @test Prime on Prime\n          NodeUtil.setProperty(this.getProperty('primes') as MmlNode, 'variantForm', true);\n          const node = this.create('node', 'mrow', [this.getProperty('primes') as MmlNode, item.First]);\n          item.First = node;\n        }\n      }\n      NodeUtil.setChild(top, position, item.First);\n      if (this.getProperty('movesupsub') != null) {\n        // @test Limits Subsup (currently does not work! Check again!)\n        NodeUtil.setProperty(top, 'movesupsub', this.getProperty('movesupsub') as Property);\n      }\n      const result = this.factory.create('mml', top);\n      return [[result], true];\n    }\n    if (super.checkItem(item)[1]) {\n      // @test Brace Superscript Error, MissingOpenForSup, MissingOpenForSub\n      const error = this.getErrors(['', 'sub', 'sup'][position]);\n      throw new TexError(error[0], error[1], ...error.splice(2));\n    }\n    return null;\n  }\n\n}\n\n\n/**\n * Item indicating an we are currently dealing with an \\\\over command.\n */\nexport class OverItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory) {\n    super(factory);\n    this.setProperty('name', '\\\\over');\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'over';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('over')) {\n      // @test Double Over\n      throw new TexError(\n        'AmbiguousUseOf', 'Ambiguous use of %1', item.getName());\n    }\n    if (item.isClose) {\n      // @test Over\n      let mml = this.create('node',\n                            'mfrac', [this.getProperty('num') as MmlNode, this.toMml(false)]);\n      if (this.getProperty('thickness') != null) {\n        // @test Choose, Above, Above with Delims\n        NodeUtil.setAttribute(mml, 'linethickness',\n                              this.getProperty('thickness') as string);\n      }\n      if (this.getProperty('open') || this.getProperty('close')) {\n        // @test Choose\n        NodeUtil.setProperty(mml, 'withDelims', true);\n        mml = ParseUtil.fixedFence(this.factory.configuration,\n                                   this.getProperty('open') as string, mml,\n                                   this.getProperty('close') as string);\n      }\n      return [[this.factory.create('mml', mml), item], true];\n    }\n    return super.checkItem(item);\n  }\n\n\n  /**\n   * @override\n   */\n  public toString() {\n    return 'over[' + this.getProperty('num') +\n      ' / ' + this.nodes.join('; ') + ']';\n  }\n\n}\n\n\n/**\n * Item pushed when a \\\\left opening delimiter has been found.\n */\nexport class LeftItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test ExtraLeftMissingRight\n    'stop': ['ExtraLeftMissingRight',\n             'Extra \\\\left or missing \\\\right']\n  });\n\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'left';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    // @test Missing Right\n    if (item.isKind('right')) {\n      //\n      //  Create the fenced structure as an mrow\n      //\n      return [[this.factory.create('mml', ParseUtil.fenced(\n        this.factory.configuration,\n        this.getProperty('delim') as string, this.toMml(),\n        item.getProperty('delim') as string, '', item.getProperty('color') as string))], true];\n    }\n    if (item.isKind('middle')) {\n      //\n      //  Add the middle delimiter, with empty open and close elements around it for spacing\n      //\n      const def = {stretchy: true} as any;\n      if (item.getProperty('color')) {\n        def.mathcolor = item.getProperty('color');\n      }\n      this.Push(\n        this.create('node', 'TeXAtom', [], {texClass: TEXCLASS.CLOSE}),\n        this.create('token', 'mo', def, item.getProperty('delim')),\n        this.create('node', 'TeXAtom', [], {texClass: TEXCLASS.OPEN})\n      );\n      this.env = {};         // Since \\middle closes the group, clear the environment\n      return [[this], true]; // this will reset the environment to its initial state\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n/**\n * Item pushed when a \\\\middle delimiter has been found. Stack is\n * collapsed until a corresponding LeftItem is encountered.\n */\nexport class Middle extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string, color: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n    color && this.setProperty('color', color);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'middle';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n/**\n * Item pushed when a \\\\right closing delimiter has been found. Stack is\n * collapsed until a corresponding LeftItem is encountered.\n */\nexport class RightItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string, color: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n    color && this.setProperty('color', color);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'right';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item pushed for opening an environment with \\\\begin{env}.\n */\nexport class BeginItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'begin';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end')) {\n      if (item.getName() !== this.getName()) {\n        // @test EnvBadEnd\n        throw new TexError('EnvBadEnd', '\\\\begin{%1} ended with \\\\end{%2}',\n                           this.getName(), item.getName());\n      }\n      if (!this.getProperty('end')) {\n        // @test Hfill\n        return [[this.factory.create('mml', this.toMml())], true];\n      }\n      return BaseItem.fail;  // TODO: This case could probably go!\n    }\n    if (item.isKind('stop')) {\n      // @test EnvMissingEnd Array\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n\n/**\n * Item pushed for closing an environment with \\\\end{env}. Stack is collapsed\n * until a corresponding BeginItem for 'env' is found. Error is thrown in case\n * other open environments interfere.\n */\nexport class EndItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'end';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item pushed for remembering styling information.\n */\nexport class StyleItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'style';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (!item.isClose) {\n      return super.checkItem(item);\n    }\n    // @test Style\n    const mml = this.create('node', 'mstyle', this.nodes, this.getProperty('styles'));\n    return [[this.factory.create('mml', mml), item], true];\n  }\n\n}\n\n\n/**\n * Item pushed for remembering positioning information.\n */\nexport class PositionItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'position';\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isClose) {\n      // @test MissingBoxFor\n      throw new TexError('MissingBoxFor', 'Missing box for %1', this.getName());\n    }\n    if (item.isFinal) {\n      let mml = item.toMml();\n      switch (this.getProperty('move')) {\n      case 'vertical':\n        // @test Raise, Lower, Raise Negative, Lower Negative\n        mml = this.create('node', 'mpadded', [mml],\n                          {height: this.getProperty('dh'),\n                           depth: this.getProperty('dd'),\n                           voffset: this.getProperty('dh')});\n        return [[this.factory.create('mml', mml)], true];\n      case 'horizontal':\n        // @test Move Left, Move Right, Move Left Negative, Move Right Negative\n        return [[this.factory.create('mml', this.getProperty('left') as MmlNode), item,\n                 this.factory.create('mml', this.getProperty('right') as MmlNode)], true];\n      }\n    }\n    return super.checkItem(item);\n  }\n}\n\n\n/**\n * Item indicating a table cell.\n */\nexport class CellItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'cell';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n}\n\n\n/**\n * Final item for collating Nodes.\n */\nexport class MmlItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get isFinal() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mml';\n  }\n\n}\n\n\n/**\n * Item indicating a named function operator (e.g., \\\\sin) as been encountered.\n */\nexport class FnItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'fn';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    const top = this.First;\n    if (top) {\n      if (item.isOpen) {\n        // @test Fn Stretchy\n        return BaseItem.success;\n      }\n      if (!item.isKind('fn')) {\n        // @test Named Function\n        let mml = item.First;\n        if (!item.isKind('mml') || !mml) {\n          // @test Mathop Super\n          return [[top, item], true];\n        }\n        if ((NodeUtil.isType(mml, 'mstyle') && mml.childNodes.length &&\n             NodeUtil.isType(mml.childNodes[0].childNodes[0] as MmlNode, 'mspace')) ||\n             NodeUtil.isType(mml, 'mspace')) {\n          // @test Fn Pos Space, Fn Neg Space\n          return [[top, item], true];\n        }\n        if (NodeUtil.isEmbellished(mml)) {\n          // @test MultiInt with Limits\n          mml = NodeUtil.getCoreMO(mml);\n        }\n        const form = NodeUtil.getForm(mml);\n        if (form != null && [0, 0, 1, 1, 0, 1, 1, 0, 0, 0][form[2]]) {\n          // @test Fn Operator\n          return [[top, item], true];\n        }\n      }\n      // @test Named Function, Named Function Arg\n      const node = this.create('token', 'mo', {texClass: TEXCLASS.NONE},\n                               entities.ApplyFunction);\n      return [[top, node, item], true];\n    }\n    // @test Mathop Super, Mathop Sub\n    return super.checkItem.apply(this, arguments);\n  }\n}\n\n\n/**\n * Item indicating a \\\\not has been encountered and needs to be applied to the\n * next operator.\n */\nexport class NotItem extends BaseItem {\n\n  private remap = MapHandler.getMap('not_remap') as CharacterMap;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'not';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    let mml: TextNode | MmlNode;\n    let c: string;\n    let textNode: TextNode;\n    if (item.isKind('open') || item.isKind('left')) {\n      // @test Negation Left Paren\n      return BaseItem.success;\n    }\n    if (item.isKind('mml') &&\n        (NodeUtil.isType(item.First, 'mo') || NodeUtil.isType(item.First, 'mi') ||\n         NodeUtil.isType(item.First, 'mtext'))) {\n      mml = item.First;\n      c = NodeUtil.getText(mml as TextNode);\n      if (c.length === 1 && !NodeUtil.getProperty(mml, 'movesupsub') &&\n          NodeUtil.getChildren(mml).length === 1) {\n        if (this.remap.contains(c)) {\n          // @test Negation Simple, Negation Complex\n          textNode = this.create('text', this.remap.lookup(c).char) as TextNode;\n          NodeUtil.setChild(mml, 0, textNode);\n        } else {\n          // @test Negation Explicit\n          textNode = this.create('text', '\\u0338') as TextNode;\n          NodeUtil.appendChildren(mml, [textNode]);\n        }\n        return [[item], true];\n      }\n    }\n    // @test Negation Large\n    textNode = this.create('text', '\\u29F8') as TextNode;\n    const mtextNode = this.create('node', 'mtext', [], {}, textNode);\n    const paddedNode = this.create('node', 'mpadded', [mtextNode], {width: 0});\n    mml = this.create('node', 'TeXAtom', [paddedNode], {texClass: TEXCLASS.REL});\n    return [[mml, item], true];\n  }\n}\n\n/**\n * A StackItem that removes an mspace that follows it (for \\nonscript).\n */\nexport class NonscriptItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'nonscript';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    //\n    //  Check if the next item is an mspace (or an mspace in an mstyle) and remove it.\n    //\n    if (item.isKind('mml') && item.Size() === 1) {\n      let mml = item.First;\n      //\n      //  Space macros like \\, are wrapped with an mstyle to set scriptlevel=\"0\"\n      //    (so size is independent of level), we look at the contents of the mstyle for the mspace.\n      //\n      if (mml.isKind('mstyle') && mml.notParent) {\n        mml = NodeUtil.getChildren(NodeUtil.getChildren(mml)[0])[0];\n      }\n      if (mml.isKind('mspace')) {\n        //\n        //  If the space is in an mstyle, wrap it in an mrow so we can test its scriptlevel\n        //    in the post-filter (the mrow will be removed in the filter).  We can't test\n        //    the mstyle's scriptlevel, since it is ecxplicitly setting it to 0.\n        //\n        if (mml !== item.First) {\n          const mrow = this.create('node', 'mrow', [item.Pop()]);\n          item.Push(mrow);\n        }\n        //\n        //  Save the mspace for later post-processing.\n        //\n        this.factory.configuration.addNode('nonscript', item.First);\n      }\n    }\n    return [[item], true];\n  }\n}\n\n/**\n * Item indicating a dots command has been encountered.\n */\nexport class DotsItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'dots';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('open') || item.isKind('left')) {\n      return BaseItem.success;\n    }\n    let dots = this.getProperty('ldots') as MmlNode;\n    let top = item.First;\n    // @test Operator Dots\n    if (item.isKind('mml') && NodeUtil.isEmbellished(top)) {\n      const tclass = NodeUtil.getTexClass(NodeUtil.getCoreMO(top));\n      if (tclass === TEXCLASS.BIN || tclass === TEXCLASS.REL) {\n        dots = this.getProperty('cdots') as MmlNode;\n      }\n    }\n    return [[dots, item], true];\n  }\n}\n\n\n/**\n * Item indicating an array is assembled. It collates cells, rows and\n * information about column/row separator and framing lines.\n */\nexport class ArrayItem extends BaseItem {\n\n  /**\n   * The table as a list of rows.\n   * @type {MmlNode[]}\n   */\n  public table: MmlNode[] = [];\n\n  /**\n   * The current row as a list of cells.\n   * @type {MmlNode[]}\n   */\n  public row: MmlNode[] = [];\n\n  /**\n   * Frame specification as a list of strings.\n   * @type {string[]}\n   */\n  public frame: string[] = [];\n\n  /**\n   * Hfill value.\n   * @type {number[]}\n   */\n  public hfill: number[] = [];\n\n  /**\n   * Properties for special array definitions.\n   * @type {{[key: string]: string|number|boolean}}\n   */\n  public arraydef: {[key: string]: string | number | boolean} = {};\n\n  /**\n   * True if separators are dashed.\n   * @type {boolean}\n   */\n  public dashed: boolean = false;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'array';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  get copyEnv() {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    // @test Array Single\n    if (item.isClose && !item.isKind('over')) {\n      // @test Array Single\n      if (item.getProperty('isEntry')) {\n        // @test Array dashed column, Array solid column\n        this.EndEntry();\n        this.clearEnv();\n        return BaseItem.fail;\n      }\n      if (item.getProperty('isCR')) {\n        // @test Enclosed bottom\n        this.EndEntry();\n        this.EndRow();\n        this.clearEnv();\n        return BaseItem.fail;\n      }\n      this.EndTable();\n      this.clearEnv();\n      let newItem = this.factory.create('mml', this.createMml());\n      if (this.getProperty('requireClose')) {\n        // @test: Label\n        if (item.isKind('close')) {\n          // @test: Label\n          return [[newItem], true];\n        }\n        // @test MissingCloseBrace2\n        throw new TexError('MissingCloseBrace', 'Missing close brace');\n      }\n      return [[newItem, item], true];\n    }\n    return super.checkItem(item);\n  }\n\n  /**\n   * Create the MathML representation of the table.\n   *\n   * @return {MmlNode}\n   */\n  public createMml(): MmlNode {\n    const scriptlevel = this.arraydef['scriptlevel'];\n    delete this.arraydef['scriptlevel'];\n    let mml = this.create('node', 'mtable', this.table, this.arraydef);\n    if (scriptlevel) {\n      mml.setProperty('scriptlevel', scriptlevel);\n    }\n    if (this.frame.length === 4) {\n      // @test Enclosed frame solid, Enclosed frame dashed\n      NodeUtil.setAttribute(mml, 'frame', this.dashed ? 'dashed' : 'solid');\n    } else if (this.frame.length) {\n      // @test Enclosed left right\n      if (this.arraydef['rowlines']) {\n        // @test Enclosed dashed row, Enclosed solid row,\n        this.arraydef['rowlines'] =\n          (this.arraydef['rowlines'] as string).replace(/none( none)+$/, 'none');\n      }\n      // @test Enclosed left right\n      NodeUtil.setAttribute(mml, 'frame', '');\n      mml = this.create('node', 'menclose', [mml], {notation: this.frame.join(' ')});\n      if ((this.arraydef['columnlines'] || 'none') !== 'none' ||\n          (this.arraydef['rowlines'] || 'none') !== 'none') {\n        // @test Enclosed dashed row, Enclosed solid row\n        // @test Enclosed dashed column, Enclosed solid column\n        NodeUtil.setAttribute(mml, 'data-padding', 0);\n      }\n    }\n    if (this.getProperty('open') || this.getProperty('close')) {\n      // @test Cross Product Formula\n      mml = ParseUtil.fenced(this.factory.configuration,\n                             this.getProperty('open') as string, mml,\n                             this.getProperty('close') as string);\n    }\n    return mml;\n  }\n\n  /**\n   * Finishes a single cell of the array.\n   */\n  public EndEntry() {\n    // @test Array1, Array2\n    const mtd = this.create('node', 'mtd', this.nodes);\n    if (this.hfill.length) {\n      if (this.hfill[0] === 0) {\n        NodeUtil.setAttribute(mtd, 'columnalign', 'right');\n      }\n      if (this.hfill[this.hfill.length - 1] === this.Size()) {\n        NodeUtil.setAttribute(\n          mtd, 'columnalign',\n          NodeUtil.getAttribute(mtd, 'columnalign') ? 'center' : 'left');\n      }\n    }\n    this.row.push(mtd);\n    this.Clear();\n    this.hfill = [];\n  }\n\n\n  /**\n   * Finishes a single row of the array.\n   */\n  public EndRow() {\n    let node: MmlNode;\n    if (this.getProperty('isNumbered') && this.row.length === 3) {\n      // @test Label, Matrix Numbered\n      this.row.unshift(this.row.pop());  // move equation number to first\n      // position\n      node = this.create('node', 'mlabeledtr', this.row);\n    } else {\n      // @test Array1, Array2\n      node = this.create('node', 'mtr', this.row);\n    }\n    this.table.push(node);\n    this.row = [];\n  }\n\n\n  /**\n   * Finishes the table layout.\n   */\n  public EndTable() {\n    if (this.Size() || this.row.length) {\n      this.EndEntry();\n      this.EndRow();\n    }\n    this.checkLines();\n  }\n\n\n  /**\n   * Finishes line layout if not already given.\n   */\n  public checkLines() {\n    if (this.arraydef['rowlines']) {\n      const lines = (this.arraydef['rowlines'] as string).split(/ /);\n      if (lines.length === this.table.length) {\n        this.frame.push('bottom');\n        lines.pop();\n        this.arraydef['rowlines'] = lines.join(' ');\n      } else if (lines.length < this.table.length - 1) {\n        this.arraydef['rowlines'] += ' none';\n      }\n    }\n    if (this.getProperty('rowspacing')) {\n      const rows = (this.arraydef['rowspacing'] as string).split(/ /);\n      while (rows.length < this.table.length) {\n        rows.push(this.getProperty('rowspacing') + 'em');\n      }\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  }\n\n  /**\n   * Adds a row-spacing to the current row (padding out the rowspacing if needed to get there).\n   *\n   * @param {string} spacing   The rowspacing to use for the current row.\n   */\n  public addRowSpacing(spacing: string) {\n    if (this.arraydef['rowspacing']) {\n      const rows = (this.arraydef['rowspacing'] as string).split(/ /);\n      if (!this.getProperty('rowspacing')) {\n        // @test Array Custom Linebreak\n        let dimem = ParseUtil.dimen2em(rows[0]);\n        this.setProperty('rowspacing', dimem);\n      }\n      const rowspacing = this.getProperty('rowspacing') as number;\n      while (rows.length < this.table.length) {\n        rows.push(ParseUtil.Em(rowspacing));\n      }\n      rows[this.table.length - 1] = ParseUtil.Em(\n        Math.max(0, rowspacing + ParseUtil.dimen2em(spacing)));\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  }\n\n}\n\n\n/**\n * Item dealing with equation arrays as a special case of arrays. Handles\n * tagging information according to the given tagging style.\n */\nexport class EqnArrayItem extends ArrayItem {\n\n  /**\n   * The length of the longest row.\n   */\n  public maxrow: number = 0;\n\n  /**\n   * @override\n   */\n  constructor(factory: any, ...args: any[]) {\n    super(factory);\n    this.factory.configuration.tags.start(args[0], args[2], args[1]);\n  }\n\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'eqnarray';\n  }\n\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    // @test Cubic Binomial\n    if (this.row.length) {\n      ParseUtil.fixInitialMO(this.factory.configuration, this.nodes);\n    }\n    const node = this.create('node', 'mtd', this.nodes);\n    this.row.push(node);\n    this.Clear();\n  }\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    if (this.row.length > this.maxrow) {\n      this.maxrow = this.row.length;\n    }\n    // @test Cubic Binomial\n    let mtr = 'mtr';\n    let tag = this.factory.configuration.tags.getTag();\n    if (tag) {\n      this.row = [tag].concat(this.row);\n      mtr = 'mlabeledtr';\n    }\n    this.factory.configuration.tags.clearTag();\n    const node = this.create('node', mtr, this.row);\n    this.table.push(node);\n    this.row = [];\n  }\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    // @test Cubic Binomial\n    super.EndTable();\n    this.factory.configuration.tags.end();\n    //\n    // Repeat the column align and width specifications\n    //   to match the number of columns\n    //\n    this.extendArray('columnalign', this.maxrow);\n    this.extendArray('columnwidth', this.maxrow);\n    this.extendArray('columnspacing', this.maxrow - 1);\n  }\n\n  /**\n   * Extend a column specification to include a repeating set of values\n   *   so that it has enough to match the maximum row length.\n   */\n  protected extendArray(name: string, max: number) {\n    if (!this.arraydef[name]) return;\n    const repeat = (this.arraydef[name] as string).split(/ /);\n    const columns = [...repeat];\n    if (columns.length > 1) {\n      while (columns.length < max) {\n        columns.push(...repeat);\n      }\n      this.arraydef[name] = columns.slice(0, max).join(' ');\n    }\n  }\n}\n\n\n/**\n * Item dealing with simple equation environments.  Handles tagging information\n * according to the given tagging style.\n */\nexport class EquationItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: any, ...args: any[]) {\n    super(factory);\n    this.factory.configuration.tags.start('equation', true, args[0]);\n  }\n\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'equation';\n  }\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end')) {\n      let mml = this.toMml();\n      let tag = this.factory.configuration.tags.getTag();\n      this.factory.configuration.tags.end();\n      return [[tag ? this.factory.configuration.tags.enTag(mml, tag) : mml, item], true];\n    }\n    if (item.isKind('stop')) {\n      // @test EnvMissingEnd Equation\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    return super.checkItem(item);\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}