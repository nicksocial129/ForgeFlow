{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar NodeUtil_js_1 = __importDefault(require(\"./NodeUtil.js\"));\nvar Stack = function () {\n  function Stack(_factory, _env, inner) {\n    this._factory = _factory;\n    this._env = _env;\n    this.global = {};\n    this.stack = [];\n    this.global = {\n      isInner: inner\n    };\n    this.stack = [this._factory.create('start', this.global)];\n    if (_env) {\n      this.stack[0].env = _env;\n    }\n    this.env = this.stack[0].env;\n  }\n  Object.defineProperty(Stack.prototype, \"env\", {\n    get: function () {\n      return this._env;\n    },\n    set: function (env) {\n      this._env = env;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Stack.prototype.Push = function () {\n    var e_1, _a;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    try {\n      for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n        var node = args_1_1.value;\n        if (!node) {\n          continue;\n        }\n        var item = NodeUtil_js_1.default.isNode(node) ? this._factory.create('mml', node) : node;\n        item.global = this.global;\n        var _b = __read(this.stack.length ? this.Top().checkItem(item) : [null, true], 2),\n          top_1 = _b[0],\n          success = _b[1];\n        if (!success) {\n          continue;\n        }\n        if (top_1) {\n          this.Pop();\n          this.Push.apply(this, __spreadArray([], __read(top_1), false));\n          continue;\n        }\n        this.stack.push(item);\n        if (item.env) {\n          if (item.copyEnv) {\n            Object.assign(item.env, this.env);\n          }\n          this.env = item.env;\n        } else {\n          item.env = this.env;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  Stack.prototype.Pop = function () {\n    var item = this.stack.pop();\n    if (!item.isOpen) {\n      delete item.env;\n    }\n    this.env = this.stack.length ? this.Top().env : {};\n    return item;\n  };\n  Stack.prototype.Top = function (n) {\n    if (n === void 0) {\n      n = 1;\n    }\n    return this.stack.length < n ? null : this.stack[this.stack.length - n];\n  };\n  Stack.prototype.Prev = function (noPop) {\n    var top = this.Top();\n    return noPop ? top.First : top.Pop();\n  };\n  Stack.prototype.toString = function () {\n    return 'stack[\\n  ' + this.stack.join('\\n  ') + '\\n]';\n  };\n  return Stack;\n}();\nexports.default = Stack;","map":{"version":3,"names":["NodeUtil_js_1","__importDefault","require","Stack","_factory","_env","inner","global","stack","isInner","create","env","Object","defineProperty","prototype","get","set","Push","args","_i","arguments","length","args_1","__values","args_1_1","next","done","node","value","item","default","isNode","_b","__read","Top","checkItem","top_1","success","Pop","apply","__spreadArray","push","copyEnv","assign","pop","isOpen","n","Prev","noPop","top","First","toString","join"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/Stack.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview The Stack for the TeX parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport NodeUtil from './NodeUtil.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {StackItem, EnvList} from './StackItem.js';\nimport StackItemFactory from './StackItemFactory.js';\n\n\nexport default class Stack {\n\n  /**\n   * @type {EnvList}\n   */\n  public global: EnvList = {};\n\n  /**\n   * The actual stack, a list of stack items.\n   * @type {Array.<StackItem>}\n   */\n  private stack: StackItem[] = [];\n\n  /**\n   * @constructor\n   * @param {StackItemFactory} factory The stack item factory.\n   * @param {EnvList} env The environment.\n   * @param {boolean} inner True if parser has been called recursively.\n   */\n  constructor(private _factory: StackItemFactory,\n              private _env: EnvList, inner: boolean) {\n    this.global = {isInner: inner};\n    this.stack = [ this._factory.create('start', this.global) ];\n    if (_env) {\n      this.stack[0].env = _env;\n    }\n    this.env = this.stack[0].env;\n  }\n\n\n  /**\n   * Set the environment of the stack.\n   * @param {EnvList} env The new environment.\n   */\n  public set env(env: EnvList) {\n    this._env = env;\n  }\n\n\n  /**\n   * Retrieves the environment of that stack.\n   * @return {EnvList} The current environment.\n   */\n  public get env(): EnvList {\n    return this._env;\n  }\n\n\n  /**\n   * Pushes items or nodes onto stack.\n   * @param {...StackItem|MmlNode} args A list of items to push.\n   */\n  public Push(...args: (StackItem | MmlNode)[]) {\n    for (const node of args) {\n      if (!node) {\n        continue;\n      }\n      const item = NodeUtil.isNode(node) ?\n        this._factory.create('mml', node) : node as StackItem;\n      item.global = this.global;\n      const [top, success] =\n        this.stack.length ? this.Top().checkItem(item) : [null, true];\n      if (!success) {\n        continue;\n      }\n      if (top) {\n        this.Pop();\n        this.Push(...top);\n        continue;\n      }\n      this.stack.push(item);\n      if (item.env) {\n        if (item.copyEnv) {\n          Object.assign(item.env, this.env);\n        }\n        this.env = item.env;\n      } else {\n        item.env = this.env;\n      }\n    }\n  }\n\n\n  /**\n   * Pop the topmost elements off the stack.\n   * @return {StackItem} A stack item.\n   */\n  public Pop(): StackItem {\n    const item = this.stack.pop();\n    if (!item.isOpen) {\n      delete item.env;\n    }\n    this.env = (this.stack.length ? this.Top().env : {});\n    return item;\n  }\n\n\n  /**\n   * Lookup the nth elements on the stack without removing them.\n   * @param {number=} n Position of element that should be returned. Default 1.\n   * @return {StackItem} Nth item on the stack.\n   */\n  public Top(n: number = 1): StackItem {\n    return this.stack.length < n ? null : this.stack[this.stack.length - n];\n  }\n\n\n  /**\n   * Lookup the topmost element on the stack, returning the Mml node in that\n   * item. Optionally pops the Mml node from that stack item.\n   * @param {boolean=} noPop Pop top item if true.\n   * @return {MmlNode} The Mml node in the topmost stack item.\n   */\n  public Prev(noPop?: boolean): MmlNode | void {\n    const top = this.Top();\n    return noPop ? top.First : top.Pop();\n  }\n\n\n  /**\n   * @override\n   */\n  public toString() {\n    return 'stack[\\n  ' + this.stack.join('\\n  ') + '\\n]';\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}