{"ast":null,"code":"/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mathjax-full/js/core/OutputJax').OutputJax<HTMLElement, Text, Document>} OutputJax\n * @typedef {import('mathjax-full/js/core/MathDocument.js').MathDocument<HTMLElement, Text, Document>} MathDocument\n * @typedef {import('mathjax-full/js/input/tex.js').TeX<HTMLElement, Text, Document>} TeX_\n * @typedef {import('./create-plugin.js').Options} Options\n * @typedef {import('./create-plugin.js').Renderer} Renderer\n */\n\nimport { mathjax } from 'mathjax-full/js/mathjax.js';\nimport { RegisterHTMLHandler } from 'mathjax-full/js/handlers/html.js';\nimport { TeX } from 'mathjax-full/js/input/tex.js';\nimport { AllPackages } from 'mathjax-full/js/input/tex/AllPackages.js';\nimport { fromDom } from 'hast-util-from-dom';\nimport { toText } from 'hast-util-to-text';\nimport { createAdaptor } from './create-adaptor.js';\nconst adaptor = createAdaptor();\n\n// To do next major: Keep resultant HTML handler from `register(adaptor)` to\n// allow registering the `AssistiveMmlHandler` as in this demo:\n// <https://github.com/mathjax/MathJax-demos-node/tree/master/direct>\n//\n// To do next major: If registering `AssistiveMmlHandler` is supported through\n// configuration, move HTML handler registration to beginning of transformer and\n// unregister at the end of transformer with\n// `mathjax.handlers.unregister(handler)`.\n// That is to prevent memory leak in `mathjax.handlers` whenever a new instance\n// of the plugin is used.\n/* eslint-disable-next-line new-cap */\nRegisterHTMLHandler(adaptor);\n\n/**\n * @param {Options} options\n * @param {OutputJax} output\n * @returns {Renderer}\n */\nexport function createRenderer(options, output) {\n  const input = new TeX(Object.assign({\n    packages: AllPackages\n  }, options.tex));\n  /** @type {MathDocument} */\n  const doc = mathjax.document('', {\n    InputJax: input,\n    OutputJax: output\n  });\n  return {\n    render(node, options) {\n      const domNode = fromDom(\n      // @ts-expect-error: assume mathml nodes can be handled by\n      // `hast-util-from-dom`.\n      doc.convert(toText(node, {\n        whitespace: 'pre'\n      }), options));\n      // @ts-expect-error: `fromDom` returns an element for a given element.\n      node.children = [domNode];\n    },\n    styleSheet() {\n      const value = adaptor.textContent(output.styleSheet(doc));\n      return {\n        type: 'element',\n        tagName: 'style',\n        properties: {},\n        children: [{\n          type: 'text',\n          value\n        }]\n      };\n    }\n  };\n}","map":{"version":3,"names":["mathjax","RegisterHTMLHandler","TeX","AllPackages","fromDom","toText","createAdaptor","adaptor","createRenderer","options","output","input","Object","assign","packages","tex","doc","document","InputJax","OutputJax","render","node","domNode","convert","whitespace","children","styleSheet","value","textContent","type","tagName","properties"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/rehype-mathjax/lib/create-renderer.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mathjax-full/js/core/OutputJax').OutputJax<HTMLElement, Text, Document>} OutputJax\n * @typedef {import('mathjax-full/js/core/MathDocument.js').MathDocument<HTMLElement, Text, Document>} MathDocument\n * @typedef {import('mathjax-full/js/input/tex.js').TeX<HTMLElement, Text, Document>} TeX_\n * @typedef {import('./create-plugin.js').Options} Options\n * @typedef {import('./create-plugin.js').Renderer} Renderer\n */\n\nimport {mathjax} from 'mathjax-full/js/mathjax.js'\nimport {RegisterHTMLHandler} from 'mathjax-full/js/handlers/html.js'\nimport {TeX} from 'mathjax-full/js/input/tex.js'\nimport {AllPackages} from 'mathjax-full/js/input/tex/AllPackages.js'\nimport {fromDom} from 'hast-util-from-dom'\nimport {toText} from 'hast-util-to-text'\nimport {createAdaptor} from './create-adaptor.js'\n\nconst adaptor = createAdaptor()\n\n// To do next major: Keep resultant HTML handler from `register(adaptor)` to\n// allow registering the `AssistiveMmlHandler` as in this demo:\n// <https://github.com/mathjax/MathJax-demos-node/tree/master/direct>\n//\n// To do next major: If registering `AssistiveMmlHandler` is supported through\n// configuration, move HTML handler registration to beginning of transformer and\n// unregister at the end of transformer with\n// `mathjax.handlers.unregister(handler)`.\n// That is to prevent memory leak in `mathjax.handlers` whenever a new instance\n// of the plugin is used.\n/* eslint-disable-next-line new-cap */\nRegisterHTMLHandler(adaptor)\n\n/**\n * @param {Options} options\n * @param {OutputJax} output\n * @returns {Renderer}\n */\nexport function createRenderer(options, output) {\n  const input = new TeX(Object.assign({packages: AllPackages}, options.tex))\n  /** @type {MathDocument} */\n  const doc = mathjax.document('', {InputJax: input, OutputJax: output})\n\n  return {\n    render(node, options) {\n      const domNode = fromDom(\n        // @ts-expect-error: assume mathml nodes can be handled by\n        // `hast-util-from-dom`.\n        doc.convert(toText(node, {whitespace: 'pre'}), options)\n      )\n      // @ts-expect-error: `fromDom` returns an element for a given element.\n      node.children = [domNode]\n    },\n    styleSheet() {\n      const value = adaptor.textContent(output.styleSheet(doc))\n\n      return {\n        type: 'element',\n        tagName: 'style',\n        properties: {},\n        children: [{type: 'text', value}]\n      }\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,OAAO,QAAO,4BAA4B;AAClD,SAAQC,mBAAmB,QAAO,kCAAkC;AACpE,SAAQC,GAAG,QAAO,8BAA8B;AAChD,SAAQC,WAAW,QAAO,0CAA0C;AACpE,SAAQC,OAAO,QAAO,oBAAoB;AAC1C,SAAQC,MAAM,QAAO,mBAAmB;AACxC,SAAQC,aAAa,QAAO,qBAAqB;AAEjD,MAAMC,OAAO,GAAGD,aAAa,CAAC,CAAC;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,mBAAmB,CAACM,OAAO,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,OAAO,EAAEC,MAAM,EAAE;EAC9C,MAAMC,KAAK,GAAG,IAAIT,GAAG,CAACU,MAAM,CAACC,MAAM,CAAC;IAACC,QAAQ,EAAEX;EAAW,CAAC,EAAEM,OAAO,CAACM,GAAG,CAAC,CAAC;EAC1E;EACA,MAAMC,GAAG,GAAGhB,OAAO,CAACiB,QAAQ,CAAC,EAAE,EAAE;IAACC,QAAQ,EAAEP,KAAK;IAAEQ,SAAS,EAAET;EAAM,CAAC,CAAC;EAEtE,OAAO;IACLU,MAAMA,CAACC,IAAI,EAAEZ,OAAO,EAAE;MACpB,MAAMa,OAAO,GAAGlB,OAAO;MACrB;MACA;MACAY,GAAG,CAACO,OAAO,CAAClB,MAAM,CAACgB,IAAI,EAAE;QAACG,UAAU,EAAE;MAAK,CAAC,CAAC,EAAEf,OAAO,CACxD,CAAC;MACD;MACAY,IAAI,CAACI,QAAQ,GAAG,CAACH,OAAO,CAAC;IAC3B,CAAC;IACDI,UAAUA,CAAA,EAAG;MACX,MAAMC,KAAK,GAAGpB,OAAO,CAACqB,WAAW,CAAClB,MAAM,CAACgB,UAAU,CAACV,GAAG,CAAC,CAAC;MAEzD,OAAO;QACLa,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,OAAO;QAChBC,UAAU,EAAE,CAAC,CAAC;QACdN,QAAQ,EAAE,CAAC;UAACI,IAAI,EAAE,MAAM;UAAEF;QAAK,CAAC;MAClC,CAAC;IACH;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}