{"ast":null,"code":"module.exports = function (hljs) {\n  var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var GCODE_CLOSE_RE = '\\\\%';\n  var GCODE_KEYWORDS = 'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' + 'EQ LT GT NE GE LE OR XOR';\n  var GCODE_START = {\n    className: 'meta',\n    begin: '([O])([0-9]+)'\n  };\n  var GCODE_CODE = [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.COMMENT(/\\(/, /\\)/), hljs.inherit(hljs.C_NUMBER_MODE, {\n    begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE\n  }), hljs.inherit(hljs.APOS_STRING_MODE, {\n    illegal: null\n  }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  }), {\n    className: 'name',\n    begin: '([G])([0-9]+\\\\.?[0-9]?)'\n  }, {\n    className: 'name',\n    begin: '([M])([0-9]+\\\\.?[0-9]?)'\n  }, {\n    className: 'attr',\n    begin: '(VC|VS|#)',\n    end: '(\\\\d+)'\n  }, {\n    className: 'attr',\n    begin: '(VZOFX|VZOFY|VZOFZ)'\n  }, {\n    className: 'built_in',\n    begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n    end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n  }, {\n    className: 'symbol',\n    variants: [{\n      begin: 'N',\n      end: '\\\\d+',\n      illegal: '\\\\W'\n    }]\n  }];\n  return {\n    aliases: ['nc'],\n    // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n    // However, most prefer all uppercase and uppercase is customary.\n    case_insensitive: true,\n    lexemes: GCODE_IDENT_RE,\n    keywords: GCODE_KEYWORDS,\n    contains: [{\n      className: 'meta',\n      begin: GCODE_CLOSE_RE\n    }, GCODE_START].concat(GCODE_CODE)\n  };\n};","map":{"version":3,"names":["module","exports","hljs","GCODE_IDENT_RE","GCODE_CLOSE_RE","GCODE_KEYWORDS","GCODE_START","className","begin","GCODE_CODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","inherit","C_NUMBER_MODE","C_NUMBER_RE","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","end","variants","aliases","case_insensitive","lexemes","keywords","contains","concat"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/gcode.js"],"sourcesContent":["module.exports = function(hljs) {\n    var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n    var GCODE_CLOSE_RE = '\\\\%';\n    var GCODE_KEYWORDS =\n      'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' +\n      'EQ LT GT NE GE LE OR XOR';\n    var GCODE_START = {\n        className: 'meta',\n        begin: '([O])([0-9]+)'\n    };\n    var GCODE_CODE = [\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        hljs.COMMENT(/\\(/, /\\)/),\n        hljs.inherit(hljs.C_NUMBER_MODE, {begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE}),\n        hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n        hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n        {\n            className: 'name',\n            begin: '([G])([0-9]+\\\\.?[0-9]?)'\n        },\n        {\n            className: 'name',\n            begin: '([M])([0-9]+\\\\.?[0-9]?)'\n        },\n        {\n            className: 'attr',\n            begin: '(VC|VS|#)',\n            end: '(\\\\d+)'\n        },\n        {\n            className: 'attr',\n            begin: '(VZOFX|VZOFY|VZOFZ)'\n        },\n        {\n            className: 'built_in',\n            begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n            end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n        },\n        {\n            className: 'symbol',\n            variants: [\n                {\n                    begin: 'N', end: '\\\\d+',\n                    illegal: '\\\\W'\n                }\n            ]\n        }\n    ];\n\n    return {\n        aliases: ['nc'],\n        // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n        // However, most prefer all uppercase and uppercase is customary.\n        case_insensitive: true,\n        lexemes: GCODE_IDENT_RE,\n        keywords: GCODE_KEYWORDS,\n        contains: [\n            {\n                className: 'meta',\n                begin: GCODE_CLOSE_RE\n            },\n            GCODE_START\n        ].concat(GCODE_CODE)\n    };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC5B,IAAIC,cAAc,GAAG,mBAAmB;EACxC,IAAIC,cAAc,GAAG,KAAK;EAC1B,IAAIC,cAAc,GAChB,mEAAmE,GACnE,0BAA0B;EAC5B,IAAIC,WAAW,GAAG;IACdC,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE;EACX,CAAC;EACD,IAAIC,UAAU,GAAG,CACbP,IAAI,CAACQ,mBAAmB,EACxBR,IAAI,CAACS,oBAAoB,EACzBT,IAAI,CAACU,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EACxBV,IAAI,CAACW,OAAO,CAACX,IAAI,CAACY,aAAa,EAAE;IAACN,KAAK,EAAE,gCAAgC,GAAGN,IAAI,CAACa;EAAW,CAAC,CAAC,EAC9Fb,IAAI,CAACW,OAAO,CAACX,IAAI,CAACc,gBAAgB,EAAE;IAACC,OAAO,EAAE;EAAI,CAAC,CAAC,EACpDf,IAAI,CAACW,OAAO,CAACX,IAAI,CAACgB,iBAAiB,EAAE;IAACD,OAAO,EAAE;EAAI,CAAC,CAAC,EACrD;IACIV,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE;EACX,CAAC,EACD;IACID,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE;EACX,CAAC,EACD;IACID,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,WAAW;IAClBW,GAAG,EAAE;EACT,CAAC,EACD;IACIZ,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE;EACX,CAAC,EACD;IACID,SAAS,EAAE,UAAU;IACrBC,KAAK,EAAE,4DAA4D;IACnEW,GAAG,EAAE;EACT,CAAC,EACD;IACIZ,SAAS,EAAE,QAAQ;IACnBa,QAAQ,EAAE,CACN;MACIZ,KAAK,EAAE,GAAG;MAAEW,GAAG,EAAE,MAAM;MACvBF,OAAO,EAAE;IACb,CAAC;EAET,CAAC,CACJ;EAED,OAAO;IACHI,OAAO,EAAE,CAAC,IAAI,CAAC;IACf;IACA;IACAC,gBAAgB,EAAE,IAAI;IACtBC,OAAO,EAAEpB,cAAc;IACvBqB,QAAQ,EAAEnB,cAAc;IACxBoB,QAAQ,EAAE,CACN;MACIlB,SAAS,EAAE,MAAM;MACjBC,KAAK,EAAEJ;IACX,CAAC,EACDE,WAAW,CACd,CAACoB,MAAM,CAACjB,UAAU;EACvB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}