{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmsqrt = void 0;\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\nvar msqrt_js_1 = require(\"../../common/Wrappers/msqrt.js\");\nvar msqrt_js_2 = require(\"../../../core/MmlTree/MmlNodes/msqrt.js\");\nvar SVGmsqrt = function (_super) {\n  __extends(SVGmsqrt, _super);\n  function SVGmsqrt() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.dx = 0;\n    return _this;\n  }\n  SVGmsqrt.prototype.toSVG = function (parent) {\n    var surd = this.childNodes[this.surd];\n    var base = this.childNodes[this.base];\n    var root = this.root ? this.childNodes[this.root] : null;\n    var sbox = surd.getBBox();\n    var bbox = base.getOuterBBox();\n    var q = this.getPQ(sbox)[1];\n    var t = this.font.params.rule_thickness * this.bbox.scale;\n    var H = bbox.h + q + t;\n    var SVG = this.standardSVGnode(parent);\n    var BASE = this.adaptor.append(SVG, this.svg('g'));\n    this.addRoot(SVG, root, sbox, H);\n    surd.toSVG(SVG);\n    surd.place(this.dx, H - sbox.h);\n    base.toSVG(BASE);\n    base.place(this.dx + sbox.w, 0);\n    this.adaptor.append(SVG, this.svg('rect', {\n      width: this.fixed(bbox.w),\n      height: this.fixed(t),\n      x: this.fixed(this.dx + sbox.w),\n      y: this.fixed(H - t)\n    }));\n  };\n  SVGmsqrt.prototype.addRoot = function (_ROOT, _root, _sbox, _H) {};\n  SVGmsqrt.kind = msqrt_js_2.MmlMsqrt.prototype.kind;\n  return SVGmsqrt;\n}((0, msqrt_js_1.CommonMsqrtMixin)(Wrapper_js_1.SVGWrapper));\nexports.SVGmsqrt = SVGmsqrt;","map":{"version":3,"names":["Wrapper_js_1","require","msqrt_js_1","msqrt_js_2","SVGmsqrt","_super","__extends","_this","apply","arguments","dx","prototype","toSVG","parent","surd","childNodes","base","root","sbox","getBBox","bbox","getOuterBBox","q","getPQ","t","font","params","rule_thickness","scale","H","h","SVG","standardSVGnode","BASE","adaptor","append","svg","addRoot","place","w","width","fixed","height","x","y","_ROOT","_root","_sbox","_H","kind","MmlMsqrt","CommonMsqrtMixin","SVGWrapper","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/svg/Wrappers/msqrt.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGmsqrt wrapper for the MmlMsqrt object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor} from '../Wrapper.js';\nimport {CommonMsqrtMixin} from '../../common/Wrappers/msqrt.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {MmlMsqrt} from '../../../core/MmlTree/MmlNodes/msqrt.js';\n\n/*****************************************************************/\n/**\n * The SVGmsqrt wrapper for the MmlMsqrt object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGmsqrt<N, T, D> extends CommonMsqrtMixin<SVGConstructor<any, any, any>>(SVGWrapper) {\n\n  /**\n   * The msqrt wrapper\n   */\n  public static kind = MmlMsqrt.prototype.kind;\n\n  /**\n   * Indent due to root\n   */\n  public dx: number = 0;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const surd = this.childNodes[this.surd];\n    const base = this.childNodes[this.base];\n    const root = (this.root ? this.childNodes[this.root] : null);\n    //\n    //  Get the parameters for the spacing of the parts\n    //\n    const sbox = surd.getBBox();\n    const bbox = base.getOuterBBox();\n    const q = this.getPQ(sbox)[1];\n    const t = this.font.params.rule_thickness * this.bbox.scale;\n    const H = bbox.h + q + t;\n    //\n    //  Create the SVG structure for the root\n    //\n    const SVG = this.standardSVGnode(parent);\n    const BASE = this.adaptor.append(SVG, this.svg('g'));\n    //\n    //  Place the children\n    //\n    this.addRoot(SVG, root, sbox, H);\n    surd.toSVG(SVG);\n    surd.place(this.dx, H - sbox.h);\n    base.toSVG(BASE);\n    base.place(this.dx + sbox.w, 0);\n    this.adaptor.append(SVG, this.svg('rect', {\n      width: this.fixed(bbox.w), height: this.fixed(t),\n      x: this.fixed(this.dx + sbox.w), y: this.fixed(H - t)\n    }));\n  }\n\n  /**\n   * Add root HTML (overridden in mroot)\n   *\n   * @param {N} ROOT           The container for the root\n   * @param {SVGWrapper} root  The wrapped MML root content\n   * @param {BBox} sbox        The bounding box of the surd\n   * @param {number} H         The height of the root as a whole\n   */\n  protected addRoot(_ROOT: N, _root: SVGWrapper<N, T, D>, _sbox: BBox, _H: number) {\n  }\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAEA,IAAAE,UAAA,GAAAF,OAAA;AAUA,IAAAG,QAAA,aAAAC,MAAA;EAAuCC,SAAA,CAAAF,QAAA,EAAAC,MAAA;EAAvC,SAAAD,SAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IAUSF,KAAA,CAAAG,EAAE,GAAW,CAAC;;EA+CvB;EA1CSN,QAAA,CAAAO,SAAA,CAAAC,KAAK,GAAZ,UAAaC,MAAS;IACpB,IAAMC,IAAI,GAAG,IAAI,CAACC,UAAU,CAAC,IAAI,CAACD,IAAI,CAAC;IACvC,IAAME,IAAI,GAAG,IAAI,CAACD,UAAU,CAAC,IAAI,CAACC,IAAI,CAAC;IACvC,IAAMC,IAAI,GAAI,IAAI,CAACA,IAAI,GAAG,IAAI,CAACF,UAAU,CAAC,IAAI,CAACE,IAAI,CAAC,GAAG,IAAK;IAI5D,IAAMC,IAAI,GAAGJ,IAAI,CAACK,OAAO,EAAE;IAC3B,IAAMC,IAAI,GAAGJ,IAAI,CAACK,YAAY,EAAE;IAChC,IAAMC,CAAC,GAAG,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAMM,CAAC,GAAG,IAAI,CAACC,IAAI,CAACC,MAAM,CAACC,cAAc,GAAG,IAAI,CAACP,IAAI,CAACQ,KAAK;IAC3D,IAAMC,CAAC,GAAGT,IAAI,CAACU,CAAC,GAAGR,CAAC,GAAGE,CAAC;IAIxB,IAAMO,GAAG,GAAG,IAAI,CAACC,eAAe,CAACnB,MAAM,CAAC;IACxC,IAAMoB,IAAI,GAAG,IAAI,CAACC,OAAO,CAACC,MAAM,CAACJ,GAAG,EAAE,IAAI,CAACK,GAAG,CAAC,GAAG,CAAC,CAAC;IAIpD,IAAI,CAACC,OAAO,CAACN,GAAG,EAAEd,IAAI,EAAEC,IAAI,EAAEW,CAAC,CAAC;IAChCf,IAAI,CAACF,KAAK,CAACmB,GAAG,CAAC;IACfjB,IAAI,CAACwB,KAAK,CAAC,IAAI,CAAC5B,EAAE,EAAEmB,CAAC,GAAGX,IAAI,CAACY,CAAC,CAAC;IAC/Bd,IAAI,CAACJ,KAAK,CAACqB,IAAI,CAAC;IAChBjB,IAAI,CAACsB,KAAK,CAAC,IAAI,CAAC5B,EAAE,GAAGQ,IAAI,CAACqB,CAAC,EAAE,CAAC,CAAC;IAC/B,IAAI,CAACL,OAAO,CAACC,MAAM,CAACJ,GAAG,EAAE,IAAI,CAACK,GAAG,CAAC,MAAM,EAAE;MACxCI,KAAK,EAAE,IAAI,CAACC,KAAK,CAACrB,IAAI,CAACmB,CAAC,CAAC;MAAEG,MAAM,EAAE,IAAI,CAACD,KAAK,CAACjB,CAAC,CAAC;MAChDmB,CAAC,EAAE,IAAI,CAACF,KAAK,CAAC,IAAI,CAAC/B,EAAE,GAAGQ,IAAI,CAACqB,CAAC,CAAC;MAAEK,CAAC,EAAE,IAAI,CAACH,KAAK,CAACZ,CAAC,GAAGL,CAAC;KACrD,CAAC,CAAC;EACL,CAAC;EAUSpB,QAAA,CAAAO,SAAA,CAAA0B,OAAO,GAAjB,UAAkBQ,KAAQ,EAAEC,KAA0B,EAAEC,KAAW,EAAEC,EAAU,GAC/E,CAAC;EAlDa5C,QAAA,CAAA6C,IAAI,GAAG9C,UAAA,CAAA+C,QAAQ,CAACvC,SAAS,CAACsC,IAAI;EAoD9C,OAAA7C,QAAC;CAAA,CAzDsC,IAAAF,UAAA,CAAAiD,gBAAgB,EAAgCnD,YAAA,CAAAoD,UAAU,CAAC;AAArFC,OAAA,CAAAjD,QAAA,GAAAA,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}