{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar sm = __importStar(require(\"../SymbolMap.js\"));\nvar ParseMethods_js_1 = __importDefault(require(\"../ParseMethods.js\"));\nvar AmsCdMethods_js_1 = __importDefault(require(\"./AmsCdMethods.js\"));\nnew sm.EnvironmentMap('amscd_environment', ParseMethods_js_1.default.environment, {\n  CD: 'CD'\n}, AmsCdMethods_js_1.default);\nnew sm.CommandMap('amscd_macros', {\n  minCDarrowwidth: 'minCDarrowwidth',\n  minCDarrowheight: 'minCDarrowheight'\n}, AmsCdMethods_js_1.default);\nnew sm.MacroMap('amscd_special', {\n  '@': 'arrow'\n}, AmsCdMethods_js_1.default);","map":{"version":3,"names":["sm","__importStar","require","ParseMethods_js_1","__importDefault","AmsCdMethods_js_1","EnvironmentMap","default","environment","CD","CommandMap","minCDarrowwidth","minCDarrowheight","MacroMap"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/amscd/AmsCdMappings.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Symbol mappings for the AMScd package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport * as sm from '../SymbolMap.js';\nimport ParseMethods from '../ParseMethods.js';\nimport AmsCdMethods from './AmsCdMethods.js';\n\n\nnew sm.EnvironmentMap('amscd_environment', ParseMethods.environment,\n                      {CD: 'CD'}, AmsCdMethods);\n\nnew sm.CommandMap('amscd_macros', {\n  minCDarrowwidth: 'minCDarrowwidth',\n  minCDarrowheight: 'minCDarrowheight',\n}, AmsCdMethods);\n\nnew sm.MacroMap('amscd_special', {'@': 'arrow'}, AmsCdMethods);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAAA,EAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAC,eAAA,CAAAF,OAAA;AACA,IAAAG,iBAAA,GAAAD,eAAA,CAAAF,OAAA;AAGA,IAAIF,EAAE,CAACM,cAAc,CAAC,mBAAmB,EAAEH,iBAAA,CAAAI,OAAY,CAACC,WAAW,EAC7C;EAACC,EAAE,EAAE;AAAI,CAAC,EAAEJ,iBAAA,CAAAE,OAAY,CAAC;AAE/C,IAAIP,EAAE,CAACU,UAAU,CAAC,cAAc,EAAE;EAChCC,eAAe,EAAE,iBAAiB;EAClCC,gBAAgB,EAAE;CACnB,EAAEP,iBAAA,CAAAE,OAAY,CAAC;AAEhB,IAAIP,EAAE,CAACa,QAAQ,CAAC,eAAe,EAAE;EAAC,GAAG,EAAE;AAAO,CAAC,EAAER,iBAAA,CAAAE,OAAY,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}