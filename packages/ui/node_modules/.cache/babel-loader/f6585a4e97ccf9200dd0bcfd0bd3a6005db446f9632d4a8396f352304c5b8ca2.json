{"ast":null,"code":"'use strict';\n\nvar refractorRuby = require('./ruby.js');\nmodule.exports = crystal;\ncrystal.displayName = 'crystal';\ncrystal.aliases = [];\nfunction crystal(Prism) {\n  Prism.register(refractorRuby);\n  (function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/, {\n        pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n        lookbehind: true\n      }],\n      number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n    });\n    Prism.languages.insertBefore('crystal', 'string', {\n      attribute: {\n        pattern: /@\\[.+?\\]/,\n        alias: 'attr-name',\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.crystal\n        }\n      },\n      expansion: [{\n        pattern: /\\{\\{.+?\\}\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\{\\{|\\}\\}$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.crystal\n        }\n      }, {\n        pattern: /\\{%.+?%\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\{%|%\\}$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.crystal\n        }\n      }]\n    });\n  })(Prism);\n}","map":{"version":3,"names":["refractorRuby","require","module","exports","crystal","displayName","aliases","Prism","register","languages","extend","keyword","pattern","lookbehind","number","insertBefore","attribute","alias","inside","delimiter","rest","expansion"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/refractor/lang/crystal.js"],"sourcesContent":["'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = crystal\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\nfunction crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function(Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n    })\n    Prism.languages.insertBefore('crystal', 'string', {\n      attribute: {\n        pattern: /@\\[.+?\\]/,\n        alias: 'attr-name',\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.crystal\n        }\n      },\n      expansion: [\n        {\n          pattern: /\\{\\{.+?\\}\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{\\{|\\}\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        },\n        {\n          pattern: /\\{%.+?%\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{%|%\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        }\n      ]\n    })\n  })(Prism)\n}\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,WAAW,CAAC;AACxCC,MAAM,CAACC,OAAO,GAAGC,OAAO;AACxBA,OAAO,CAACC,WAAW,GAAG,SAAS;AAC/BD,OAAO,CAACE,OAAO,GAAG,EAAE;AACpB,SAASF,OAAOA,CAACG,KAAK,EAAE;EACtBA,KAAK,CAACC,QAAQ,CAACR,aAAa,CAAC;EAC5B,CAAC,UAASO,KAAK,EAAE;IAChBA,KAAK,CAACE,SAAS,CAACL,OAAO,GAAGG,KAAK,CAACE,SAAS,CAACC,MAAM,CAAC,MAAM,EAAE;MACvDC,OAAO,EAAE,CACP,gWAAgW,EAChW;QACEC,OAAO,EAAE,+BAA+B;QACxCC,UAAU,EAAE;MACd,CAAC,CACF;MACDC,MAAM,EAAE;IACV,CAAC,CAAC;IACFP,KAAK,CAACE,SAAS,CAACM,YAAY,CAAC,SAAS,EAAE,QAAQ,EAAE;MAChDC,SAAS,EAAE;QACTJ,OAAO,EAAE,UAAU;QACnBK,KAAK,EAAE,WAAW;QAClBC,MAAM,EAAE;UACNC,SAAS,EAAE;YACTP,OAAO,EAAE,UAAU;YACnBK,KAAK,EAAE;UACT,CAAC;UACDG,IAAI,EAAEb,KAAK,CAACE,SAAS,CAACL;QACxB;MACF,CAAC;MACDiB,SAAS,EAAE,CACT;QACET,OAAO,EAAE,aAAa;QACtBM,MAAM,EAAE;UACNC,SAAS,EAAE;YACTP,OAAO,EAAE,aAAa;YACtBK,KAAK,EAAE;UACT,CAAC;UACDG,IAAI,EAAEb,KAAK,CAACE,SAAS,CAACL;QACxB;MACF,CAAC,EACD;QACEQ,OAAO,EAAE,WAAW;QACpBM,MAAM,EAAE;UACNC,SAAS,EAAE;YACTP,OAAO,EAAE,WAAW;YACpBK,KAAK,EAAE;UACT,CAAC;UACDG,IAAI,EAAEb,KAAK,CAACE,SAAS,CAACL;QACxB;MACF,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC,EAAEG,KAAK,CAAC;AACX"},"metadata":{},"sourceType":"script","externalDependencies":[]}