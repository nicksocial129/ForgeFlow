{"ast":null,"code":"import{useNavigate}from'react-router-dom';import moment from'moment';import{styled}from'@mui/material/styles';import Table from'@mui/material/Table';import TableBody from'@mui/material/TableBody';import TableCell,{tableCellClasses}from'@mui/material/TableCell';import TableContainer from'@mui/material/TableContainer';import TableHead from'@mui/material/TableHead';import TableRow from'@mui/material/TableRow';import Paper from'@mui/material/Paper';import Chip from'@mui/material/Chip';import{Button,Stack,Typography}from'@mui/material';import FlowListMenu from'../button/FlowListMenu';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const StyledTableCell=styled(TableCell)(_ref=>{let{theme}=_ref;return{[\"&.\".concat(tableCellClasses.head)]:{backgroundColor:theme.palette.common.black,color:theme.palette.common.white},[\"&.\".concat(tableCellClasses.body)]:{fontSize:14}};});const StyledTableRow=styled(TableRow)(_ref2=>{let{theme}=_ref2;return{'&:nth-of-type(odd)':{backgroundColor:theme.palette.action.hover},// hide last border\n'&:last-child td, &:last-child th':{border:0}};});export const FlowListTable=_ref3=>{let{data,images,filterFunction,updateFlowsApi}=_ref3;const navigate=useNavigate();const goToCanvas=selectedChatflow=>{navigate(\"/canvas/\".concat(selectedChatflow.id));};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(TableContainer,{style:{marginTop:'30',border:1},component:Paper,children:/*#__PURE__*/_jsxs(Table,{sx:{minWidth:650},size:\"small\",\"aria-label\":\"a dense table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{sx:{marginTop:'10',backgroundColor:'primary'},children:[/*#__PURE__*/_jsx(StyledTableCell,{component:\"th\",scope:\"row\",style:{width:'20%'},children:\"Name\"},'0'),/*#__PURE__*/_jsx(StyledTableCell,{style:{width:'25%'},children:\"Category\"},'1'),/*#__PURE__*/_jsx(StyledTableCell,{style:{width:'30%'},children:\"Nodes\"},'2'),/*#__PURE__*/_jsx(StyledTableCell,{style:{width:'15%'},children:\"Last Modified Date\"},'3'),/*#__PURE__*/_jsx(StyledTableCell,{style:{width:'10%'},children:\"Actions\"},'4')]})}),/*#__PURE__*/_jsx(TableBody,{children:data.filter(filterFunction).map((row,index)=>/*#__PURE__*/_jsxs(StyledTableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{sx:{fontSize:'1.2rem',fontWeight:500,overflowWrap:'break-word',whiteSpace:'pre-line'},children:/*#__PURE__*/_jsx(Button,{onClick:()=>goToCanvas(row),sx:{textAlign:'left'},children:row.templateName||row.name})})},'0'),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',flexWrap:'wrap',marginTop:5},children:[\"\\xA0\",row.category&&row.category.split(';').map((tag,index)=>/*#__PURE__*/_jsx(Chip,{label:tag,style:{marginRight:5,marginBottom:5}},index))]})},'1'),/*#__PURE__*/_jsx(TableCell,{children:images[row.id]&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',flexWrap:'wrap',marginTop:5},children:[images[row.id].slice(0,images[row.id].length>5?5:images[row.id].length).map(img=>/*#__PURE__*/_jsx(\"div\",{style:{width:35,height:35,marginRight:5,borderRadius:'50%',backgroundColor:'white',marginTop:5},children:/*#__PURE__*/_jsx(\"img\",{style:{width:'100%',height:'100%',padding:5,objectFit:'contain'},alt:\"\",src:img})},img)),images[row.id].length>5&&/*#__PURE__*/_jsxs(Typography,{sx:{alignItems:'center',display:'flex',fontSize:'.8rem',fontWeight:200},children:[\"+ \",images[row.id].length-5,\" More\"]})]})},'2'),/*#__PURE__*/_jsx(TableCell,{children:moment(row.updatedDate).format('MMMM Do, YYYY')},'3'),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Stack,{direction:{xs:'column',sm:'row'},spacing:1,justifyContent:\"center\",alignItems:\"center\",children:/*#__PURE__*/_jsx(FlowListMenu,{chatflow:row,updateFlowsApi:updateFlowsApi})})},'4')]},index))})]})})});};","map":{"version":3,"names":["useNavigate","moment","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","Chip","Button","Stack","Typography","FlowListMenu","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StyledTableCell","_ref","theme","concat","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","_ref2","action","hover","border","FlowListTable","_ref3","data","images","filterFunction","updateFlowsApi","navigate","goToCanvas","selectedChatflow","id","children","style","marginTop","component","sx","minWidth","size","scope","width","filter","map","row","index","fontWeight","overflowWrap","whiteSpace","onClick","textAlign","templateName","name","display","flexDirection","flexWrap","category","split","tag","label","marginRight","marginBottom","slice","length","img","height","borderRadius","padding","objectFit","alt","src","alignItems","updatedDate","format","direction","xs","sm","spacing","justifyContent","chatflow"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/packages/ui/src/ui-component/table/FlowListTable.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { useNavigate } from 'react-router-dom'\nimport moment from 'moment'\nimport { styled } from '@mui/material/styles'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport Chip from '@mui/material/Chip'\nimport { Button, Stack, Typography } from '@mui/material'\nimport FlowListMenu from '../button/FlowListMenu'\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white\n    },\n    [`&.${tableCellClasses.body}`]: {\n        fontSize: 14\n    }\n}))\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n        border: 0\n    }\n}))\n\nexport const FlowListTable = ({ data, images, filterFunction, updateFlowsApi }) => {\n    const navigate = useNavigate()\n    const goToCanvas = (selectedChatflow) => {\n        navigate(`/canvas/${selectedChatflow.id}`)\n    }\n\n    return (\n        <>\n            <TableContainer style={{ marginTop: '30', border: 1 }} component={Paper}>\n                <Table sx={{ minWidth: 650 }} size='small' aria-label='a dense table'>\n                    <TableHead>\n                        <TableRow sx={{ marginTop: '10', backgroundColor: 'primary' }}>\n                            <StyledTableCell component='th' scope='row' style={{ width: '20%' }} key='0'>\n                                Name\n                            </StyledTableCell>\n                            <StyledTableCell style={{ width: '25%' }} key='1'>\n                                Category\n                            </StyledTableCell>\n                            <StyledTableCell style={{ width: '30%' }} key='2'>\n                                Nodes\n                            </StyledTableCell>\n                            <StyledTableCell style={{ width: '15%' }} key='3'>\n                                Last Modified Date\n                            </StyledTableCell>\n                            <StyledTableCell style={{ width: '10%' }} key='4'>\n                                Actions\n                            </StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {data.filter(filterFunction).map((row, index) => (\n                            <StyledTableRow key={index}>\n                                <TableCell key='0'>\n                                    <Typography\n                                        sx={{ fontSize: '1.2rem', fontWeight: 500, overflowWrap: 'break-word', whiteSpace: 'pre-line' }}\n                                    >\n                                        <Button onClick={() => goToCanvas(row)} sx={{ textAlign: 'left' }}>\n                                            {row.templateName || row.name}\n                                        </Button>\n                                    </Typography>\n                                </TableCell>\n                                <TableCell key='1'>\n                                    <div\n                                        style={{\n                                            display: 'flex',\n                                            flexDirection: 'row',\n                                            flexWrap: 'wrap',\n                                            marginTop: 5\n                                        }}\n                                    >\n                                        &nbsp;\n                                        {row.category &&\n                                            row.category\n                                                .split(';')\n                                                .map((tag, index) => (\n                                                    <Chip key={index} label={tag} style={{ marginRight: 5, marginBottom: 5 }} />\n                                                ))}\n                                    </div>\n                                </TableCell>\n                                <TableCell key='2'>\n                                    {images[row.id] && (\n                                        <div\n                                            style={{\n                                                display: 'flex',\n                                                flexDirection: 'row',\n                                                flexWrap: 'wrap',\n                                                marginTop: 5\n                                            }}\n                                        >\n                                            {images[row.id].slice(0, images[row.id].length > 5 ? 5 : images[row.id].length).map((img) => (\n                                                <div\n                                                    key={img}\n                                                    style={{\n                                                        width: 35,\n                                                        height: 35,\n                                                        marginRight: 5,\n                                                        borderRadius: '50%',\n                                                        backgroundColor: 'white',\n                                                        marginTop: 5\n                                                    }}\n                                                >\n                                                    <img\n                                                        style={{ width: '100%', height: '100%', padding: 5, objectFit: 'contain' }}\n                                                        alt=''\n                                                        src={img}\n                                                    />\n                                                </div>\n                                            ))}\n                                            {images[row.id].length > 5 && (\n                                                <Typography\n                                                    sx={{ alignItems: 'center', display: 'flex', fontSize: '.8rem', fontWeight: 200 }}\n                                                >\n                                                    + {images[row.id].length - 5} More\n                                                </Typography>\n                                            )}\n                                        </div>\n                                    )}\n                                </TableCell>\n                                <TableCell key='3'>{moment(row.updatedDate).format('MMMM Do, YYYY')}</TableCell>\n                                <TableCell key='4'>\n                                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={1} justifyContent='center' alignItems='center'>\n                                        <FlowListMenu chatflow={row} updateFlowsApi={updateFlowsApi} />\n                                    </Stack>\n                                </TableCell>\n                            </StyledTableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}\n\nFlowListTable.propTypes = {\n    data: PropTypes.array,\n    images: PropTypes.object,\n    filterFunction: PropTypes.func,\n    updateFlowsApi: PropTypes.object\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}