{"ast":null,"code":"module.exports = function (hljs) {\n  var VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  var CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    aliases: ['st'],\n    keywords: 'self super nil true false thisContext',\n    // only 6\n    contains: [hljs.COMMENT('\"', '\"'), hljs.APOS_STRING_MODE, {\n      className: 'type',\n      begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n      relevance: 0\n    }, {\n      begin: VAR_IDENT_RE + ':',\n      relevance: 0\n    }, hljs.C_NUMBER_MODE, SYMBOL, CHAR, {\n      // This looks more complicated than needed to avoid combinatorial\n      // explosion under V8. It effectively means `| var1 var2 ... |` with\n      // whitespace adjacent to `|` being optional.\n      begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n      returnBegin: true,\n      end: /\\|/,\n      illegal: /\\S/,\n      contains: [{\n        begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE\n      }]\n    }, {\n      begin: '\\\\#\\\\(',\n      end: '\\\\)',\n      contains: [hljs.APOS_STRING_MODE, CHAR, hljs.C_NUMBER_MODE, SYMBOL]\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","VAR_IDENT_RE","CHAR","className","begin","SYMBOL","UNDERSCORE_IDENT_RE","aliases","keywords","contains","COMMENT","APOS_STRING_MODE","relevance","C_NUMBER_MODE","returnBegin","end","illegal"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/react-code-blocks/node_modules/highlight.js/lib/languages/smalltalk.js"],"sourcesContent":["module.exports = function(hljs) {\n  var VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  var CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    aliases: ['st'],\n    keywords: 'self super nil true false thisContext', // only 6\n    contains: [\n      hljs.COMMENT('\"', '\"'),\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n        relevance: 0\n      },\n      {\n        begin: VAR_IDENT_RE + ':',\n        relevance: 0\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOL,\n      CHAR,\n      {\n        // This looks more complicated than needed to avoid combinatorial\n        // explosion under V8. It effectively means `| var1 var2 ... |` with\n        // whitespace adjacent to `|` being optional.\n        begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n        returnBegin: true, end: /\\|/,\n        illegal: /\\S/,\n        contains: [{begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE}]\n      },\n      {\n        begin: '\\\\#\\\\(', end: '\\\\)',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          CHAR,\n          hljs.C_NUMBER_MODE,\n          SYMBOL\n        ]\n      }\n    ]\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,YAAY,GAAG,oBAAoB;EACvC,IAAIC,IAAI,GAAG;IACTC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE;EACT,CAAC;EACD,IAAIC,MAAM,GAAG;IACXF,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,GAAG,GAAGJ,IAAI,CAACM;EACpB,CAAC;EACD,OAAO;IACLC,OAAO,EAAE,CAAC,IAAI,CAAC;IACfC,QAAQ,EAAE,uCAAuC;IAAE;IACnDC,QAAQ,EAAE,CACRT,IAAI,CAACU,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EACtBV,IAAI,CAACW,gBAAgB,EACrB;MACER,SAAS,EAAE,MAAM;MACjBC,KAAK,EAAE,uBAAuB;MAC9BQ,SAAS,EAAE;IACb,CAAC,EACD;MACER,KAAK,EAAEH,YAAY,GAAG,GAAG;MACzBW,SAAS,EAAE;IACb,CAAC,EACDZ,IAAI,CAACa,aAAa,EAClBR,MAAM,EACNH,IAAI,EACJ;MACE;MACA;MACA;MACAE,KAAK,EAAE,SAAS,GAAGH,YAAY,GAAG,OAAO,GAAGA,YAAY,GAAG,WAAW;MACtEa,WAAW,EAAE,IAAI;MAAEC,GAAG,EAAE,IAAI;MAC5BC,OAAO,EAAE,IAAI;MACbP,QAAQ,EAAE,CAAC;QAACL,KAAK,EAAE,YAAY,GAAGH;MAAY,CAAC;IACjD,CAAC,EACD;MACEG,KAAK,EAAE,QAAQ;MAAEW,GAAG,EAAE,KAAK;MAC3BN,QAAQ,EAAE,CACRT,IAAI,CAACW,gBAAgB,EACrBT,IAAI,EACJF,IAAI,CAACa,aAAa,EAClBR,MAAM;IAEV,CAAC;EAEL,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}