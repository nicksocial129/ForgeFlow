{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonWrapper = void 0;\nvar Wrapper_js_1 = require(\"../../core/Tree/Wrapper.js\");\nvar MmlNode_js_1 = require(\"../../core/MmlTree/MmlNode.js\");\nvar string_js_1 = require(\"../../util/string.js\");\nvar LENGTHS = __importStar(require(\"../../util/lengths.js\"));\nvar Styles_js_1 = require(\"../../util/Styles.js\");\nvar BBox_js_1 = require(\"../../util/BBox.js\");\nvar FontData_js_1 = require(\"./FontData.js\");\nvar SMALLSIZE = 2 / 18;\nfunction MathMLSpace(script, size) {\n  return script ? size < SMALLSIZE ? 0 : SMALLSIZE : size;\n}\nvar CommonWrapper = function (_super) {\n  __extends(CommonWrapper, _super);\n  function CommonWrapper(factory, node, parent) {\n    if (parent === void 0) {\n      parent = null;\n    }\n    var _this = _super.call(this, factory, node) || this;\n    _this.parent = null;\n    _this.removedStyles = null;\n    _this.styles = null;\n    _this.variant = '';\n    _this.bboxComputed = false;\n    _this.stretch = FontData_js_1.NOSTRETCH;\n    _this.font = null;\n    _this.parent = parent;\n    _this.font = factory.jax.font;\n    _this.bbox = BBox_js_1.BBox.zero();\n    _this.getStyles();\n    _this.getVariant();\n    _this.getScale();\n    _this.getSpace();\n    _this.childNodes = node.childNodes.map(function (child) {\n      var wrapped = _this.wrap(child);\n      if (wrapped.bbox.pwidth && (node.notParent || node.isKind('math'))) {\n        _this.bbox.pwidth = BBox_js_1.BBox.fullWidth;\n      }\n      return wrapped;\n    });\n    return _this;\n  }\n  Object.defineProperty(CommonWrapper.prototype, \"jax\", {\n    get: function () {\n      return this.factory.jax;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CommonWrapper.prototype, \"adaptor\", {\n    get: function () {\n      return this.factory.jax.adaptor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CommonWrapper.prototype, \"metrics\", {\n    get: function () {\n      return this.factory.jax.math.metrics;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CommonWrapper.prototype, \"fixesPWidth\", {\n    get: function () {\n      return !this.node.notParent && !this.node.isToken;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  CommonWrapper.prototype.wrap = function (node, parent) {\n    if (parent === void 0) {\n      parent = null;\n    }\n    var wrapped = this.factory.wrap(node, parent || this);\n    if (parent) {\n      parent.childNodes.push(wrapped);\n    }\n    this.jax.nodeMap.set(node, wrapped);\n    return wrapped;\n  };\n  CommonWrapper.prototype.getBBox = function (save) {\n    if (save === void 0) {\n      save = true;\n    }\n    if (this.bboxComputed) {\n      return this.bbox;\n    }\n    var bbox = save ? this.bbox : BBox_js_1.BBox.zero();\n    this.computeBBox(bbox);\n    this.bboxComputed = save;\n    return bbox;\n  };\n  CommonWrapper.prototype.getOuterBBox = function (save) {\n    var e_1, _a;\n    if (save === void 0) {\n      save = true;\n    }\n    var bbox = this.getBBox(save);\n    if (!this.styles) return bbox;\n    var obox = new BBox_js_1.BBox();\n    Object.assign(obox, bbox);\n    try {\n      for (var _b = __values(BBox_js_1.BBox.StyleAdjust), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n          name_1 = _d[0],\n          side = _d[1];\n        var x = this.styles.get(name_1);\n        if (x) {\n          obox[side] += this.length2em(x, 1, obox.rscale);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return obox;\n  };\n  CommonWrapper.prototype.computeBBox = function (bbox, recompute) {\n    var e_2, _a;\n    if (recompute === void 0) {\n      recompute = false;\n    }\n    bbox.empty();\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n        bbox.append(child.getOuterBBox());\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    bbox.clean();\n    if (this.fixesPWidth && this.setChildPWidths(recompute)) {\n      this.computeBBox(bbox, true);\n    }\n  };\n  CommonWrapper.prototype.setChildPWidths = function (recompute, w, clear) {\n    var e_3, _a;\n    if (w === void 0) {\n      w = null;\n    }\n    if (clear === void 0) {\n      clear = true;\n    }\n    if (recompute) {\n      return false;\n    }\n    if (clear) {\n      this.bbox.pwidth = '';\n    }\n    var changed = false;\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n        var cbox = child.getOuterBBox();\n        if (cbox.pwidth && child.setChildPWidths(recompute, w === null ? cbox.w : w, clear)) {\n          changed = true;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n    return changed;\n  };\n  CommonWrapper.prototype.invalidateBBox = function () {\n    if (this.bboxComputed) {\n      this.bboxComputed = false;\n      if (this.parent) {\n        this.parent.invalidateBBox();\n      }\n    }\n  };\n  CommonWrapper.prototype.copySkewIC = function (bbox) {\n    var first = this.childNodes[0];\n    if (first === null || first === void 0 ? void 0 : first.bbox.sk) {\n      bbox.sk = first.bbox.sk;\n    }\n    if (first === null || first === void 0 ? void 0 : first.bbox.dx) {\n      bbox.dx = first.bbox.dx;\n    }\n    var last = this.childNodes[this.childNodes.length - 1];\n    if (last === null || last === void 0 ? void 0 : last.bbox.ic) {\n      bbox.ic = last.bbox.ic;\n      bbox.w += bbox.ic;\n    }\n  };\n  CommonWrapper.prototype.getStyles = function () {\n    var styleString = this.node.attributes.getExplicit('style');\n    if (!styleString) return;\n    var style = this.styles = new Styles_js_1.Styles(styleString);\n    for (var i = 0, m = CommonWrapper.removeStyles.length; i < m; i++) {\n      var id = CommonWrapper.removeStyles[i];\n      if (style.get(id)) {\n        if (!this.removedStyles) this.removedStyles = {};\n        this.removedStyles[id] = style.get(id);\n        style.set(id, '');\n      }\n    }\n  };\n  CommonWrapper.prototype.getVariant = function () {\n    if (!this.node.isToken) return;\n    var attributes = this.node.attributes;\n    var variant = attributes.get('mathvariant');\n    if (!attributes.getExplicit('mathvariant')) {\n      var values = attributes.getList('fontfamily', 'fontweight', 'fontstyle');\n      if (this.removedStyles) {\n        var style = this.removedStyles;\n        if (style.fontFamily) values.family = style.fontFamily;\n        if (style.fontWeight) values.weight = style.fontWeight;\n        if (style.fontStyle) values.style = style.fontStyle;\n      }\n      if (values.fontfamily) values.family = values.fontfamily;\n      if (values.fontweight) values.weight = values.fontweight;\n      if (values.fontstyle) values.style = values.fontstyle;\n      if (values.weight && values.weight.match(/^\\d+$/)) {\n        values.weight = parseInt(values.weight) > 600 ? 'bold' : 'normal';\n      }\n      if (values.family) {\n        variant = this.explicitVariant(values.family, values.weight, values.style);\n      } else {\n        if (this.node.getProperty('variantForm')) variant = '-tex-variant';\n        variant = (CommonWrapper.BOLDVARIANTS[values.weight] || {})[variant] || variant;\n        variant = (CommonWrapper.ITALICVARIANTS[values.style] || {})[variant] || variant;\n      }\n    }\n    this.variant = variant;\n  };\n  CommonWrapper.prototype.explicitVariant = function (fontFamily, fontWeight, fontStyle) {\n    var style = this.styles;\n    if (!style) style = this.styles = new Styles_js_1.Styles();\n    style.set('fontFamily', fontFamily);\n    if (fontWeight) style.set('fontWeight', fontWeight);\n    if (fontStyle) style.set('fontStyle', fontStyle);\n    return '-explicitFont';\n  };\n  CommonWrapper.prototype.getScale = function () {\n    var scale = 1,\n      parent = this.parent;\n    var pscale = parent ? parent.bbox.scale : 1;\n    var attributes = this.node.attributes;\n    var scriptlevel = Math.min(attributes.get('scriptlevel'), 2);\n    var fontsize = attributes.get('fontsize');\n    var mathsize = this.node.isToken || this.node.isKind('mstyle') ? attributes.get('mathsize') : attributes.getInherited('mathsize');\n    if (scriptlevel !== 0) {\n      scale = Math.pow(attributes.get('scriptsizemultiplier'), scriptlevel);\n      var scriptminsize = this.length2em(attributes.get('scriptminsize'), .8, 1);\n      if (scale < scriptminsize) scale = scriptminsize;\n    }\n    if (this.removedStyles && this.removedStyles.fontSize && !fontsize) {\n      fontsize = this.removedStyles.fontSize;\n    }\n    if (fontsize && !attributes.getExplicit('mathsize')) {\n      mathsize = fontsize;\n    }\n    if (mathsize !== '1') {\n      scale *= this.length2em(mathsize, 1, 1);\n    }\n    this.bbox.scale = scale;\n    this.bbox.rscale = scale / pscale;\n  };\n  CommonWrapper.prototype.getSpace = function () {\n    var isTop = this.isTopEmbellished();\n    var hasSpacing = this.node.hasSpacingAttributes();\n    if (this.jax.options.mathmlSpacing || hasSpacing) {\n      isTop && this.getMathMLSpacing();\n    } else {\n      this.getTeXSpacing(isTop, hasSpacing);\n    }\n  };\n  CommonWrapper.prototype.getMathMLSpacing = function () {\n    var node = this.node.coreMO();\n    var child = node.coreParent();\n    var parent = child.parent;\n    if (!parent || !parent.isKind('mrow') || parent.childNodes.length === 1) return;\n    var attributes = node.attributes;\n    var isScript = attributes.get('scriptlevel') > 0;\n    this.bbox.L = attributes.isSet('lspace') ? Math.max(0, this.length2em(attributes.get('lspace'))) : MathMLSpace(isScript, node.lspace);\n    this.bbox.R = attributes.isSet('rspace') ? Math.max(0, this.length2em(attributes.get('rspace'))) : MathMLSpace(isScript, node.rspace);\n    var n = parent.childIndex(child);\n    if (n === 0) return;\n    var prev = parent.childNodes[n - 1];\n    if (!prev.isEmbellished) return;\n    var bbox = this.jax.nodeMap.get(prev).getBBox();\n    if (bbox.R) {\n      this.bbox.L = Math.max(0, this.bbox.L - bbox.R);\n    }\n  };\n  CommonWrapper.prototype.getTeXSpacing = function (isTop, hasSpacing) {\n    if (!hasSpacing) {\n      var space = this.node.texSpacing();\n      if (space) {\n        this.bbox.L = this.length2em(space);\n      }\n    }\n    if (isTop || hasSpacing) {\n      var attributes = this.node.coreMO().attributes;\n      if (attributes.isSet('lspace')) {\n        this.bbox.L = Math.max(0, this.length2em(attributes.get('lspace')));\n      }\n      if (attributes.isSet('rspace')) {\n        this.bbox.R = Math.max(0, this.length2em(attributes.get('rspace')));\n      }\n    }\n  };\n  CommonWrapper.prototype.isTopEmbellished = function () {\n    return this.node.isEmbellished && !(this.node.parent && this.node.parent.isEmbellished);\n  };\n  CommonWrapper.prototype.core = function () {\n    return this.jax.nodeMap.get(this.node.core());\n  };\n  CommonWrapper.prototype.coreMO = function () {\n    return this.jax.nodeMap.get(this.node.coreMO());\n  };\n  CommonWrapper.prototype.getText = function () {\n    var e_4, _a;\n    var text = '';\n    if (this.node.isToken) {\n      try {\n        for (var _b = __values(this.node.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          if (child instanceof MmlNode_js_1.TextNode) {\n            text += child.getText();\n          }\n        }\n      } catch (e_4_1) {\n        e_4 = {\n          error: e_4_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n      }\n    }\n    return text;\n  };\n  CommonWrapper.prototype.canStretch = function (direction) {\n    this.stretch = FontData_js_1.NOSTRETCH;\n    if (this.node.isEmbellished) {\n      var core = this.core();\n      if (core && core.node !== this.node) {\n        if (core.canStretch(direction)) {\n          this.stretch = core.stretch;\n        }\n      }\n    }\n    return this.stretch.dir !== 0;\n  };\n  CommonWrapper.prototype.getAlignShift = function () {\n    var _a;\n    var _b = (_a = this.node.attributes).getList.apply(_a, __spreadArray([], __read(MmlNode_js_1.indentAttributes), false)),\n      indentalign = _b.indentalign,\n      indentshift = _b.indentshift,\n      indentalignfirst = _b.indentalignfirst,\n      indentshiftfirst = _b.indentshiftfirst;\n    if (indentalignfirst !== 'indentalign') {\n      indentalign = indentalignfirst;\n    }\n    if (indentalign === 'auto') {\n      indentalign = this.jax.options.displayAlign;\n    }\n    if (indentshiftfirst !== 'indentshift') {\n      indentshift = indentshiftfirst;\n    }\n    if (indentshift === 'auto') {\n      indentshift = this.jax.options.displayIndent;\n      if (indentalign === 'right' && !indentshift.match(/^\\s*0[a-z]*\\s*$/)) {\n        indentshift = ('-' + indentshift.trim()).replace(/^--/, '');\n      }\n    }\n    var shift = this.length2em(indentshift, this.metrics.containerWidth);\n    return [indentalign, shift];\n  };\n  CommonWrapper.prototype.getAlignX = function (W, bbox, align) {\n    return align === 'right' ? W - (bbox.w + bbox.R) * bbox.rscale : align === 'left' ? bbox.L * bbox.rscale : (W - bbox.w * bbox.rscale) / 2;\n  };\n  CommonWrapper.prototype.getAlignY = function (H, D, h, d, align) {\n    return align === 'top' ? H - h : align === 'bottom' ? d - D : align === 'center' ? (H - h - (D - d)) / 2 : 0;\n  };\n  CommonWrapper.prototype.getWrapWidth = function (i) {\n    return this.childNodes[i].getBBox().w;\n  };\n  CommonWrapper.prototype.getChildAlign = function (_i) {\n    return 'left';\n  };\n  CommonWrapper.prototype.percent = function (m) {\n    return LENGTHS.percent(m);\n  };\n  CommonWrapper.prototype.em = function (m) {\n    return LENGTHS.em(m);\n  };\n  CommonWrapper.prototype.px = function (m, M) {\n    if (M === void 0) {\n      M = -LENGTHS.BIGDIMEN;\n    }\n    return LENGTHS.px(m, M, this.metrics.em);\n  };\n  CommonWrapper.prototype.length2em = function (length, size, scale) {\n    if (size === void 0) {\n      size = 1;\n    }\n    if (scale === void 0) {\n      scale = null;\n    }\n    if (scale === null) {\n      scale = this.bbox.scale;\n    }\n    return LENGTHS.length2em(length, size, scale, this.jax.pxPerEm);\n  };\n  CommonWrapper.prototype.unicodeChars = function (text, name) {\n    if (name === void 0) {\n      name = this.variant;\n    }\n    var chars = (0, string_js_1.unicodeChars)(text);\n    var variant = this.font.getVariant(name);\n    if (variant && variant.chars) {\n      var map_1 = variant.chars;\n      chars = chars.map(function (n) {\n        return ((map_1[n] || [])[3] || {}).smp || n;\n      });\n    }\n    return chars;\n  };\n  CommonWrapper.prototype.remapChars = function (chars) {\n    return chars;\n  };\n  CommonWrapper.prototype.mmlText = function (text) {\n    return this.node.factory.create('text').setText(text);\n  };\n  CommonWrapper.prototype.mmlNode = function (kind, properties, children) {\n    if (properties === void 0) {\n      properties = {};\n    }\n    if (children === void 0) {\n      children = [];\n    }\n    return this.node.factory.create(kind, properties, children);\n  };\n  CommonWrapper.prototype.createMo = function (text) {\n    var mmlFactory = this.node.factory;\n    var textNode = mmlFactory.create('text').setText(text);\n    var mml = mmlFactory.create('mo', {\n      stretchy: true\n    }, [textNode]);\n    mml.inheritAttributesFrom(this.node);\n    var node = this.wrap(mml);\n    node.parent = this;\n    return node;\n  };\n  CommonWrapper.prototype.getVariantChar = function (variant, n) {\n    var char = this.font.getChar(variant, n) || [0, 0, 0, {\n      unknown: true\n    }];\n    if (char.length === 3) {\n      char[3] = {};\n    }\n    return char;\n  };\n  CommonWrapper.kind = 'unknown';\n  CommonWrapper.styles = {};\n  CommonWrapper.removeStyles = ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant', 'font'];\n  CommonWrapper.skipAttributes = {\n    fontfamily: true,\n    fontsize: true,\n    fontweight: true,\n    fontstyle: true,\n    color: true,\n    background: true,\n    'class': true,\n    href: true,\n    style: true,\n    xmlns: true\n  };\n  CommonWrapper.BOLDVARIANTS = {\n    bold: {\n      normal: 'bold',\n      italic: 'bold-italic',\n      fraktur: 'bold-fraktur',\n      script: 'bold-script',\n      'sans-serif': 'bold-sans-serif',\n      'sans-serif-italic': 'sans-serif-bold-italic'\n    },\n    normal: {\n      bold: 'normal',\n      'bold-italic': 'italic',\n      'bold-fraktur': 'fraktur',\n      'bold-script': 'script',\n      'bold-sans-serif': 'sans-serif',\n      'sans-serif-bold-italic': 'sans-serif-italic'\n    }\n  };\n  CommonWrapper.ITALICVARIANTS = {\n    italic: {\n      normal: 'italic',\n      bold: 'bold-italic',\n      'sans-serif': 'sans-serif-italic',\n      'bold-sans-serif': 'sans-serif-bold-italic'\n    },\n    normal: {\n      italic: 'normal',\n      'bold-italic': 'bold',\n      'sans-serif-italic': 'sans-serif',\n      'sans-serif-bold-italic': 'bold-sans-serif'\n    }\n  };\n  return CommonWrapper;\n}(Wrapper_js_1.AbstractWrapper);\nexports.CommonWrapper = CommonWrapper;","map":{"version":3,"names":["Wrapper_js_1","require","MmlNode_js_1","string_js_1","LENGTHS","__importStar","Styles_js_1","BBox_js_1","FontData_js_1","SMALLSIZE","MathMLSpace","script","size","CommonWrapper","_super","__extends","factory","node","parent","_this","call","removedStyles","styles","variant","bboxComputed","stretch","NOSTRETCH","font","jax","bbox","BBox","zero","getStyles","getVariant","getScale","getSpace","childNodes","map","child","wrapped","wrap","pwidth","notParent","isKind","fullWidth","Object","defineProperty","prototype","get","adaptor","math","metrics","isToken","push","nodeMap","set","getBBox","save","computeBBox","getOuterBBox","obox","assign","_b","__values","StyleAdjust","_c","next","done","_d","__read","value","name_1","side","x","length2em","rscale","recompute","empty","append","clean","fixesPWidth","setChildPWidths","w","clear","changed","cbox","invalidateBBox","copySkewIC","first","sk","dx","last","length","ic","styleString","attributes","getExplicit","style","Styles","i","m","removeStyles","id","values","getList","fontFamily","family","fontWeight","weight","fontStyle","fontfamily","fontweight","fontstyle","match","parseInt","explicitVariant","getProperty","BOLDVARIANTS","ITALICVARIANTS","scale","pscale","scriptlevel","Math","min","fontsize","mathsize","getInherited","pow","scriptminsize","fontSize","isTop","isTopEmbellished","hasSpacing","hasSpacingAttributes","options","mathmlSpacing","getMathMLSpacing","getTeXSpacing","coreMO","coreParent","isScript","L","isSet","max","lspace","R","rspace","n","childIndex","prev","isEmbellished","space","texSpacing","core","getText","text","TextNode","canStretch","direction","dir","getAlignShift","_a","apply","__spreadArray","indentAttributes","indentalign","indentshift","indentalignfirst","indentshiftfirst","displayAlign","displayIndent","trim","replace","shift","containerWidth","getAlignX","W","align","getAlignY","H","D","h","d","getWrapWidth","getChildAlign","_i","percent","em","px","M","BIGDIMEN","pxPerEm","unicodeChars","name","chars","map_1","smp","remapChars","mmlText","create","setText","mmlNode","kind","properties","children","createMo","mmlFactory","textNode","mml","stretchy","inheritAttributesFrom","getVariantChar","char","getChar","unknown","skipAttributes","color","background","href","xmlns","bold","normal","italic","fraktur","AbstractWrapper","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/common/Wrapper.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonWrapper class\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractWrapper, WrapperClass} from '../../core/Tree/Wrapper.js';\nimport {PropertyList} from '../../core/Tree/Node.js';\nimport {MmlNode, TextNode, AbstractMmlNode, indentAttributes} from '../../core/MmlTree/MmlNode.js';\nimport {MmlMo} from '../../core/MmlTree/MmlNodes/mo.js';\nimport {Property} from '../../core/Tree/Node.js';\nimport {unicodeChars} from '../../util/string.js';\nimport * as LENGTHS from '../../util/lengths.js';\nimport {Styles} from '../../util/Styles.js';\nimport {StyleList} from '../../util/StyleList.js';\nimport {CommonOutputJax} from './OutputJax.js';\nimport {CommonWrapperFactory} from './WrapperFactory.js';\nimport {BBox} from '../../util/BBox.js';\nimport {FontData, DelimiterData, CharData, CharOptions, DIRECTION, NOSTRETCH} from './FontData.js';\n\n/*****************************************************************/\n\n/**\n * Shorthand for a dictionary object (an object of key:value pairs)\n */\nexport type StringMap = {[key: string]: string};\n\n/**\n * MathML spacing rules\n */\n/* tslint:disable-next-line:whitespace */\nconst SMALLSIZE = 2/18;\n\n/**\n * @param {boolean} script   The scriptlevel\n * @param {number} size      The space size\n * @return {number}          The size clamped to SMALLSIZE when scriptlevel > 0\n */\nfunction MathMLSpace(script: boolean, size: number): number {\n  return (script ? size < SMALLSIZE ? 0 : SMALLSIZE : size);\n}\n\nexport type Constructor<T> = new(...args: any[]) => T;\n\n/**\n * Shorthands for wrappers and their constructors\n */\nexport type AnyWrapper = CommonWrapper<any, any, any, any, any, any>;\nexport type AnyWrapperClass = CommonWrapperClass<any, any, any, any, any, any>;\nexport type WrapperConstructor = Constructor<AnyWrapper>;\n\n/*********************************************************/\n/**\n *  The CommonWrapper class interface\n *\n * @template J  The OutputJax type\n * @template W  The Wrapper type\n * @template C  The WrapperClass type\n * @template CC The CharOptions type\n * @template FD The FontData type\n */\nexport interface CommonWrapperClass<\n  J extends CommonOutputJax<any, any, any, W, CommonWrapperFactory<J, W, C, CC, DD, FD>, FD, any>,\n  W extends CommonWrapper<J, W, C, CC, DD, FD>,\n  C extends CommonWrapperClass<J, W, C, CC, DD, FD>,\n  CC extends CharOptions,\n  DD extends DelimiterData,\n  FD extends FontData<CC, any, DD>\n> extends WrapperClass<MmlNode, CommonWrapper<J, W, C, CC, DD, FD>> {\n  /**\n   * @override\n   */\n  new(factory: CommonWrapperFactory<J, W, C, CC, DD, FD>, node: MmlNode, ...args: any[]): W;\n}\n\n/*****************************************************************/\n/**\n *  The base CommonWrapper class\n *\n * @template J  The OutputJax type\n * @template W  The Wrapper type\n * @template C  The WrapperClass type\n * @template CC The CharOptions type\n * @template FD The FontData type\n */\nexport class CommonWrapper<\n  J extends CommonOutputJax<any, any, any, W, CommonWrapperFactory<J, W, C, CC, DD, FD>, FD, any>,\n  W extends CommonWrapper<J, W, C, CC, DD, FD>,\n  C extends CommonWrapperClass<J, W, C, CC, DD, FD>,\n  CC extends CharOptions,\n  DD extends DelimiterData,\n  FD extends FontData<CC, any, DD>\n> extends AbstractWrapper<MmlNode, CommonWrapper<J, W, C, CC, DD, FD>> {\n\n  /**\n   * The wrapper kind\n   */\n  public static kind: string = 'unknown';\n\n  /**\n   * Any styles needed for the class\n   */\n  public static styles: StyleList = {};\n\n  /**\n   * Styles that should not be passed on from style attribute\n   */\n  public static removeStyles: string[] = [\n    'fontSize', 'fontFamily', 'fontWeight',\n    'fontStyle', 'fontVariant', 'font'\n  ];\n\n  /**\n   * Non-MathML attributes on MathML elements NOT to be copied to the\n   * corresponding DOM elements.  If set to false, then the attribute\n   * WILL be copied.  Most of these (like the font attributes) are handled\n   * in other ways.\n   */\n  public static skipAttributes: {[name: string]: boolean} = {\n    fontfamily: true, fontsize: true, fontweight: true, fontstyle: true,\n    color: true, background: true,\n    'class': true, href: true, style: true,\n    xmlns: true\n  };\n\n  /**\n   * The translation of mathvariant to bold styles, or to remove\n   * bold from a mathvariant.\n   */\n  public static BOLDVARIANTS: {[name: string]: StringMap} =  {\n    bold: {\n      normal: 'bold',\n      italic: 'bold-italic',\n      fraktur: 'bold-fraktur',\n      script: 'bold-script',\n      'sans-serif': 'bold-sans-serif',\n      'sans-serif-italic': 'sans-serif-bold-italic'\n    },\n    normal: {\n      bold: 'normal',\n      'bold-italic': 'italic',\n      'bold-fraktur': 'fraktur',\n      'bold-script': 'script',\n      'bold-sans-serif': 'sans-serif',\n      'sans-serif-bold-italic': 'sans-serif-italic'\n    }\n  };\n\n  /**\n   * The translation of mathvariant to italic styles, or to remove\n   * italic from a mathvariant.\n   */\n  public static ITALICVARIANTS: {[name: string]: StringMap} = {\n    italic: {\n      normal: 'italic',\n      bold: 'bold-italic',\n      'sans-serif': 'sans-serif-italic',\n      'bold-sans-serif': 'sans-serif-bold-italic'\n    },\n    normal: {\n      italic: 'normal',\n      'bold-italic': 'bold',\n      'sans-serif-italic': 'sans-serif',\n      'sans-serif-bold-italic': 'bold-sans-serif'\n    }\n  };\n\n  /**\n   * The factory used to create more wrappers\n   */\n  protected factory: CommonWrapperFactory<J, W, C, CC, DD, FD>;\n\n  /**\n   * The parent of this node\n   */\n  public parent: W = null;\n\n  /**\n   * The children of this node\n   */\n  public childNodes: W[];\n\n  /**\n   * Styles that must be handled directly by the wrappers (mostly having to do with fonts)\n   */\n  protected removedStyles: StringMap = null;\n\n  /**\n   * The explicit styles set by the node\n   */\n  protected styles: Styles = null;\n\n  /**\n   * The mathvariant for this node\n   */\n  public variant: string = '';\n\n  /**\n   * The bounding box for this node\n   */\n  public bbox: BBox;\n  /**\n   * Whether the bounding box has been computed yet\n   */\n  protected bboxComputed: boolean = false;\n\n  /**\n   * Delimiter data for stretching this node (NOSTRETCH means not yet determined)\n   */\n  public stretch: DD = NOSTRETCH as DD;\n\n  /**\n   * Easy access to the font parameters\n   */\n  public font: FD = null;\n\n  /**\n   * Easy access to the output jax for this node\n   */\n  get jax() {\n    return this.factory.jax;\n  }\n\n  /**\n   * Easy access to the DOMAdaptor object\n   */\n  get adaptor() {\n    return this.factory.jax.adaptor;\n  }\n\n  /**\n   * Easy access to the metric data for this node\n   */\n  get metrics() {\n    return this.factory.jax.math.metrics;\n  }\n\n  /**\n   * True if children with percentage widths should be resolved by this container\n   */\n  get fixesPWidth() {\n    return !this.node.notParent && !this.node.isToken;\n  }\n\n  /*******************************************************************/\n\n  /**\n   * @override\n   */\n  constructor(factory: CommonWrapperFactory<J, W, C, CC, DD, FD>, node: MmlNode, parent: W = null) {\n    super(factory, node);\n    this.parent = parent;\n    this.font = factory.jax.font;\n    this.bbox = BBox.zero();\n    this.getStyles();\n    this.getVariant();\n    this.getScale();\n    this.getSpace();\n    this.childNodes = node.childNodes.map((child: MmlNode) => {\n      const wrapped = this.wrap(child);\n      if (wrapped.bbox.pwidth && (node.notParent || node.isKind('math'))) {\n        this.bbox.pwidth = BBox.fullWidth;\n      }\n      return wrapped;\n    });\n  }\n\n  /**\n   * @param {MmlNode} node  The node to the wrapped\n   * @param {W} parent  The wrapped parent node\n   * @return {W}  The newly wrapped node\n   */\n  public wrap(node: MmlNode, parent: W = null): W {\n    const wrapped = this.factory.wrap(node, parent || this);\n    if (parent) {\n      parent.childNodes.push(wrapped);\n    }\n    this.jax.nodeMap.set(node, wrapped);\n    return wrapped;\n  }\n\n  /*******************************************************************/\n  /**\n   * Return the wrapped node's bounding box, either the cached one, if it exists,\n   *   or computed directly if not.\n   *\n   * @param {boolean} save  Whether to cache the bbox or not (used for stretchy elements)\n   * @return {BBox}  The computed bounding box\n   */\n  public getBBox(save: boolean = true): BBox {\n    if (this.bboxComputed) {\n      return this.bbox;\n    }\n    const bbox = (save ? this.bbox : BBox.zero());\n    this.computeBBox(bbox);\n    this.bboxComputed = save;\n    return bbox;\n  }\n\n  /**\n   * Return the wrapped node's bounding box that includes borders and padding\n   *\n   * @param {boolean} save  Whether to cache the bbox or not (used for stretchy elements)\n   * @return {BBox}  The computed bounding box\n   */\n  public getOuterBBox(save: boolean = true): BBox {\n    const bbox = this.getBBox(save);\n    if (!this.styles) return bbox;\n    const obox = new BBox();\n    Object.assign(obox, bbox);\n    for (const [name, side] of BBox.StyleAdjust) {\n      const x = this.styles.get(name);\n      if (x) {\n        (obox as any)[side] += this.length2em(x, 1, obox.rscale);\n      }\n    }\n    return obox;\n  }\n\n  /**\n   * @param {BBox} bbox           The bounding box to modify (either this.bbox, or an empty one)\n   * @param {boolean} recompute   True if we are recomputing due to changes in children that have percentage widths\n   */\n  protected computeBBox(bbox: BBox, recompute: boolean = false) {\n    bbox.empty();\n    for (const child of this.childNodes) {\n      bbox.append(child.getOuterBBox());\n    }\n    bbox.clean();\n    if (this.fixesPWidth && this.setChildPWidths(recompute)) {\n      this.computeBBox(bbox, true);\n    }\n  }\n\n  /**\n   * Recursively resolve any percentage widths in the child nodes using the given\n   *   container width (or the child width, if none was passed).\n   *   Overriden for mtables in order to compute the width.\n   *\n   * @param {boolean} recompute  True if we are recomputing due to changes in children\n   * @param {(number|null)=} w   The width of the container (from which percentages are computed)\n   * @param {boolean=} clear     True if pwidth marker is to be cleared\n   * @return {boolean}           True if a percentage width was found\n   */\n  public setChildPWidths(recompute: boolean, w: (number | null) = null, clear: boolean = true): boolean {\n    if (recompute) {\n      return false;\n    }\n    if (clear) {\n      this.bbox.pwidth = '';\n    }\n    let changed = false;\n    for (const child of this.childNodes) {\n      const cbox = child.getOuterBBox();\n      if (cbox.pwidth && child.setChildPWidths(recompute, w === null ? cbox.w : w, clear)) {\n        changed = true;\n      }\n    }\n    return changed;\n  }\n\n  /**\n   * Mark BBox to be computed again (e.g., when an mo has stretched)\n   */\n  public invalidateBBox() {\n    if (this.bboxComputed) {\n      this.bboxComputed = false;\n      if (this.parent) {\n        this.parent.invalidateBBox();\n      }\n    }\n  }\n\n  /**\n   * Copy child skew and italic correction\n   *\n   * @param {BBox} bbox  The bounding box to modify\n   */\n  protected copySkewIC(bbox: BBox) {\n    const first = this.childNodes[0];\n    if (first?.bbox.sk) {\n      bbox.sk = first.bbox.sk;\n    }\n    if (first?.bbox.dx) {\n      bbox.dx = first.bbox.dx;\n    }\n    const last = this.childNodes[this.childNodes.length - 1];\n    if (last?.bbox.ic) {\n      bbox.ic = last.bbox.ic;\n      bbox.w += bbox.ic;\n    }\n  }\n\n  /*******************************************************************/\n\n  /**\n   * Add the style attribute, but remove any font-related styles\n   *   (since these are handled separately by the variant)\n   */\n  protected getStyles() {\n    const styleString = this.node.attributes.getExplicit('style') as string;\n    if (!styleString) return;\n    const style = this.styles = new Styles(styleString);\n    for (let i = 0, m = CommonWrapper.removeStyles.length; i < m; i++) {\n      const id = CommonWrapper.removeStyles[i];\n      if (style.get(id)) {\n        if (!this.removedStyles) this.removedStyles = {};\n        this.removedStyles[id] = style.get(id);\n        style.set(id, '');\n      }\n    }\n  }\n\n  /**\n   * Get the mathvariant (or construct one, if needed).\n   */\n  protected getVariant() {\n    if (!this.node.isToken) return;\n    const attributes = this.node.attributes;\n    let variant = attributes.get('mathvariant') as string;\n    if (!attributes.getExplicit('mathvariant')) {\n      const values = attributes.getList('fontfamily', 'fontweight', 'fontstyle') as StringMap;\n      if (this.removedStyles) {\n        const style = this.removedStyles;\n        if (style.fontFamily) values.family = style.fontFamily;\n        if (style.fontWeight) values.weight = style.fontWeight;\n        if (style.fontStyle)  values.style  = style.fontStyle;\n      }\n      if (values.fontfamily) values.family = values.fontfamily;\n      if (values.fontweight) values.weight = values.fontweight;\n      if (values.fontstyle)  values.style  = values.fontstyle;\n      if (values.weight && values.weight.match(/^\\d+$/)) {\n        values.weight = (parseInt(values.weight) > 600 ? 'bold' : 'normal');\n      }\n      if (values.family) {\n        variant = this.explicitVariant(values.family, values.weight, values.style);\n      } else {\n        if (this.node.getProperty('variantForm')) variant = '-tex-variant';\n        variant = (CommonWrapper.BOLDVARIANTS[values.weight] || {})[variant] || variant;\n        variant = (CommonWrapper.ITALICVARIANTS[values.style] || {})[variant] || variant;\n      }\n    }\n    this.variant = variant;\n  }\n\n  /**\n   * Set the CSS for a token element having an explicit font (rather than regular mathvariant).\n   *\n   * @param {string} fontFamily  The font family to use\n   * @param {string} fontWeight  The font weight to use\n   * @param {string} fontStyle   The font style to use\n   */\n  protected explicitVariant(fontFamily: string, fontWeight: string, fontStyle: string) {\n    let style = this.styles;\n    if (!style) style = this.styles = new Styles();\n    style.set('fontFamily', fontFamily);\n    if (fontWeight) style.set('fontWeight', fontWeight);\n    if (fontStyle)  style.set('fontStyle', fontStyle);\n    return '-explicitFont';\n  }\n\n  /**\n   * Determine the scaling factor to use for this wrapped node, and set the styles for it.\n   */\n  protected getScale() {\n    let scale = 1, parent = this.parent;\n    let pscale = (parent ? parent.bbox.scale : 1);\n    let attributes = this.node.attributes;\n    let scriptlevel = Math.min(attributes.get('scriptlevel') as number, 2);\n    let fontsize = attributes.get('fontsize');\n    let mathsize = (this.node.isToken || this.node.isKind('mstyle') ?\n                    attributes.get('mathsize') : attributes.getInherited('mathsize'));\n    //\n    // If scriptsize is non-zero, set scale based on scriptsizemultiplier\n    //\n    if (scriptlevel !== 0) {\n      scale = Math.pow(attributes.get('scriptsizemultiplier') as number, scriptlevel);\n      let scriptminsize = this.length2em(attributes.get('scriptminsize'), .8, 1);\n      if (scale < scriptminsize) scale = scriptminsize;\n    }\n    //\n    // If there is style=\"font-size:...\", and not fontsize attribute, use that as fontsize\n    //\n    if (this.removedStyles && this.removedStyles.fontSize && !fontsize) {\n      fontsize = this.removedStyles.fontSize;\n    }\n    //\n    // If there is a fontsize and no mathsize attribute, is that\n    //\n    if (fontsize && !attributes.getExplicit('mathsize')) {\n      mathsize = fontsize;\n    }\n    //\n    //  Incorporate the mathsize, if any\n    //\n    if (mathsize !== '1') {\n      scale *= this.length2em(mathsize, 1, 1);\n    }\n    //\n    // Record the scaling factors and set the element's CSS\n    //\n    this.bbox.scale = scale;\n    this.bbox.rscale = scale / pscale;\n  }\n\n  /**\n   * Sets the spacing based on TeX or MathML algorithm\n   */\n  protected getSpace() {\n    const isTop = this.isTopEmbellished();\n    const hasSpacing = this.node.hasSpacingAttributes();\n    if (this.jax.options.mathmlSpacing || hasSpacing) {\n      isTop && this.getMathMLSpacing();\n    } else {\n      this.getTeXSpacing(isTop, hasSpacing);\n    }\n  }\n\n  /**\n   * Get the spacing using MathML rules based on the core MO\n   */\n  protected getMathMLSpacing() {\n    const node = this.node.coreMO() as MmlMo;\n    //\n    // If the mo is not within a multi-node mrow, don't add space\n    //\n    const child = node.coreParent();\n    const parent = child.parent;\n    if (!parent || !parent.isKind('mrow') || parent.childNodes.length === 1) return;\n    //\n    // Get the lspace and rspace\n    //\n    const attributes = node.attributes;\n    const isScript = (attributes.get('scriptlevel') > 0);\n    this.bbox.L = (attributes.isSet('lspace') ?\n                   Math.max(0, this.length2em(attributes.get('lspace'))) :\n                   MathMLSpace(isScript, node.lspace));\n    this.bbox.R = (attributes.isSet('rspace') ?\n                   Math.max(0, this.length2em(attributes.get('rspace'))) :\n                   MathMLSpace(isScript, node.rspace));\n    //\n    // If there are two adjacent <mo>, use enough left space to make it\n    //   the maximum of the rspace of the first and lspace of the second\n    //\n    const n = parent.childIndex(child);\n    if (n === 0) return;\n    const prev = parent.childNodes[n - 1] as AbstractMmlNode;\n    if (!prev.isEmbellished) return;\n    const bbox = this.jax.nodeMap.get(prev).getBBox();\n    if (bbox.R) {\n      this.bbox.L = Math.max(0, this.bbox.L - bbox.R);\n    }\n  }\n\n  /**\n   * Get the spacing using the TeX rules\n   *\n   * @parm {boolean} isTop       True when this is a top-level embellished operator\n   * @parm {boolean} hasSpacing  True when there is an explicit or inherited 'form' attribute\n   */\n  protected getTeXSpacing(isTop: boolean, hasSpacing: boolean) {\n    if (!hasSpacing) {\n      const space = this.node.texSpacing();\n      if (space) {\n        this.bbox.L = this.length2em(space);\n      }\n    }\n    if (isTop || hasSpacing) {\n      const attributes = this.node.coreMO().attributes;\n      if (attributes.isSet('lspace')) {\n        this.bbox.L = Math.max(0, this.length2em(attributes.get('lspace')));\n      }\n      if (attributes.isSet('rspace')) {\n        this.bbox.R = Math.max(0, this.length2em(attributes.get('rspace')));\n      }\n    }\n  }\n\n  /**\n   * @return {boolean}   True if this is the top-most container of an embellished operator that is\n   *                       itself an embellished operator (the maximal embellished operator for its core)\n   */\n  protected isTopEmbellished(): boolean {\n    return (this.node.isEmbellished &&\n            !(this.node.parent && this.node.parent.isEmbellished));\n  }\n\n  /*******************************************************************/\n\n  /**\n   * @return {CommonWrapper}  The wrapper for this node's core node\n   */\n  public core(): CommonWrapper<J, W, C, CC, DD, FD> {\n    return this.jax.nodeMap.get(this.node.core());\n  }\n\n  /**\n   * @return {CommonWrapper}  The wrapper for this node's core <mo> node\n   */\n  public coreMO(): CommonWrapper<J, W, C, CC, DD, FD> {\n    return this.jax.nodeMap.get(this.node.coreMO());\n  }\n\n  /**\n   * @return {string}  For a token node, the combined text content of the node's children\n   */\n  public getText(): string {\n    let text = '';\n    if (this.node.isToken) {\n      for (const child of this.node.childNodes) {\n        if (child instanceof TextNode) {\n          text += child.getText();\n        }\n      }\n    }\n    return text;\n  }\n\n  /**\n   * @param {DIRECTION} direction  The direction to stretch this node\n   * @return {boolean}             Whether the node can stretch in that direction\n   */\n  public canStretch(direction: DIRECTION): boolean {\n    this.stretch = NOSTRETCH as DD;\n    if (this.node.isEmbellished) {\n      let core = this.core();\n      if (core && core.node !== this.node) {\n        if (core.canStretch(direction)) {\n          this.stretch = core.stretch;\n        }\n      }\n    }\n    return this.stretch.dir !== DIRECTION.None;\n  }\n\n  /**\n   * @return {[string, number]}  The alignment and indentation shift for the expression\n   */\n  protected getAlignShift(): [string, number] {\n    let {indentalign, indentshift, indentalignfirst, indentshiftfirst} =\n      this.node.attributes.getList(...indentAttributes) as StringMap;\n    if (indentalignfirst !== 'indentalign') {\n      indentalign = indentalignfirst;\n    }\n    if (indentalign === 'auto') {\n      indentalign = this.jax.options.displayAlign;\n    }\n    if (indentshiftfirst !== 'indentshift') {\n      indentshift = indentshiftfirst;\n    }\n    if (indentshift === 'auto') {\n      indentshift = this.jax.options.displayIndent;\n      if (indentalign === 'right' && !indentshift.match(/^\\s*0[a-z]*\\s*$/)) {\n        indentshift = ('-' + indentshift.trim()).replace(/^--/, '');\n      }\n    }\n    const shift = this.length2em(indentshift, this.metrics.containerWidth);\n    return [indentalign, shift] as [string, number];\n  }\n\n  /**\n   * @param {number} W       The total width\n   * @param {BBox} bbox      The bbox to be aligned\n   * @param {string} align   How to align (left, center, right)\n   * @return {number}        The x position of the aligned width\n   */\n  protected getAlignX(W: number, bbox: BBox, align: string): number {\n    return (align === 'right' ? W - (bbox.w + bbox.R) * bbox.rscale :\n            align === 'left' ? bbox.L * bbox.rscale :\n            (W - bbox.w * bbox.rscale) / 2);\n  }\n\n  /**\n   * @param {number} H        The total height\n   * @param {number} D        The total depth\n   * @param {number} h        The height to be aligned\n   * @param {number} d        The depth to be aligned\n   * @param {string} align    How to align (top, bottom, center, axis, baseline)\n   * @return {number}         The y position of the aligned baseline\n   */\n  protected getAlignY(H: number, D: number, h: number, d: number, align: string): number {\n    return (align === 'top' ? H - h :\n            align === 'bottom' ? d - D :\n            align === 'center' ? ((H - h) - (D - d)) / 2 :\n            0); // baseline and axis\n  }\n\n  /**\n   * @param {number} i   The index of the child element whose container is needed\n   * @return {number}    The inner width as a container (for percentage widths)\n   */\n  public getWrapWidth(i: number): number {\n    return this.childNodes[i].getBBox().w;\n  }\n\n  /**\n   * @param {number} i   The index of the child element whose container is needed\n   * @return {string}    The alignment child element\n   */\n  public getChildAlign(_i: number): string {\n    return 'left';\n  }\n\n  /*******************************************************************/\n  /*\n   * Easy access to some utility routines\n   */\n\n  /**\n   * @param {number} m  A number to be shown as a percent\n   * @return {string}  The number m as a percent\n   */\n  protected percent(m: number): string {\n    return LENGTHS.percent(m);\n  }\n\n  /**\n   * @param {number} m  A number to be shown in ems\n   * @return {string}  The number with units of ems\n   */\n  protected em(m: number): string {\n    return LENGTHS.em(m);\n  }\n\n  /**\n   * @param {number} m   A number of em's to be shown as pixels\n   * @param {number} M   The minimum number of pixels to allow\n   * @return {string}  The number with units of px\n   */\n  protected px(m: number, M: number = -LENGTHS.BIGDIMEN): string {\n    return LENGTHS.px(m, M, this.metrics.em);\n  }\n\n  /**\n   * @param {Property} length  A dimension (giving number and units) or number to be converted to ems\n   * @param {number} size  The default size of the dimension (for percentage values)\n   * @param {number} scale  The current scaling factor (to handle absolute units)\n   * @return {number}  The dimension converted to ems\n   */\n  protected length2em(length: Property, size: number = 1, scale: number = null): number {\n    if (scale === null) {\n      scale = this.bbox.scale;\n    }\n    return LENGTHS.length2em(length as string, size, scale, this.jax.pxPerEm);\n  }\n\n  /**\n   * @param {string} text   The text to turn into unicode locations\n   * @param {string} name   The name of the variant for the characters\n   * @return {number[]}     Array of numbers represeting the string's unicode character positions\n   */\n  protected unicodeChars(text: string, name: string = this.variant): number[] {\n    let chars = unicodeChars(text);\n    //\n    //  Remap to Math Alphanumerics block\n    //\n    const variant = this.font.getVariant(name);\n    if (variant && variant.chars) {\n      const map = variant.chars;\n      //\n      //  Is map[n] doesn't exist, (map[n] || []) still gives an CharData array.\n      //  If the array doesn't have a CharOptions element use {} instead.\n      //  Then check if the options has an smp property, which gives\n      //    the Math Alphabet mapping for this character.\n      //  Otherwise use the original code point, n.\n      //\n      chars = chars.map((n) => ((map[n] || [])[3] || {}).smp || n);\n    }\n    return chars;\n  }\n\n  /**\n   * @param {number[]} chars    The array of unicode character numbers to remap\n   * @return {number[]}         The converted array\n   */\n  public remapChars(chars: number[]): number[] {\n    return chars;\n  }\n\n  /**\n   * @param {string} text   The text from which to create a TextNode object\n   * @return {TextNode}     The TextNode with the given text\n   */\n  public mmlText(text: string): TextNode {\n    return ((this.node as AbstractMmlNode).factory.create('text') as TextNode).setText(text);\n  }\n\n  /**\n   * @param {string} kind             The kind of MmlNode to create\n   * @param {ProperyList} properties  The properties to set initially\n   * @param {MmlNode[]} children      The child nodes to add to the created node\n   * @return {MmlNode}                The newly created MmlNode\n   */\n  public mmlNode(kind: string, properties: PropertyList = {}, children: MmlNode[] = []): MmlNode {\n    return (this.node as AbstractMmlNode).factory.create(kind, properties, children);\n  }\n\n  /**\n   * Create an mo wrapper with the given text,\n   *   link it in, and give it the right defaults.\n   *\n   * @param {string} text     The text for the wrapped element\n   * @return {CommonWrapper}  The wrapped MmlMo node\n   */\n  protected createMo(text: string): CommonWrapper<J, W, C, CC, DD, FD> {\n    const mmlFactory = (this.node as AbstractMmlNode).factory;\n    const textNode = (mmlFactory.create('text') as TextNode).setText(text);\n    const mml = mmlFactory.create('mo', {stretchy: true}, [textNode]);\n    mml.inheritAttributesFrom(this.node);\n    const node = this.wrap(mml);\n    node.parent = this as any as W;\n    return node;\n  }\n\n  /**\n   * @param {string} variant   The variant in which to look for the character\n   * @param {number} n         The number of the character to look up\n   * @return {CharData}        The full CharData object, with CharOptions guaranteed to be defined\n   */\n  protected getVariantChar(variant: string, n: number): CharData<CC> {\n    const char = this.font.getChar(variant, n) || [0, 0, 0, {unknown: true} as CC];\n    if (char.length === 3) {\n      (char as any)[3] = {};\n    }\n    return char as [number, number, number, CC];\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}