{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FlalignItem = exports.MultlineItem = void 0;\nvar BaseItems_js_1 = require(\"../base/BaseItems.js\");\nvar ParseUtil_js_1 = __importDefault(require(\"../ParseUtil.js\"));\nvar NodeUtil_js_1 = __importDefault(require(\"../NodeUtil.js\"));\nvar TexError_js_1 = __importDefault(require(\"../TexError.js\"));\nvar TexConstants_js_1 = require(\"../TexConstants.js\");\nvar MultlineItem = function (_super) {\n  __extends(MultlineItem, _super);\n  function MultlineItem(factory) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var _this = _super.call(this, factory) || this;\n    _this.factory.configuration.tags.start('multline', true, args[0]);\n    return _this;\n  }\n  Object.defineProperty(MultlineItem.prototype, \"kind\", {\n    get: function () {\n      return 'multline';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MultlineItem.prototype.EndEntry = function () {\n    if (this.table.length) {\n      ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);\n    }\n    var shove = this.getProperty('shove');\n    var mtd = this.create('node', 'mtd', this.nodes, shove ? {\n      columnalign: shove\n    } : {});\n    this.setProperty('shove', null);\n    this.row.push(mtd);\n    this.Clear();\n  };\n  MultlineItem.prototype.EndRow = function () {\n    if (this.row.length !== 1) {\n      throw new TexError_js_1.default('MultlineRowsOneCol', 'The rows within the %1 environment must have exactly one column', 'multline');\n    }\n    var row = this.create('node', 'mtr', this.row);\n    this.table.push(row);\n    this.row = [];\n  };\n  MultlineItem.prototype.EndTable = function () {\n    _super.prototype.EndTable.call(this);\n    if (this.table.length) {\n      var m = this.table.length - 1,\n        label = -1;\n      if (!NodeUtil_js_1.default.getAttribute(NodeUtil_js_1.default.getChildren(this.table[0])[0], 'columnalign')) {\n        NodeUtil_js_1.default.setAttribute(NodeUtil_js_1.default.getChildren(this.table[0])[0], 'columnalign', TexConstants_js_1.TexConstant.Align.LEFT);\n      }\n      if (!NodeUtil_js_1.default.getAttribute(NodeUtil_js_1.default.getChildren(this.table[m])[0], 'columnalign')) {\n        NodeUtil_js_1.default.setAttribute(NodeUtil_js_1.default.getChildren(this.table[m])[0], 'columnalign', TexConstants_js_1.TexConstant.Align.RIGHT);\n      }\n      var tag = this.factory.configuration.tags.getTag();\n      if (tag) {\n        label = this.arraydef.side === TexConstants_js_1.TexConstant.Align.LEFT ? 0 : this.table.length - 1;\n        var mtr = this.table[label];\n        var mlabel = this.create('node', 'mlabeledtr', [tag].concat(NodeUtil_js_1.default.getChildren(mtr)));\n        NodeUtil_js_1.default.copyAttributes(mtr, mlabel);\n        this.table[label] = mlabel;\n      }\n    }\n    this.factory.configuration.tags.end();\n  };\n  return MultlineItem;\n}(BaseItems_js_1.ArrayItem);\nexports.MultlineItem = MultlineItem;\nvar FlalignItem = function (_super) {\n  __extends(FlalignItem, _super);\n  function FlalignItem(factory, name, numbered, padded, center) {\n    var _this = _super.call(this, factory) || this;\n    _this.name = name;\n    _this.numbered = numbered;\n    _this.padded = padded;\n    _this.center = center;\n    _this.factory.configuration.tags.start(name, numbered, numbered);\n    return _this;\n  }\n  Object.defineProperty(FlalignItem.prototype, \"kind\", {\n    get: function () {\n      return 'flalign';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  FlalignItem.prototype.EndEntry = function () {\n    _super.prototype.EndEntry.call(this);\n    var n = this.getProperty('xalignat');\n    if (!n) return;\n    if (this.row.length > n) {\n      throw new TexError_js_1.default('XalignOverflow', 'Extra %1 in row of %2', '&', this.name);\n    }\n  };\n  FlalignItem.prototype.EndRow = function () {\n    var cell;\n    var row = this.row;\n    var n = this.getProperty('xalignat');\n    while (row.length < n) {\n      row.push(this.create('node', 'mtd'));\n    }\n    this.row = [];\n    if (this.padded) {\n      this.row.push(this.create('node', 'mtd'));\n    }\n    while (cell = row.shift()) {\n      this.row.push(cell);\n      cell = row.shift();\n      if (cell) this.row.push(cell);\n      if (row.length || this.padded) {\n        this.row.push(this.create('node', 'mtd'));\n      }\n    }\n    if (this.row.length > this.maxrow) {\n      this.maxrow = this.row.length;\n    }\n    _super.prototype.EndRow.call(this);\n    var mtr = this.table[this.table.length - 1];\n    if (this.getProperty('zeroWidthLabel') && mtr.isKind('mlabeledtr')) {\n      var mtd = NodeUtil_js_1.default.getChildren(mtr)[0];\n      var side = this.factory.configuration.options['tagSide'];\n      var def = __assign({\n        width: 0\n      }, side === 'right' ? {\n        lspace: '-1width'\n      } : {});\n      var mpadded = this.create('node', 'mpadded', NodeUtil_js_1.default.getChildren(mtd), def);\n      mtd.setChildren([mpadded]);\n    }\n  };\n  FlalignItem.prototype.EndTable = function () {\n    _super.prototype.EndTable.call(this);\n    if (this.center) {\n      if (this.maxrow <= 2) {\n        var def = this.arraydef;\n        delete def.width;\n        delete this.global.indentalign;\n      }\n    }\n  };\n  return FlalignItem;\n}(BaseItems_js_1.EqnArrayItem);\nexports.FlalignItem = FlalignItem;","map":{"version":3,"names":["BaseItems_js_1","require","ParseUtil_js_1","__importDefault","NodeUtil_js_1","TexError_js_1","TexConstants_js_1","MultlineItem","_super","__extends","factory","args","_i","arguments","length","_this","call","configuration","tags","start","Object","defineProperty","prototype","get","EndEntry","table","default","fixInitialMO","nodes","shove","getProperty","mtd","create","columnalign","setProperty","row","push","Clear","EndRow","EndTable","m","label","getAttribute","getChildren","setAttribute","TexConstant","Align","LEFT","RIGHT","tag","getTag","arraydef","side","mtr","mlabel","concat","copyAttributes","end","ArrayItem","exports","FlalignItem","name","numbered","padded","center","n","cell","shift","maxrow","isKind","options","def","__assign","width","lspace","mpadded","setChildren","global","indentalign","EqnArrayItem"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/input/tex/ams/AmsItems.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview StackItems needed for parsing AMS math commands.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {ArrayItem, EqnArrayItem} from '../base/BaseItems.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport TexError from '../TexError.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\n\n/**\n * Item dealing with multiline environments as a special case of arrays. Note,\n * that all other AMS equation environments (e.g., align, split) can be handled\n * by the regular EqnArrayItem class.\n *\n * Handles tagging information according to the given tagging style.\n */\nexport class MultlineItem extends ArrayItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: any, ...args: any[]) {\n    super(factory);\n    this.factory.configuration.tags.start('multline', true, args[0]);\n  }\n\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'multline';\n  }\n\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    if (this.table.length) {\n      ParseUtil.fixInitialMO(this.factory.configuration, this.nodes);\n    }\n    const shove = this.getProperty('shove');\n    const mtd = this.create('node',\n                            'mtd', this.nodes, shove ? {columnalign: shove} : {});\n    this.setProperty('shove', null);\n    this.row.push(mtd);\n    this.Clear();\n  }\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    if (this.row.length !== 1) {\n      // @test MultlineRowsOneCol\n      throw new TexError(\n        'MultlineRowsOneCol',\n        'The rows within the %1 environment must have exactly one column',\n        'multline');\n    }\n    let row = this.create('node', 'mtr', this.row);\n    this.table.push(row);\n    this.row = [];\n  }\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    super.EndTable();\n    if (this.table.length) {\n      let m = this.table.length - 1, label = -1;\n      if (!NodeUtil.getAttribute(\n        NodeUtil.getChildren(this.table[0])[0], 'columnalign')) {\n        NodeUtil.setAttribute(NodeUtil.getChildren(this.table[0])[0],\n                              'columnalign', TexConstant.Align.LEFT);\n      }\n      if (!NodeUtil.getAttribute(\n        NodeUtil.getChildren(this.table[m])[0], 'columnalign')) {\n        NodeUtil.setAttribute(NodeUtil.getChildren(this.table[m])[0],\n                              'columnalign', TexConstant.Align.RIGHT);\n      }\n      let tag = this.factory.configuration.tags.getTag();\n      if (tag) {\n        label = (this.arraydef.side === TexConstant.Align.LEFT ? 0 : this.table.length - 1);\n        const mtr = this.table[label];\n        const mlabel = this.create('node', 'mlabeledtr',\n                                   [tag].concat(NodeUtil.getChildren(mtr)));\n        NodeUtil.copyAttributes(mtr, mlabel);\n        this.table[label] = mlabel;\n      }\n    }\n    this.factory.configuration.tags.end();\n  }\n}\n\n/**\n * StackItem for handling flalign, xalignat, and xxalignat environments.\n */\nexport class FlalignItem extends EqnArrayItem {\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'flalign';\n  }\n\n\n  /**\n   * @override\n   */\n  constructor(factory: any, public name: string, public numbered: boolean,\n              public padded: boolean, public center: boolean) {\n    super(factory);\n    this.factory.configuration.tags.start(name, numbered, numbered);\n  }\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    super.EndEntry();\n    const n = this.getProperty('xalignat') as number;\n    if (!n) return;\n    if (this.row.length > n) {\n      throw new TexError('XalignOverflow', 'Extra %1 in row of %2', '&', this.name);\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    let cell: MmlNode;\n    let row = this.row;\n    //\n    //  For xalignat and xxalignat, pad the row to the expected number if it is too short.\n    //\n    const n = this.getProperty('xalignat') as number;\n    while (row.length < n) {\n      row.push(this.create('node', 'mtd'));\n    }\n    //\n    //  Insert padding cells between pairs of entries, as needed for \"fit\" columns,\n    //    and include initial and end cells if that is needed.\n    //\n    this.row = [];\n    if (this.padded) {\n      this.row.push(this.create('node', 'mtd'));\n    }\n    while ((cell = row.shift())) {\n      this.row.push(cell);\n      cell = row.shift();\n      if (cell) this.row.push(cell);\n      if (row.length || this.padded) {\n        this.row.push(this.create('node', 'mtd'));\n      }\n    }\n    //\n    if (this.row.length > this.maxrow) {\n      this.maxrow = this.row.length;\n    }\n    super.EndRow();\n    //\n    // For full-width environments with labels that aren't supposed to take up space,\n    //   move the label into a zero-width mpadded element that laps in the proper direction.\n    //\n    const mtr = this.table[this.table.length - 1];\n    if (this.getProperty('zeroWidthLabel') && mtr.isKind('mlabeledtr')) {\n      const mtd = NodeUtil.getChildren(mtr)[0];\n      const side = this.factory.configuration.options['tagSide'];\n      const def = {width: 0, ...(side === 'right' ? {lspace: '-1width'} : {})};\n      const mpadded = this.create('node', 'mpadded', NodeUtil.getChildren(mtd), def);\n      mtd.setChildren([mpadded]);\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    super.EndTable();\n    if (this.center) {\n      //\n      //  If there is only one equation (one pair):\n      //    Don't make it 100%, and don't change the indentalign.\n      //\n      if (this.maxrow <= 2) {\n        const def = this.arraydef;\n        delete def.width;\n        delete this.global.indentalign;\n      }\n    }\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}