{"ast":null,"code":"import{DataGrid}from'@mui/x-data-grid';import{IconPlus}from'@tabler/icons';import{Button}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const Grid=_ref=>{let{columns,rows,style,disabled=false,onRowUpdate,addNewRow}=_ref;const handleProcessRowUpdate=newRow=>{onRowUpdate(newRow);return newRow;};return/*#__PURE__*/_jsxs(_Fragment,{children:[!disabled&&/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:addNewRow,startIcon:/*#__PURE__*/_jsx(IconPlus,{}),children:\"Add Item\"}),rows&&columns&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:10,height:300,width:'100%',...style},children:/*#__PURE__*/_jsx(DataGrid,{processRowUpdate:handleProcessRowUpdate,isCellEditable:()=>{return!disabled;},onProcessRowUpdateError:error=>console.error(error),rows:rows,columns:columns})})]});};","map":{"version":3,"names":["DataGrid","IconPlus","Button","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Grid","_ref","columns","rows","style","disabled","onRowUpdate","addNewRow","handleProcessRowUpdate","newRow","children","variant","onClick","startIcon","marginTop","height","width","processRowUpdate","isCellEditable","onProcessRowUpdateError","error","console"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/packages/ui/src/ui-component/grid/Grid.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { DataGrid } from '@mui/x-data-grid'\nimport { IconPlus } from '@tabler/icons'\nimport { Button } from '@mui/material'\n\nexport const Grid = ({ columns, rows, style, disabled = false, onRowUpdate, addNewRow }) => {\n    const handleProcessRowUpdate = (newRow) => {\n        onRowUpdate(newRow)\n        return newRow\n    }\n\n    return (\n        <>\n            {!disabled && (\n                <Button variant='outlined' onClick={addNewRow} startIcon={<IconPlus />}>\n                    Add Item\n                </Button>\n            )}\n            {rows && columns && (\n                <div style={{ marginTop: 10, height: 300, width: '100%', ...style }}>\n                    <DataGrid\n                        processRowUpdate={handleProcessRowUpdate}\n                        isCellEditable={() => {\n                            return !disabled\n                        }}\n                        onProcessRowUpdateError={(error) => console.error(error)}\n                        rows={rows}\n                        columns={columns}\n                    />\n                </div>\n            )}\n        </>\n    )\n}\n\nGrid.propTypes = {\n    rows: PropTypes.array,\n    columns: PropTypes.array,\n    style: PropTypes.any,\n    disabled: PropTypes.bool,\n    addNewRow: PropTypes.func,\n    onRowUpdate: PropTypes.func\n}\n"],"mappings":"AACA,OAASA,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,QAAQ,KAAQ,eAAe,CACxC,OAASC,MAAM,KAAQ,eAAe,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEtC,MAAO,MAAM,CAAAC,IAAI,CAAGC,IAAA,EAAwE,IAAvE,CAAEC,OAAO,CAAEC,IAAI,CAAEC,KAAK,CAAEC,QAAQ,CAAG,KAAK,CAAEC,WAAW,CAAEC,SAAU,CAAC,CAAAN,IAAA,CACnF,KAAM,CAAAO,sBAAsB,CAAIC,MAAM,EAAK,CACvCH,WAAW,CAACG,MAAM,CAAC,CACnB,MAAO,CAAAA,MAAM,CACjB,CAAC,CAED,mBACIV,KAAA,CAAAF,SAAA,EAAAa,QAAA,EACK,CAACL,QAAQ,eACNV,IAAA,CAACF,MAAM,EAACkB,OAAO,CAAC,UAAU,CAACC,OAAO,CAAEL,SAAU,CAACM,SAAS,cAAElB,IAAA,CAACH,QAAQ,GAAE,CAAE,CAAAkB,QAAA,CAAC,UAExE,CAAQ,CACX,CACAP,IAAI,EAAID,OAAO,eACZP,IAAA,QAAKS,KAAK,CAAE,CAAEU,SAAS,CAAE,EAAE,CAAEC,MAAM,CAAE,GAAG,CAAEC,KAAK,CAAE,MAAM,CAAE,GAAGZ,KAAM,CAAE,CAAAM,QAAA,cAChEf,IAAA,CAACJ,QAAQ,EACL0B,gBAAgB,CAAET,sBAAuB,CACzCU,cAAc,CAAEA,CAAA,GAAM,CAClB,MAAO,CAACb,QAAQ,CACpB,CAAE,CACFc,uBAAuB,CAAGC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAE,CACzDjB,IAAI,CAAEA,IAAK,CACXD,OAAO,CAAEA,OAAQ,CACpB,CAAC,CACD,CACR,EACH,CAAC,CAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}