{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmtable = void 0;\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\nvar mtable_js_1 = require(\"../../common/Wrappers/mtable.js\");\nvar mtable_js_2 = require(\"../../../core/MmlTree/MmlNodes/mtable.js\");\nvar CLASSPREFIX = 'mjx-';\nvar SVGmtable = function (_super) {\n  __extends(SVGmtable, _super);\n  function SVGmtable(factory, node, parent) {\n    if (parent === void 0) {\n      parent = null;\n    }\n    var _this = _super.call(this, factory, node, parent) || this;\n    var def = {\n      'data-labels': true\n    };\n    if (_this.isTop) {\n      def.transform = 'matrix(1 0 0 -1 0 0)';\n    }\n    _this.labels = _this.svg('g', def);\n    return _this;\n  }\n  SVGmtable.prototype.toSVG = function (parent) {\n    var svg = this.standardSVGnode(parent);\n    this.placeRows(svg);\n    this.handleColumnLines(svg);\n    this.handleRowLines(svg);\n    this.handleFrame(svg);\n    var dx = this.handlePWidth(svg);\n    this.handleLabels(svg, parent, dx);\n  };\n  SVGmtable.prototype.placeRows = function (svg) {\n    var _a, _b, _c;\n    var equal = this.node.attributes.get('equalrows');\n    var _d = this.getTableData(),\n      H = _d.H,\n      D = _d.D;\n    var HD = this.getEqualRowHeight();\n    var rSpace = this.getRowHalfSpacing();\n    var rLines = __spreadArray(__spreadArray([this.fLine], __read(this.rLines), false), [this.fLine], false);\n    var y = this.getBBox().h - rLines[0];\n    for (var i = 0; i < this.numRows; i++) {\n      var row = this.childNodes[i];\n      _a = __read(this.getRowHD(equal, HD, H[i], D[i]), 2), row.H = _a[0], row.D = _a[1];\n      _b = __read([rSpace[i], rSpace[i + 1]], 2), row.tSpace = _b[0], row.bSpace = _b[1];\n      _c = __read([rLines[i], rLines[i + 1]], 2), row.tLine = _c[0], row.bLine = _c[1];\n      row.toSVG(svg);\n      row.place(0, y - rSpace[i] - row.H);\n      y -= rSpace[i] + row.H + row.D + rSpace[i + 1] + rLines[i + 1];\n    }\n  };\n  SVGmtable.prototype.getRowHD = function (equal, HD, H, D) {\n    return equal ? [(HD + H - D) / 2, (HD - H + D) / 2] : [H, D];\n  };\n  SVGmtable.prototype.handleColor = function () {\n    _super.prototype.handleColor.call(this);\n    var rect = this.firstChild();\n    if (rect) {\n      this.adaptor.setAttribute(rect, 'width', this.fixed(this.getWidth()));\n    }\n  };\n  SVGmtable.prototype.handleColumnLines = function (svg) {\n    if (this.node.attributes.get('columnlines') === 'none') return;\n    var lines = this.getColumnAttributes('columnlines');\n    if (!lines) return;\n    var cSpace = this.getColumnHalfSpacing();\n    var cLines = this.cLines;\n    var cWidth = this.getComputedWidths();\n    var x = this.fLine;\n    for (var i = 0; i < lines.length; i++) {\n      x += cSpace[i] + cWidth[i] + cSpace[i + 1];\n      if (lines[i] !== 'none') {\n        this.adaptor.append(svg, this.makeVLine(x, lines[i], cLines[i]));\n      }\n      x += cLines[i];\n    }\n  };\n  SVGmtable.prototype.handleRowLines = function (svg) {\n    if (this.node.attributes.get('rowlines') === 'none') return;\n    var lines = this.getRowAttributes('rowlines');\n    if (!lines) return;\n    var equal = this.node.attributes.get('equalrows');\n    var _a = this.getTableData(),\n      H = _a.H,\n      D = _a.D;\n    var HD = this.getEqualRowHeight();\n    var rSpace = this.getRowHalfSpacing();\n    var rLines = this.rLines;\n    var y = this.getBBox().h - this.fLine;\n    for (var i = 0; i < lines.length; i++) {\n      var _b = __read(this.getRowHD(equal, HD, H[i], D[i]), 2),\n        rH = _b[0],\n        rD = _b[1];\n      y -= rSpace[i] + rH + rD + rSpace[i + 1];\n      if (lines[i] !== 'none') {\n        this.adaptor.append(svg, this.makeHLine(y, lines[i], rLines[i]));\n      }\n      y -= rLines[i];\n    }\n  };\n  SVGmtable.prototype.handleFrame = function (svg) {\n    if (this.frame && this.fLine) {\n      var _a = this.getBBox(),\n        h = _a.h,\n        d = _a.d,\n        w = _a.w;\n      var style = this.node.attributes.get('frame');\n      this.adaptor.append(svg, this.makeFrame(w, h, d, style));\n    }\n  };\n  SVGmtable.prototype.handlePWidth = function (svg) {\n    if (!this.pWidth) {\n      return 0;\n    }\n    var _a = this.getBBox(),\n      w = _a.w,\n      L = _a.L,\n      R = _a.R;\n    var W = L + this.pWidth + R;\n    var align = this.getAlignShift()[0];\n    var CW = Math.max(this.isTop ? W : 0, this.container.getWrapWidth(this.containerI)) - L - R;\n    var dw = w - (this.pWidth > CW ? CW : this.pWidth);\n    var dx = align === 'left' ? 0 : align === 'right' ? dw : dw / 2;\n    if (dx) {\n      var table = this.svg('g', {}, this.adaptor.childNodes(svg));\n      this.place(dx, 0, table);\n      this.adaptor.append(svg, table);\n    }\n    return dx;\n  };\n  SVGmtable.prototype.lineClass = function (style) {\n    return CLASSPREFIX + style;\n  };\n  SVGmtable.prototype.makeFrame = function (w, h, d, style) {\n    var t = this.fLine;\n    return this.svg('rect', this.setLineThickness(t, style, {\n      'data-frame': true,\n      'class': this.lineClass(style),\n      width: this.fixed(w - t),\n      height: this.fixed(h + d - t),\n      x: this.fixed(t / 2),\n      y: this.fixed(t / 2 - d)\n    }));\n  };\n  SVGmtable.prototype.makeVLine = function (x, style, t) {\n    var _a = this.getBBox(),\n      h = _a.h,\n      d = _a.d;\n    var dt = style === 'dotted' ? t / 2 : 0;\n    var X = this.fixed(x + t / 2);\n    return this.svg('line', this.setLineThickness(t, style, {\n      'data-line': 'v',\n      'class': this.lineClass(style),\n      x1: X,\n      y1: this.fixed(dt - d),\n      x2: X,\n      y2: this.fixed(h - dt)\n    }));\n  };\n  SVGmtable.prototype.makeHLine = function (y, style, t) {\n    var w = this.getBBox().w;\n    var dt = style === 'dotted' ? t / 2 : 0;\n    var Y = this.fixed(y - t / 2);\n    return this.svg('line', this.setLineThickness(t, style, {\n      'data-line': 'h',\n      'class': this.lineClass(style),\n      x1: this.fixed(dt),\n      y1: Y,\n      x2: this.fixed(w - dt),\n      y2: Y\n    }));\n  };\n  SVGmtable.prototype.setLineThickness = function (t, style, properties) {\n    if (t !== .07) {\n      properties['stroke-thickness'] = this.fixed(t);\n      if (style !== 'solid') {\n        properties['stroke-dasharray'] = (style === 'dotted' ? '0,' : '') + this.fixed(2 * t);\n      }\n    }\n    return properties;\n  };\n  SVGmtable.prototype.handleLabels = function (svg, _parent, dx) {\n    if (!this.hasLabels) return;\n    var labels = this.labels;\n    var attributes = this.node.attributes;\n    var side = attributes.get('side');\n    this.spaceLabels();\n    this.isTop ? this.topTable(svg, labels, side) : this.subTable(svg, labels, side, dx);\n  };\n  SVGmtable.prototype.spaceLabels = function () {\n    var adaptor = this.adaptor;\n    var h = this.getBBox().h;\n    var L = this.getTableData().L;\n    var space = this.getRowHalfSpacing();\n    var y = h - this.fLine;\n    var current = adaptor.firstChild(this.labels);\n    for (var i = 0; i < this.numRows; i++) {\n      var row = this.childNodes[i];\n      if (row.node.isKind('mlabeledtr')) {\n        var cell = row.childNodes[0];\n        y -= space[i] + row.H;\n        row.placeCell(cell, {\n          x: 0,\n          y: y,\n          w: L,\n          lSpace: 0,\n          rSpace: 0,\n          lLine: 0,\n          rLine: 0\n        });\n        y -= row.D + space[i + 1] + this.rLines[i];\n        current = adaptor.next(current);\n      } else {\n        y -= space[i] + row.H + row.D + space[i + 1] + this.rLines[i];\n      }\n    }\n  };\n  SVGmtable.prototype.topTable = function (svg, labels, side) {\n    var adaptor = this.adaptor;\n    var _a = this.getBBox(),\n      h = _a.h,\n      d = _a.d,\n      w = _a.w,\n      L = _a.L,\n      R = _a.R;\n    var W = L + (this.pWidth || w) + R;\n    var LW = this.getTableData().L;\n    var _b = __read(this.getPadAlignShift(side), 3),\n      align = _b[1],\n      shift = _b[2];\n    var dx = shift + (align === 'right' ? -W : align === 'center' ? -W / 2 : 0) + L;\n    var matrix = 'matrix(1 0 0 -1 0 0)';\n    var scale = \"scale(\".concat(this.jax.fixed(this.font.params.x_height * 1000 / this.metrics.ex, 2), \")\");\n    var transform = \"translate(0 \".concat(this.fixed(h), \") \").concat(matrix, \" \").concat(scale);\n    var table = this.svg('svg', {\n      'data-table': true,\n      preserveAspectRatio: align === 'left' ? 'xMinYMid' : align === 'right' ? 'xMaxYMid' : 'xMidYMid',\n      viewBox: [this.fixed(-dx), this.fixed(-h), 1, this.fixed(h + d)].join(' ')\n    }, [this.svg('g', {\n      transform: matrix\n    }, adaptor.childNodes(svg))]);\n    labels = this.svg('svg', {\n      'data-labels': true,\n      preserveAspectRatio: side === 'left' ? 'xMinYMid' : 'xMaxYMid',\n      viewBox: [side === 'left' ? 0 : this.fixed(LW), this.fixed(-h), 1, this.fixed(h + d)].join(' ')\n    }, [labels]);\n    adaptor.append(svg, this.svg('g', {\n      transform: transform\n    }, [table, labels]));\n    this.place(-L, 0, svg);\n  };\n  SVGmtable.prototype.subTable = function (svg, labels, side, dx) {\n    var adaptor = this.adaptor;\n    var _a = this.getBBox(),\n      w = _a.w,\n      L = _a.L,\n      R = _a.R;\n    var W = L + (this.pWidth || w) + R;\n    var labelW = this.getTableData().L;\n    var align = this.getAlignShift()[0];\n    var CW = Math.max(W, this.container.getWrapWidth(this.containerI));\n    this.place(side === 'left' ? (align === 'left' ? 0 : align === 'right' ? W - CW + dx : (W - CW) / 2 + dx) - L : (align === 'left' ? CW : align === 'right' ? W + dx : (CW + W) / 2 + dx) - L - labelW, 0, labels);\n    adaptor.append(svg, labels);\n  };\n  SVGmtable.kind = mtable_js_2.MmlMtable.prototype.kind;\n  SVGmtable.styles = {\n    'g[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line]': {\n      'stroke-width': '70px',\n      fill: 'none'\n    },\n    'g[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame]': {\n      'stroke-width': '70px',\n      fill: 'none'\n    },\n    'g[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed': {\n      'stroke-dasharray': '140'\n    },\n    'g[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted': {\n      'stroke-linecap': 'round',\n      'stroke-dasharray': '0,140'\n    },\n    'g[data-mml-node=\"mtable\"] > g > svg': {\n      overflow: 'visible'\n    }\n  };\n  return SVGmtable;\n}((0, mtable_js_1.CommonMtableMixin)(Wrapper_js_1.SVGWrapper));\nexports.SVGmtable = SVGmtable;","map":{"version":3,"names":["Wrapper_js_1","require","mtable_js_1","mtable_js_2","CLASSPREFIX","SVGmtable","_super","__extends","factory","node","parent","_this","call","def","isTop","transform","labels","svg","prototype","toSVG","standardSVGnode","placeRows","handleColumnLines","handleRowLines","handleFrame","dx","handlePWidth","handleLabels","equal","attributes","get","_d","getTableData","H","D","HD","getEqualRowHeight","rSpace","getRowHalfSpacing","rLines","__spreadArray","fLine","__read","y","getBBox","h","i","numRows","row","childNodes","_a","getRowHD","_b","tSpace","bSpace","_c","tLine","bLine","place","handleColor","rect","firstChild","adaptor","setAttribute","fixed","getWidth","lines","getColumnAttributes","cSpace","getColumnHalfSpacing","cLines","cWidth","getComputedWidths","x","length","append","makeVLine","getRowAttributes","rH","rD","makeHLine","frame","d","w","style","makeFrame","pWidth","L","R","W","align","getAlignShift","CW","Math","max","container","getWrapWidth","containerI","dw","table","lineClass","t","setLineThickness","width","height","dt","X","x1","y1","x2","y2","Y","properties","_parent","hasLabels","side","spaceLabels","topTable","subTable","space","current","isKind","cell","placeCell","lSpace","lLine","rLine","next","LW","getPadAlignShift","shift","matrix","scale","concat","jax","font","params","x_height","metrics","ex","preserveAspectRatio","viewBox","join","labelW","kind","MmlMtable","styles","fill","overflow","CommonMtableMixin","SVGWrapper","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/output/svg/Wrappers/mtable.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGmtable wrapper for the MmlMtable object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor} from '../Wrapper.js';\nimport {SVGWrapperFactory} from '../WrapperFactory.js';\nimport {CommonMtableMixin} from '../../common/Wrappers/mtable.js';\nimport {SVGmtr} from './mtr.js';\nimport {SVGmtd} from './mtd.js';\nimport {MmlMtable} from '../../../core/MmlTree/MmlNodes/mtable.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {OptionList} from '../../../util/Options.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\nconst CLASSPREFIX = 'mjx-';\n\n/*****************************************************************/\n/**\n * The SVGmtable wrapper for the MmlMtable object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGmtable<N, T, D> extends\nCommonMtableMixin<SVGmtd<any, any, any>, SVGmtr<any, any, any>, SVGConstructor<any, any, any>>(SVGWrapper) {\n\n  /**\n   * The mtable wrapper\n   */\n  public static kind = MmlMtable.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'g[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line]': {\n      'stroke-width': '70px',\n      fill: 'none'\n    },\n    'g[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame]': {\n      'stroke-width': '70px',\n      fill: 'none'\n    },\n    'g[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed': {\n      'stroke-dasharray': '140'\n    },\n    'g[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted': {\n      'stroke-linecap': 'round',\n      'stroke-dasharray': '0,140'\n    },\n    'g[data-mml-node=\"mtable\"] > g > svg': {\n      overflow: 'visible'\n    }\n  };\n\n  /**\n   * The column for labels\n   */\n  public labels: N;\n\n  /******************************************************************/\n\n  /**\n   * @override\n   */\n  constructor(factory: SVGWrapperFactory<N, T, D>, node: MmlNode, parent: SVGWrapper<N, T, D> = null) {\n    super(factory, node, parent);\n    const def: OptionList = {'data-labels': true};\n    if (this.isTop) {\n      def.transform = 'matrix(1 0 0 -1 0 0)';\n    }\n    this.labels = this.svg('g', def);\n  }\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = this.standardSVGnode(parent);\n    this.placeRows(svg);\n    this.handleColumnLines(svg);\n    this.handleRowLines(svg);\n    this.handleFrame(svg);\n    const dx = this.handlePWidth(svg);\n    this.handleLabels(svg, parent, dx);\n  }\n\n  /**\n   * @param {N} svg  The container in which to place the rows\n   */\n  protected placeRows(svg: N) {\n    const equal = this.node.attributes.get('equalrows') as boolean;\n    const {H, D} = this.getTableData();\n    const HD = this.getEqualRowHeight();\n    const rSpace = this.getRowHalfSpacing();\n    const rLines = [this.fLine, ...this.rLines, this.fLine];\n    let y = this.getBBox().h - rLines[0];\n    for (let i = 0; i < this.numRows; i++) {\n      const row = this.childNodes[i];\n      [row.H, row.D] = this.getRowHD(equal, HD, H[i], D[i]);\n      [row.tSpace, row.bSpace] = [rSpace[i], rSpace[i + 1]];\n      [row.tLine, row.bLine] = [rLines[i], rLines[i + 1]];\n      row.toSVG(svg);\n      row.place(0, y - rSpace[i] - row.H);\n      y -= rSpace[i] + row.H + row.D + rSpace[i + 1] + rLines[i + 1];\n    }\n  }\n\n  /**\n   * @param {boolean} equal   True for equal-height rows\n   * @param {number} HD       The height of equal-height rows\n   * @param {number} H        The natural height of the row\n   * @param {number} D        The natural depth of the row\n   * @returns {number[]}      The (possibly scaled) height and depth to use\n   */\n  protected getRowHD(equal: boolean, HD: number, H: number, D: number): [number, number] {\n    return (equal ? [(HD + H - D) / 2, (HD - H + D) / 2] : [H, D]);\n  }\n\n  /******************************************************************/\n\n  /**\n   * @override\n   */\n  public handleColor() {\n    super.handleColor();\n    const rect = this.firstChild();\n    if (rect) {\n      this.adaptor.setAttribute(rect, 'width', this.fixed(this.getWidth()));\n    }\n  }\n\n  /**\n   * Add vertical lines between columns\n   *\n   * @param {N} svg   The container for the table\n   */\n  protected handleColumnLines(svg: N) {\n    if (this.node.attributes.get('columnlines') === 'none') return;\n    const lines = this.getColumnAttributes('columnlines');\n    if (!lines) return;\n    const cSpace = this.getColumnHalfSpacing();\n    const cLines = this.cLines;\n    const cWidth = this.getComputedWidths();\n    let x = this.fLine;\n    for (let i = 0; i < lines.length; i++) {\n      x += cSpace[i] + cWidth[i] + cSpace[i + 1];\n      if (lines[i] !== 'none') {\n        this.adaptor.append(svg, this.makeVLine(x, lines[i], cLines[i]));\n      }\n      x += cLines[i];\n    }\n  }\n\n  /**\n   * Add horizontal lines between rows\n   *\n   * @param {N} svg   The container for the table\n   */\n  protected handleRowLines(svg: N) {\n    if (this.node.attributes.get('rowlines') === 'none') return;\n    const lines = this.getRowAttributes('rowlines');\n    if (!lines) return;\n    const equal = this.node.attributes.get('equalrows') as boolean;\n    const {H, D} = this.getTableData();\n    const HD = this.getEqualRowHeight();\n    const rSpace = this.getRowHalfSpacing();\n    const rLines = this.rLines;\n    let y = this.getBBox().h - this.fLine;\n    for (let i = 0; i < lines.length; i++) {\n      const [rH, rD] = this.getRowHD(equal, HD, H[i], D[i]);\n      y -= rSpace[i] + rH + rD + rSpace[i + 1];\n      if (lines[i] !== 'none') {\n        this.adaptor.append(svg, this.makeHLine(y, lines[i], rLines[i]));\n      }\n      y -= rLines[i];\n    }\n\n  }\n\n  /**\n   * Add a frame to the mtable, if needed\n   *\n   * @param {N} svg   The container for the table\n   */\n  protected handleFrame(svg: N) {\n    if (this.frame && this.fLine) {\n      const {h, d, w} = this.getBBox();\n      const style = this.node.attributes.get('frame') as string;\n      this.adaptor.append(svg, this.makeFrame(w, h, d, style));\n    }\n  }\n\n  /**\n   * @returns {number}   The x-adjustement needed to handle the true size of percentage-width tables\n   */\n  protected handlePWidth(svg: N): number {\n    if (!this.pWidth) {\n      return 0;\n    }\n    const {w, L, R} = this.getBBox();\n    const W = L + this.pWidth + R;\n    const align = this.getAlignShift()[0];\n    const CW = Math.max(this.isTop ? W : 0, this.container.getWrapWidth(this.containerI)) - L - R;\n    const dw = w - (this.pWidth > CW ? CW : this.pWidth);\n    const dx = (align === 'left' ? 0 : align === 'right' ? dw : dw / 2);\n    if (dx) {\n      const table = this.svg('g', {}, this.adaptor.childNodes(svg));\n      this.place(dx, 0, table);\n      this.adaptor.append(svg, table);\n    }\n    return dx;\n  }\n\n  /******************************************************************/\n\n  /**\n   * @param {string} style   The line style whose class is to be obtained\n   * @returns {string}       The class name for the style\n   */\n  protected lineClass(style: string): string {\n    return CLASSPREFIX + style;\n  }\n\n  /**\n   * @param {number} w       The width of the frame\n   * @param {number} h       The height of the frame\n   * @param {number} d       The depth of the frame\n   * @param {string} style   The border style for the frame\n   * @returns {N}            The SVG element for the frame\n   */\n  protected makeFrame(w: number, h: number, d: number, style: string): N {\n    const t = this.fLine;\n    return this.svg('rect', this.setLineThickness(t, style, {\n      'data-frame': true, 'class': this.lineClass(style),\n      width: this.fixed(w - t), height: this.fixed(h + d - t),\n      x: this.fixed(t / 2), y: this.fixed(t / 2 - d)\n    }));\n  }\n\n  /**\n   * @param {number} x       The x location of the line\n   * @param {string} style   The border style for the line\n   * @param {number} t       The line thickness\n   * @returns {N}            The SVG element for the line\n   */\n  protected makeVLine(x: number, style: string, t: number): N {\n    const {h, d} = this.getBBox();\n    const dt = (style === 'dotted' ? t / 2 : 0);\n    const X = this.fixed(x + t / 2);\n    return this.svg('line', this.setLineThickness(t, style, {\n      'data-line': 'v', 'class': this.lineClass(style),\n      x1: X, y1: this.fixed(dt - d), x2: X, y2: this.fixed(h - dt)\n    }));\n  }\n\n  /**\n   * @param {number} y       The y location of the line\n   * @param {string} style   The border style for the line\n   * @param {number} t       The line thickness\n   * @returns {N}            The SVG element for the line\n   */\n  protected makeHLine(y: number, style: string, t: number): N {\n    const w = this.getBBox().w;\n    const dt = (style === 'dotted' ? t / 2 : 0);\n    const Y = this.fixed(y - t / 2);\n    return this.svg('line', this.setLineThickness(t, style, {\n      'data-line': 'h', 'class': this.lineClass(style),\n      x1: this.fixed(dt), y1: Y, x2: this.fixed(w - dt), y2: Y\n    }));\n  }\n\n  /**\n   * @param {number} t                The thickness of the line\n   * @param {string} style            The border style for the line\n   * @param {OptionList} properties   The list of properties to modify\n   * @param {OptionList}              The modified properties\n   */\n  protected setLineThickness(t: number, style: string, properties: OptionList) {\n    if (t !== .07) {\n      properties['stroke-thickness'] = this.fixed(t);\n      if (style !== 'solid') {\n        properties['stroke-dasharray'] = (style === 'dotted' ? '0,' : '') + this.fixed(2 * t);\n      }\n    }\n    return properties;\n  }\n\n  /******************************************************************/\n\n  /**\n   * Handle addition of labels to the table\n   *\n   * @param {N} svg       The container for the table contents\n   * @param {N} parent    The parent containing the the table\n   * @param {number} dx   The adjustement for percentage width tables\n   */\n  protected handleLabels(svg: N, _parent: N, dx: number) {\n    if (!this.hasLabels) return;\n    const labels = this.labels;\n    const attributes = this.node.attributes;\n    //\n    //  Set the side for the labels\n    //\n    const side = attributes.get('side') as string;\n    //\n    // Add the labels to the table\n    //\n    this.spaceLabels();\n    //\n    // Handle top-level table to make it adapt to container size\n    //   but place subtables explicitly\n    //\n    this.isTop ? this.topTable(svg, labels, side) : this.subTable(svg, labels, side, dx);\n  }\n\n  /**\n   * Add spacing elements between the label rows to align them with the rest of the table\n   */\n  protected spaceLabels() {\n    const adaptor = this.adaptor;\n    const h = this.getBBox().h;\n    const L = this.getTableData().L;\n    const space = this.getRowHalfSpacing();\n    //\n    //  Start with frame size and add in spacing, height and depth,\n    //    and line thickness for each non-labeled row.\n    //\n    let y = h - this.fLine;\n    let current = adaptor.firstChild(this.labels) as N;\n    for (let i = 0; i < this.numRows; i++) {\n      const row = this.childNodes[i] as SVGmtr<N, T, D>;\n      if (row.node.isKind('mlabeledtr')) {\n        const cell = row.childNodes[0];\n        y -= space[i] + row.H;\n        row.placeCell(cell, {x: 0, y: y, w: L, lSpace: 0, rSpace: 0, lLine: 0, rLine: 0});\n        y -= row.D + space[i + 1] + this.rLines[i];\n        current = adaptor.next(current) as N;\n      } else {\n        y -= space[i] + row.H + row.D + space[i + 1] + this.rLines[i];\n      }\n    }\n  }\n\n  /**\n   * Handles tables with labels so that the label will move with the size of the container\n   *\n   * @param {N} svg         The SVG container for the table\n   * @param {N} labels      The group of labels\n   * @param {string} side   The side alignment (left or right)\n   */\n  protected topTable(svg: N, labels: N, side: string) {\n    const adaptor = this.adaptor;\n    const {h, d, w, L, R} = this.getBBox();\n    const W = L + (this.pWidth || w) + R;\n    const LW = this.getTableData().L;\n    const [ , align, shift] = this.getPadAlignShift(side);\n    const dx = shift + (align === 'right' ? -W : align === 'center' ? -W / 2 : 0) + L;\n    const matrix = 'matrix(1 0 0 -1 0 0)';\n    const scale = `scale(${this.jax.fixed((this.font.params.x_height * 1000) / this.metrics.ex, 2)})`;\n    const transform = `translate(0 ${this.fixed(h)}) ${matrix} ${scale}`;\n    let table = this.svg('svg', {\n      'data-table': true,\n      preserveAspectRatio: (align === 'left' ? 'xMinYMid' : align === 'right' ? 'xMaxYMid' : 'xMidYMid'),\n      viewBox: [this.fixed(-dx), this.fixed(-h), 1, this.fixed(h + d)].join(' ')\n    }, [\n      this.svg('g', {transform: matrix}, adaptor.childNodes(svg))\n    ]);\n    labels = this.svg('svg', {\n      'data-labels': true,\n      preserveAspectRatio: (side === 'left' ? 'xMinYMid' : 'xMaxYMid'),\n      viewBox: [side === 'left' ? 0 : this.fixed(LW), this.fixed(-h), 1, this.fixed(h + d)].join(' ')\n    }, [labels]);\n    adaptor.append(svg, this.svg('g', {transform: transform}, [table, labels]));\n    this.place(-L, 0, svg);  // remove spacing for L, which is added by the parent during appending\n  }\n\n  /**\n   * @param {N} svg         The SVG container for the table\n   * @param {N} labels      The group of labels\n   * @param {string} side   The side alignment (left or right)\n   * @param {number} dx     The adjustement for percentage width tables\n   */\n  protected subTable(svg: N, labels: N, side: string, dx: number) {\n    const adaptor = this.adaptor;\n    const {w, L, R} = this.getBBox();\n    const W = L + (this.pWidth || w) + R;\n    const labelW = this.getTableData().L;\n    const align = this.getAlignShift()[0];\n    const CW = Math.max(W, this.container.getWrapWidth(this.containerI));\n    this.place(side === 'left' ?\n               (align === 'left' ? 0 : align === 'right' ? W - CW + dx : (W - CW) / 2 + dx) - L :\n               (align === 'left' ? CW : align === 'right' ? W + dx : (CW + W) / 2 + dx) - L - labelW,\n               0, labels);\n    adaptor.append(svg, labels);\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}