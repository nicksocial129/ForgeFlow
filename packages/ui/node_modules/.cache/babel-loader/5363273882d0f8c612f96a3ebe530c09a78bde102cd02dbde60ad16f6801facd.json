{"ast":null,"code":"import{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{enqueueSnackbar as enqueueSnackbarAction,closeSnackbar as closeSnackbarAction,SET_CHATFLOW}from'store/actions';import{Box,Typography,Button,OutlinedInput}from'@mui/material';// Project import\nimport{StyledButton}from'ui-component/button/StyledButton';// Icons\nimport{IconX}from'@tabler/icons';// API\nimport chatflowsApi from'api/chatflows';// utils\nimport useNotifier from'utils/useNotifier';import{TooltipWithParser}from'ui-component/tooltip/TooltipWithParser';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Configuration=()=>{var _apiConfig$rateLimit$,_apiConfig$rateLimit,_apiConfig$rateLimit$2,_apiConfig$rateLimit2,_apiConfig$rateLimit$3,_apiConfig$rateLimit3;const dispatch=useDispatch();const chatflow=useSelector(state=>state.canvas.chatflow);const chatflowid=chatflow.id;const apiConfig=chatflow.apiConfig?JSON.parse(chatflow.apiConfig):{};useNotifier();const enqueueSnackbar=function(){return dispatch(enqueueSnackbarAction(...arguments));};const closeSnackbar=function(){return dispatch(closeSnackbarAction(...arguments));};const[limitMax,setLimitMax]=useState((_apiConfig$rateLimit$=apiConfig===null||apiConfig===void 0?void 0:(_apiConfig$rateLimit=apiConfig.rateLimit)===null||_apiConfig$rateLimit===void 0?void 0:_apiConfig$rateLimit.limitMax)!==null&&_apiConfig$rateLimit$!==void 0?_apiConfig$rateLimit$:'');const[limitDuration,setLimitDuration]=useState((_apiConfig$rateLimit$2=apiConfig===null||apiConfig===void 0?void 0:(_apiConfig$rateLimit2=apiConfig.rateLimit)===null||_apiConfig$rateLimit2===void 0?void 0:_apiConfig$rateLimit2.limitDuration)!==null&&_apiConfig$rateLimit$2!==void 0?_apiConfig$rateLimit$2:'');const[limitMsg,setLimitMsg]=useState((_apiConfig$rateLimit$3=apiConfig===null||apiConfig===void 0?void 0:(_apiConfig$rateLimit3=apiConfig.rateLimit)===null||_apiConfig$rateLimit3===void 0?void 0:_apiConfig$rateLimit3.limitMsg)!==null&&_apiConfig$rateLimit$3!==void 0?_apiConfig$rateLimit$3:'');const formatObj=()=>{const obj={rateLimit:{}};const rateLimitValuesBoolean=[!limitMax,!limitDuration,!limitMsg];const rateLimitFilledValues=rateLimitValuesBoolean.filter(value=>value===false);if(rateLimitFilledValues.length>=1&&rateLimitFilledValues.length<=2){throw new Error('Need to fill all rate limit input fields');}else if(rateLimitFilledValues.length===3){obj.rateLimit={limitMax,limitDuration,limitMsg};}return obj;};const onSave=async()=>{try{const saveResp=await chatflowsApi.updateChatflow(chatflowid,{apiConfig:JSON.stringify(formatObj())});if(saveResp.data){enqueueSnackbar({message:'API Configuration Saved',options:{key:new Date().getTime()+Math.random(),variant:'success',action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});dispatch({type:SET_CHATFLOW,chatflow:saveResp.data});}}catch(error){console.error(error);const errorData=error.response?error.response.data||\"\".concat(error.response.status,\": \").concat(error.response.statusText):error.message;enqueueSnackbar({message:\"Failed to save API Configuration: \".concat(errorData),options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});}};const onTextChanged=(value,fieldName)=>{switch(fieldName){case'limitMax':setLimitMax(value);break;case'limitDuration':setLimitDuration(value);break;case'limitMsg':setLimitMsg(value);break;}};const textField=function(message,fieldName,fieldLabel){let fieldType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'string';let placeholder=arguments.length>4&&arguments[4]!==undefined?arguments[4]:'';return/*#__PURE__*/_jsx(Box,{sx:{pt:2,pb:2},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'flex-start'},children:[/*#__PURE__*/_jsx(Typography,{sx:{mb:1},children:fieldLabel}),/*#__PURE__*/_jsx(OutlinedInput,{id:fieldName,type:fieldType,fullWidth:true,value:message,placeholder:placeholder,name:fieldName,onChange:e=>{onTextChanged(e.target.value,fieldName);}})]})});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{mb:1,mt:2},children:[\"Rate Limit\",' ',/*#__PURE__*/_jsx(TooltipWithParser,{style:{mb:1,mt:2,marginLeft:10},title:'Visit <a target=\"_blank\" href=\"https://docs.flowiseai.com/rate-limit\">Rate Limit Setup Guide</a> to set up Rate Limit correctly in your hosting environment.'})]}),textField(limitMax,'limitMax','Message Limit per Duration','number'),textField(limitDuration,'limitDuration','Duration in Second','number'),textField(limitMsg,'limitMsg','Limit Message','string'),/*#__PURE__*/_jsx(StyledButton,{style:{marginBottom:10,marginTop:10},variant:\"contained\",onClick:()=>onSave(),children:\"Save Changes\"})]});};export default Configuration;","map":{"version":3,"names":["useState","useDispatch","useSelector","enqueueSnackbar","enqueueSnackbarAction","closeSnackbar","closeSnackbarAction","SET_CHATFLOW","Box","Typography","Button","OutlinedInput","StyledButton","IconX","chatflowsApi","useNotifier","TooltipWithParser","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Configuration","_apiConfig$rateLimit$","_apiConfig$rateLimit","_apiConfig$rateLimit$2","_apiConfig$rateLimit2","_apiConfig$rateLimit$3","_apiConfig$rateLimit3","dispatch","chatflow","state","canvas","chatflowid","id","apiConfig","JSON","parse","arguments","limitMax","setLimitMax","rateLimit","limitDuration","setLimitDuration","limitMsg","setLimitMsg","formatObj","obj","rateLimitValuesBoolean","rateLimitFilledValues","filter","value","length","Error","onSave","saveResp","updateChatflow","stringify","data","message","options","key","Date","getTime","Math","random","variant","action","style","color","onClick","children","type","error","console","errorData","response","concat","status","statusText","persist","onTextChanged","fieldName","textField","fieldLabel","fieldType","undefined","placeholder","sx","pt","pb","display","flexDirection","alignItems","mb","fullWidth","name","onChange","e","target","mt","marginLeft","title","marginBottom","marginTop"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/packages/ui/src/views/chatflows/Configuration.js"],"sourcesContent":["import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { enqueueSnackbar as enqueueSnackbarAction, closeSnackbar as closeSnackbarAction, SET_CHATFLOW } from 'store/actions'\nimport PropTypes from 'prop-types'\n\nimport { Box, Typography, Button, OutlinedInput } from '@mui/material'\n\n// Project import\nimport { StyledButton } from 'ui-component/button/StyledButton'\n\n// Icons\nimport { IconX } from '@tabler/icons'\n\n// API\nimport chatflowsApi from 'api/chatflows'\n\n// utils\nimport useNotifier from 'utils/useNotifier'\nimport { TooltipWithParser } from 'ui-component/tooltip/TooltipWithParser'\n\nconst Configuration = () => {\n    const dispatch = useDispatch()\n    const chatflow = useSelector((state) => state.canvas.chatflow)\n    const chatflowid = chatflow.id\n    const apiConfig = chatflow.apiConfig ? JSON.parse(chatflow.apiConfig) : {}\n\n    useNotifier()\n\n    const enqueueSnackbar = (...args) => dispatch(enqueueSnackbarAction(...args))\n    const closeSnackbar = (...args) => dispatch(closeSnackbarAction(...args))\n\n    const [limitMax, setLimitMax] = useState(apiConfig?.rateLimit?.limitMax ?? '')\n    const [limitDuration, setLimitDuration] = useState(apiConfig?.rateLimit?.limitDuration ?? '')\n    const [limitMsg, setLimitMsg] = useState(apiConfig?.rateLimit?.limitMsg ?? '')\n\n    const formatObj = () => {\n        const obj = {\n            rateLimit: {}\n        }\n        const rateLimitValuesBoolean = [!limitMax, !limitDuration, !limitMsg]\n        const rateLimitFilledValues = rateLimitValuesBoolean.filter((value) => value === false)\n        if (rateLimitFilledValues.length >= 1 && rateLimitFilledValues.length <= 2) {\n            throw new Error('Need to fill all rate limit input fields')\n        } else if (rateLimitFilledValues.length === 3) {\n            obj.rateLimit = {\n                limitMax,\n                limitDuration,\n                limitMsg\n            }\n        }\n\n        return obj\n    }\n\n    const onSave = async () => {\n        try {\n            const saveResp = await chatflowsApi.updateChatflow(chatflowid, {\n                apiConfig: JSON.stringify(formatObj())\n            })\n            if (saveResp.data) {\n                enqueueSnackbar({\n                    message: 'API Configuration Saved',\n                    options: {\n                        key: new Date().getTime() + Math.random(),\n                        variant: 'success',\n                        action: (key) => (\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                                <IconX />\n                            </Button>\n                        )\n                    }\n                })\n                dispatch({ type: SET_CHATFLOW, chatflow: saveResp.data })\n            }\n        } catch (error) {\n            console.error(error)\n            const errorData = error.response\n                ? error.response.data || `${error.response.status}: ${error.response.statusText}`\n                : error.message\n            enqueueSnackbar({\n                message: `Failed to save API Configuration: ${errorData}`,\n                options: {\n                    key: new Date().getTime() + Math.random(),\n                    variant: 'error',\n                    persist: true,\n                    action: (key) => (\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                            <IconX />\n                        </Button>\n                    )\n                }\n            })\n        }\n    }\n\n    const onTextChanged = (value, fieldName) => {\n        switch (fieldName) {\n            case 'limitMax':\n                setLimitMax(value)\n                break\n            case 'limitDuration':\n                setLimitDuration(value)\n                break\n            case 'limitMsg':\n                setLimitMsg(value)\n                break\n        }\n    }\n\n    const textField = (message, fieldName, fieldLabel, fieldType = 'string', placeholder = '') => {\n        return (\n            <Box sx={{ pt: 2, pb: 2 }}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n                    <Typography sx={{ mb: 1 }}>{fieldLabel}</Typography>\n                    <OutlinedInput\n                        id={fieldName}\n                        type={fieldType}\n                        fullWidth\n                        value={message}\n                        placeholder={placeholder}\n                        name={fieldName}\n                        onChange={(e) => {\n                            onTextChanged(e.target.value, fieldName)\n                        }}\n                    />\n                </div>\n            </Box>\n        )\n    }\n\n    return (\n        <>\n            {/*Rate Limit*/}\n            <Typography variant='h4' sx={{ mb: 1, mt: 2 }}>\n                Rate Limit{' '}\n                <TooltipWithParser\n                    style={{ mb: 1, mt: 2, marginLeft: 10 }}\n                    title={\n                        'Visit <a target=\"_blank\" href=\"https://docs.flowiseai.com/rate-limit\">Rate Limit Setup Guide</a> to set up Rate Limit correctly in your hosting environment.'\n                    }\n                />\n            </Typography>\n            {textField(limitMax, 'limitMax', 'Message Limit per Duration', 'number')}\n            {textField(limitDuration, 'limitDuration', 'Duration in Second', 'number')}\n            {textField(limitMsg, 'limitMsg', 'Limit Message', 'string')}\n\n            <StyledButton style={{ marginBottom: 10, marginTop: 10 }} variant='contained' onClick={() => onSave()}>\n                Save Changes\n            </StyledButton>\n        </>\n    )\n}\n\nConfiguration.propTypes = {\n    isSessionMemory: PropTypes.bool\n}\n\nexport default Configuration\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}