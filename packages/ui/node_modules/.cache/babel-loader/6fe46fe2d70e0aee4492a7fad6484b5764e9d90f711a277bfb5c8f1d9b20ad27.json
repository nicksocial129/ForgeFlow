{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMtable = void 0;\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\nvar string_js_1 = require(\"../../../util/string.js\");\nvar MmlMtable = function (_super) {\n  __extends(MmlMtable, _super);\n  function MmlMtable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.properties = {\n      useHeight: true\n    };\n    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;\n    return _this;\n  }\n  Object.defineProperty(MmlMtable.prototype, \"kind\", {\n    get: function () {\n      return 'mtable';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMtable.prototype, \"linebreakContainer\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlMtable.prototype.setInheritedAttributes = function (attributes, display, level, prime) {\n    var e_1, _a;\n    try {\n      for (var indentAttributes_1 = __values(MmlNode_js_1.indentAttributes), indentAttributes_1_1 = indentAttributes_1.next(); !indentAttributes_1_1.done; indentAttributes_1_1 = indentAttributes_1.next()) {\n        var name_1 = indentAttributes_1_1.value;\n        if (attributes[name_1]) {\n          this.attributes.setInherited(name_1, attributes[name_1][1]);\n        }\n        if (this.attributes.getExplicit(name_1) !== undefined) {\n          delete this.attributes.getAllAttributes()[name_1];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (indentAttributes_1_1 && !indentAttributes_1_1.done && (_a = indentAttributes_1.return)) _a.call(indentAttributes_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);\n  };\n  MmlMtable.prototype.setChildInheritedAttributes = function (attributes, display, level, _prime) {\n    var e_2, _a, e_3, _b;\n    try {\n      for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var child = _d.value;\n        if (!child.isKind('mtr')) {\n          this.replaceChild(this.factory.create('mtr'), child).appendChild(child);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    level = this.getProperty('scriptlevel') || level;\n    display = !!(this.attributes.getExplicit('displaystyle') || this.attributes.getDefault('displaystyle'));\n    attributes = this.addInheritedAttributes(attributes, {\n      columnalign: this.attributes.get('columnalign'),\n      rowalign: 'center'\n    });\n    var cramped = this.attributes.getExplicit('data-cramped');\n    var ralign = (0, string_js_1.split)(this.attributes.get('rowalign'));\n    try {\n      for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var child = _f.value;\n        attributes.rowalign[1] = ralign.shift() || attributes.rowalign[1];\n        child.setInheritedAttributes(attributes, display, level, !!cramped);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n  MmlMtable.prototype.verifyChildren = function (options) {\n    var mtr = null;\n    var factory = this.factory;\n    for (var i = 0; i < this.childNodes.length; i++) {\n      var child = this.childNodes[i];\n      if (child.isKind('mtr')) {\n        mtr = null;\n      } else {\n        var isMtd = child.isKind('mtd');\n        if (mtr) {\n          this.removeChild(child);\n          i--;\n        } else {\n          mtr = this.replaceChild(factory.create('mtr'), child);\n        }\n        mtr.appendChild(isMtd ? child : factory.create('mtd', {}, [child]));\n        if (!options['fixMtables']) {\n          child.parent.removeChild(child);\n          child.parent = this;\n          isMtd && mtr.appendChild(factory.create('mtd'));\n          var merror = child.mError('Children of ' + this.kind + ' must be mtr or mlabeledtr', options, isMtd);\n          mtr.childNodes[mtr.childNodes.length - 1].appendChild(merror);\n        }\n      }\n    }\n    _super.prototype.verifyChildren.call(this, options);\n  };\n  MmlMtable.prototype.setTeXclass = function (prev) {\n    var e_4, _a;\n    this.getPrevClass(prev);\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n        child.setTeXclass(null);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    return this;\n  };\n  MmlMtable.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {\n    align: 'axis',\n    rowalign: 'baseline',\n    columnalign: 'center',\n    groupalign: '{left}',\n    alignmentscope: true,\n    columnwidth: 'auto',\n    width: 'auto',\n    rowspacing: '1ex',\n    columnspacing: '.8em',\n    rowlines: 'none',\n    columnlines: 'none',\n    frame: 'none',\n    framespacing: '0.4em 0.5ex',\n    equalrows: false,\n    equalcolumns: false,\n    displaystyle: false,\n    side: 'right',\n    minlabelspacing: '0.8em'\n  });\n  return MmlMtable;\n}(MmlNode_js_1.AbstractMmlNode);\nexports.MmlMtable = MmlMtable;","map":{"version":3,"names":["MmlNode_js_1","require","string_js_1","MmlMtable","_super","__extends","_this","apply","arguments","properties","useHeight","texclass","TEXCLASS","ORD","Object","defineProperty","prototype","get","setInheritedAttributes","attributes","display","level","prime","indentAttributes_1","__values","indentAttributes","indentAttributes_1_1","next","done","name_1","value","setInherited","getExplicit","undefined","getAllAttributes","call","setChildInheritedAttributes","_prime","_c","childNodes","_d","child","isKind","replaceChild","factory","create","appendChild","getProperty","getDefault","addInheritedAttributes","columnalign","rowalign","cramped","ralign","split","_e","_f","shift","verifyChildren","options","mtr","i","length","isMtd","removeChild","parent","merror","mError","kind","setTeXclass","prev","getPrevClass","_b","defaults","__assign","AbstractMmlNode","align","groupalign","alignmentscope","columnwidth","width","rowspacing","columnspacing","rowlines","columnlines","frame","framespacing","equalrows","equalcolumns","displaystyle","side","minlabelspacing","exports"],"sources":["/Users/nickprince/Desktop/Flowise Working Commit/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mtable.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMtable node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlNode, AttributeList, TEXCLASS, indentAttributes} from '../MmlNode.js';\nimport {split} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMtable node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMtable extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    align: 'axis',\n    rowalign: 'baseline',\n    columnalign: 'center',\n    groupalign: '{left}',\n    alignmentscope: true,\n    columnwidth: 'auto',\n    width: 'auto',\n    rowspacing: '1ex',\n    columnspacing: '.8em',\n    rowlines: 'none',\n    columnlines: 'none',\n    frame: 'none',\n    framespacing: '0.4em 0.5ex',\n    equalrows: false,\n    equalcolumns: false,\n    displaystyle: false,\n    side: 'right',\n    minlabelspacing: '0.8em'\n  };\n\n  /**\n   * Extra properties for this node\n   */\n  public properties = {\n    useHeight: true\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mtable';\n  }\n\n  /**\n   * Linebreaks are allowed in tables\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public setInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    //\n    // Force inheritance of shift and align values (since they are needed to output tables with labels)\n    //   but make sure they are not given explicitly on the <mtable> tag.\n    //\n    for (const name of indentAttributes) {\n      if (attributes[name]) {\n        this.attributes.setInherited(name, attributes[name][1]);\n      }\n      if (this.attributes.getExplicit(name) !== undefined) {\n        delete (this.attributes.getAllAttributes())[name];\n      }\n    }\n    super.setInheritedAttributes(attributes, display, level, prime);\n  }\n\n  /**\n   * Make sure all children are mtr or mlabeledtr nodes\n   * Inherit the table attributes, and set the display attribute based on the table's displaystyle attribute\n   * Reset the prime value to false\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, _prime: boolean) {\n    for (const child of this.childNodes) {\n      if (!child.isKind('mtr')) {\n        this.replaceChild(this.factory.create('mtr'), child)\n          .appendChild(child);\n      }\n    }\n    level = this.getProperty('scriptlevel') as number || level;\n    display = !!(this.attributes.getExplicit('displaystyle') || this.attributes.getDefault('displaystyle'));\n    attributes = this.addInheritedAttributes(attributes, {\n      columnalign: this.attributes.get('columnalign'),\n      rowalign: 'center'\n    });\n    const cramped = this.attributes.getExplicit('data-cramped') as boolean;\n    const ralign = split(this.attributes.get('rowalign') as string);\n    for (const child of this.childNodes) {\n      attributes.rowalign[1] = ralign.shift() || attributes.rowalign[1];\n      child.setInheritedAttributes(attributes, display, level, !!cramped);\n    }\n  }\n\n  /**\n   * Check that children are mtr or mlabeledtr\n   *\n   * @override\n   */\n  protected verifyChildren(options: PropertyList) {\n    let mtr: MmlNode = null;      // all consecutive non-mtr elements are collected into one mtr\n    const factory = this.factory;\n    for (let i = 0; i < this.childNodes.length; i++) {\n      const child = this.childNodes[i];\n      if (child.isKind('mtr')) {\n        mtr = null;               // start a new row if there are non-mtr children\n      } else {\n        const isMtd = child.isKind('mtd');\n        //\n        //  If there is already an mtr for previous children, just remove the child\n        //    otherwise replace the child with a new mtr\n        //\n        if (mtr) {\n          this.removeChild(child);\n          i--;   // there is one fewer child now\n        } else {\n          mtr = this.replaceChild(factory.create('mtr'), child) as MmlNode;\n        }\n        mtr.appendChild(isMtd ? child : factory.create('mtd', {}, [child]));  // Move the child into the mtr\n        if (!options['fixMtables']) {\n          child.parent.removeChild(child);  // remove the child from its mtd or mtr\n          child.parent = this;              // ... and make it think it is a child of the table again\n          isMtd && mtr.appendChild(factory.create('mtd'));  // child will be replaced, so make sure there is an mtd\n          const merror = child.mError('Children of ' + this.kind + ' must be mtr or mlabeledtr', options, isMtd);\n          mtr.childNodes[mtr.childNodes.length - 1].appendChild(merror);   // append the error to the mtd in the mtr\n        }\n      }\n    }\n    super.verifyChildren(options);\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    for (const child of this.childNodes) {\n      child.setTeXclass(null);\n    }\n    return this;\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}