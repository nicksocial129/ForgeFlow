{"version":3,"file":"static/js/7232.a1d04ddf.chunk.js","mappings":"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","sources":["views/marketplaces/MarketplaceCanvasNode.js","views/marketplaces/MarketplaceCanvasHeader.js","views/marketplaces/MarketplaceCanvas.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { useState } from 'react'\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles'\nimport { Box, Typography, Divider, Button } from '@mui/material'\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard'\nimport NodeInputHandler from 'views/canvas/NodeInputHandler'\nimport NodeOutputHandler from 'views/canvas/NodeOutputHandler'\nimport AdditionalParamsDialog from 'ui-component/dialog/AdditionalParamsDialog'\n\n// const\nimport { baseURL } from 'store/constant'\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    background: theme.palette.card.main,\n    color: theme.darkTextPrimary,\n    border: 'solid 1px',\n    borderColor: theme.palette.primary[200] + 75,\n    width: '300px',\n    height: 'auto',\n    padding: '10px',\n    boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)',\n    '&:hover': {\n        borderColor: theme.palette.primary.main\n    }\n}))\n\n// ===========================|| CANVAS NODE ||=========================== //\n\nconst MarketplaceCanvasNode = ({ data }) => {\n    const theme = useTheme()\n\n    const [showDialog, setShowDialog] = useState(false)\n    const [dialogProps, setDialogProps] = useState({})\n\n    const onDialogClicked = () => {\n        const dialogProps = {\n            data,\n            inputParams: data.inputParams.filter((param) => param.additionalParams),\n            disabled: true,\n            confirmButtonName: 'Save',\n            cancelButtonName: 'Cancel'\n        }\n        setDialogProps(dialogProps)\n        setShowDialog(true)\n    }\n\n    return (\n        <>\n            <CardWrapper\n                content={false}\n                sx={{\n                    padding: 0,\n                    borderColor: data.selected ? theme.palette.primary.main : theme.palette.text.secondary\n                }}\n                border={false}\n            >\n                <Box>\n                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                        <Box style={{ width: 50, marginRight: 10, padding: 5 }}>\n                            <div\n                                style={{\n                                    ...theme.typography.commonAvatar,\n                                    ...theme.typography.largeAvatar,\n                                    borderRadius: '50%',\n                                    backgroundColor: 'white',\n                                    cursor: 'grab'\n                                }}\n                            >\n                                <img\n                                    style={{ width: '100%', height: '100%', padding: 5, objectFit: 'contain' }}\n                                    src={`${baseURL}/api/v1/node-icon/${data.name}`}\n                                    alt='Notification'\n                                />\n                            </div>\n                        </Box>\n                        <Box>\n                            <Typography\n                                sx={{\n                                    fontSize: '1rem',\n                                    fontWeight: 500\n                                }}\n                            >\n                                {data.label}\n                            </Typography>\n                        </Box>\n                    </div>\n                    {(data.inputAnchors.length > 0 || data.inputParams.length > 0) && (\n                        <>\n                            <Divider />\n                            <Box sx={{ background: theme.palette.asyncSelect.main, p: 1 }}>\n                                <Typography\n                                    sx={{\n                                        fontWeight: 500,\n                                        textAlign: 'center'\n                                    }}\n                                >\n                                    Inputs\n                                </Typography>\n                            </Box>\n                            <Divider />\n                        </>\n                    )}\n                    {data.inputAnchors.map((inputAnchor, index) => (\n                        <NodeInputHandler disabled={true} key={index} inputAnchor={inputAnchor} data={data} />\n                    ))}\n                    {data.inputParams.map((inputParam, index) => (\n                        <NodeInputHandler disabled={true} key={index} inputParam={inputParam} data={data} />\n                    ))}\n                    {data.inputParams.find((param) => param.additionalParams) && (\n                        <div style={{ textAlign: 'center' }}>\n                            <Button sx={{ borderRadius: 25, width: '90%', mb: 2 }} variant='outlined' onClick={onDialogClicked}>\n                                Additional Parameters\n                            </Button>\n                        </div>\n                    )}\n                    <Divider />\n                    <Box sx={{ background: theme.palette.asyncSelect.main, p: 1 }}>\n                        <Typography\n                            sx={{\n                                fontWeight: 500,\n                                textAlign: 'center'\n                            }}\n                        >\n                            Output\n                        </Typography>\n                    </Box>\n                    <Divider />\n\n                    {data.outputAnchors.map((outputAnchor, index) => (\n                        <NodeOutputHandler disabled={true} key={index} outputAnchor={outputAnchor} data={data} />\n                    ))}\n                </Box>\n            </CardWrapper>\n            <AdditionalParamsDialog\n                show={showDialog}\n                dialogProps={dialogProps}\n                onCancel={() => setShowDialog(false)}\n            ></AdditionalParamsDialog>\n        </>\n    )\n}\n\nMarketplaceCanvasNode.propTypes = {\n    data: PropTypes.object\n}\n\nexport default MarketplaceCanvasNode\n","import PropTypes from 'prop-types'\nimport { useNavigate } from 'react-router-dom'\n\n// material-ui\nimport { useTheme } from '@mui/material/styles'\nimport { Avatar, Box, ButtonBase, Typography, Stack } from '@mui/material'\nimport { StyledButton } from 'ui-component/button/StyledButton'\n\n// icons\nimport { IconCopy, IconChevronLeft } from '@tabler/icons'\n\n// ==============================|| CANVAS HEADER ||============================== //\n\nconst MarketplaceCanvasHeader = ({ flowName, flowData, onChatflowCopy }) => {\n    const theme = useTheme()\n    const navigate = useNavigate()\n\n    return (\n        <>\n            <Box>\n                <ButtonBase title='Back' sx={{ borderRadius: '50%' }}>\n                    <Avatar\n                        variant='rounded'\n                        sx={{\n                            ...theme.typography.commonAvatar,\n                            ...theme.typography.mediumAvatar,\n                            transition: 'all .2s ease-in-out',\n                            background: theme.palette.secondary.light,\n                            color: theme.palette.secondary.dark,\n                            '&:hover': {\n                                background: theme.palette.secondary.dark,\n                                color: theme.palette.secondary.light\n                            }\n                        }}\n                        color='inherit'\n                        onClick={() => navigate(-1)}\n                    >\n                        <IconChevronLeft stroke={1.5} size='1.3rem' />\n                    </Avatar>\n                </ButtonBase>\n            </Box>\n            <Box sx={{ flexGrow: 1 }}>\n                <Stack flexDirection='row'>\n                    <Typography\n                        sx={{\n                            fontSize: '1.5rem',\n                            fontWeight: 600,\n                            ml: 2\n                        }}\n                    >\n                        {flowName}\n                    </Typography>\n                </Stack>\n            </Box>\n            <Box>\n                <StyledButton\n                    color='secondary'\n                    variant='contained'\n                    title='Use Chatflow'\n                    onClick={() => onChatflowCopy(flowData)}\n                    startIcon={<IconCopy />}\n                >\n                    Use Template\n                </StyledButton>\n            </Box>\n        </>\n    )\n}\n\nMarketplaceCanvasHeader.propTypes = {\n    flowName: PropTypes.string,\n    flowData: PropTypes.object,\n    onChatflowCopy: PropTypes.func\n}\n\nexport default MarketplaceCanvasHeader\n","import { useEffect, useRef } from 'react'\nimport ReactFlow, { Controls, Background, useNodesState, useEdgesState } from 'reactflow'\nimport 'reactflow/dist/style.css'\nimport 'views/canvas/index.css'\n\nimport { useLocation, useNavigate } from 'react-router-dom'\n\n// material-ui\nimport { Toolbar, Box, AppBar } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\n\n// project imports\nimport MarketplaceCanvasNode from './MarketplaceCanvasNode'\n\nimport MarketplaceCanvasHeader from './MarketplaceCanvasHeader'\n\nconst nodeTypes = { customNode: MarketplaceCanvasNode }\nconst edgeTypes = { buttonedge: '' }\n\n// ==============================|| CANVAS ||============================== //\n\nconst MarketplaceCanvas = () => {\n    const theme = useTheme()\n    const navigate = useNavigate()\n\n    const { state } = useLocation()\n    const { flowData, name } = state\n\n    // ==============================|| ReactFlow ||============================== //\n\n    const [nodes, setNodes, onNodesChange] = useNodesState()\n    const [edges, setEdges, onEdgesChange] = useEdgesState()\n\n    const reactFlowWrapper = useRef(null)\n\n    // ==============================|| useEffect ||============================== //\n\n    useEffect(() => {\n        if (flowData) {\n            const initialFlow = JSON.parse(flowData)\n            setNodes(initialFlow.nodes || [])\n            setEdges(initialFlow.edges || [])\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [flowData])\n\n    const onChatflowCopy = (flowData) => {\n        const templateFlowData = JSON.stringify(flowData)\n        navigate(`/canvas`, { state: { templateFlowData } })\n    }\n\n    return (\n        <>\n            <Box>\n                <AppBar\n                    enableColorOnDark\n                    position='fixed'\n                    color='inherit'\n                    elevation={1}\n                    sx={{\n                        bgcolor: theme.palette.background.default\n                    }}\n                >\n                    <Toolbar>\n                        <MarketplaceCanvasHeader\n                            flowName={name}\n                            flowData={JSON.parse(flowData)}\n                            onChatflowCopy={(flowData) => onChatflowCopy(flowData)}\n                        />\n                    </Toolbar>\n                </AppBar>\n                <Box sx={{ pt: '70px', height: '100vh', width: '100%' }}>\n                    <div className='reactflow-parent-wrapper'>\n                        <div className='reactflow-wrapper' ref={reactFlowWrapper}>\n                            <ReactFlow\n                                nodes={nodes}\n                                edges={edges}\n                                onNodesChange={onNodesChange}\n                                onEdgesChange={onEdgesChange}\n                                nodesDraggable={false}\n                                nodeTypes={nodeTypes}\n                                edgeTypes={edgeTypes}\n                                fitView\n                                minZoom={0.1}\n                            >\n                                <Controls\n                                    style={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        left: '50%',\n                                        transform: 'translate(-50%, -50%)'\n                                    }}\n                                />\n                                <Background color='#aaa' gap={16} />\n                            </ReactFlow>\n                        </div>\n                    </div>\n                </Box>\n            </Box>\n        </>\n    )\n}\n\nexport default MarketplaceCanvas\n"],"names":["CardWrapper","styled","MainCard","_ref","theme","background","palette","card","main","color","darkTextPrimary","border","borderColor","primary","width","height","padding","boxShadow","_ref2","data","useTheme","showDialog","setShowDialog","useState","dialogProps","setDialogProps","_jsxs","_Fragment","children","_jsx","content","sx","selected","text","secondary","Box","style","display","flexDirection","alignItems","marginRight","typography","commonAvatar","largeAvatar","borderRadius","backgroundColor","cursor","objectFit","src","concat","baseURL","name","alt","Typography","fontSize","fontWeight","label","inputAnchors","length","inputParams","Divider","asyncSelect","p","textAlign","map","inputAnchor","index","NodeInputHandler","disabled","inputParam","find","param","additionalParams","Button","mb","variant","onClick","onDialogClicked","filter","confirmButtonName","cancelButtonName","outputAnchors","outputAnchor","NodeOutputHandler","AdditionalParamsDialog","show","onCancel","flowName","flowData","onChatflowCopy","navigate","useNavigate","ButtonBase","title","Avatar","mediumAvatar","transition","light","dark","IconChevronLeft","stroke","size","flexGrow","Stack","ml","StyledButton","startIcon","IconCopy","nodeTypes","customNode","MarketplaceCanvasNode","edgeTypes","buttonedge","MarketplaceCanvas","state","useLocation","nodes","setNodes","onNodesChange","useNodesState","edges","setEdges","onEdgesChange","useEdgesState","reactFlowWrapper","useRef","useEffect","initialFlow","JSON","parse","AppBar","enableColorOnDark","position","elevation","bgcolor","default","Toolbar","MarketplaceCanvasHeader","templateFlowData","stringify","pt","className","ref","ReactFlow","nodesDraggable","fitView","minZoom","Controls","left","transform","Background","gap"],"sourceRoot":""}