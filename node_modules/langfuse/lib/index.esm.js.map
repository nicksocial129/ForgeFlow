{"version":3,"file":"index.esm.js","sources":["../../langfuse-core/src/types.ts","../../langfuse-core/src/utils.ts","../../langfuse-core/src/eventemitter.ts","../../langfuse-core/src/release-env.ts","../../langfuse-core/src/index.ts","../src/storage.ts","../src/langfuse.ts"],"sourcesContent":["import { type paths } from \"./openapi/server\";\n\nexport type LangfuseCoreOptions = {\n  // Langfuse API baseUrl (https://cloud.langfuse.com by default)\n  baseUrl?: string;\n  // The number of events to queue before sending to Langfuse (flushing)\n  flushAt?: number;\n  // The interval in milliseconds between periodic flushes\n  flushInterval?: number;\n  // How many times we will retry HTTP requests\n  fetchRetryCount?: number;\n  // The delay between HTTP request retries\n  fetchRetryDelay?: number;\n  // Timeout in milliseconds for any calls. Defaults to 10 seconds.\n  requestTimeout?: number;\n  // release (version) of the application, defaults to env LANGFUSE_RELEASE\n  release?: string;\n};\n\nexport enum LangfusePersistedProperty {\n  Props = \"props\",\n  Queue = \"queue\",\n  OptedOut = \"opted_out\",\n}\n\nexport type LangfuseFetchOptions = {\n  method: \"GET\" | \"POST\" | \"PUT\" | \"PATCH\";\n  headers: { [key: string]: string };\n  body?: string;\n  signal?: AbortSignal;\n};\n\nexport type LangfuseFetchResponse<T = any> = {\n  status: number;\n  text: () => Promise<string>;\n  json: () => Promise<T>;\n};\n\nexport type LangfuseQueueItem = {\n  apiRoute: keyof paths;\n  method: \"POST\" | \"PATCH\";\n  id: string;\n  body: any;\n  callback?: (err: any) => void;\n};\n\nexport type LangfuseEventProperties = {\n  [key: string]: any;\n};\n\nexport type LangfuseMetadataProperties = {\n  [key: string]: any;\n};\n\n// ASYNC\nexport type CreateLangfuseTraceBody = FixTypes<\n  paths[\"/api/public/traces\"][\"post\"][\"requestBody\"][\"content\"][\"application/json\"]\n>;\nexport type CreateLangfuseEventBody = FixTypes<\n  paths[\"/api/public/events\"][\"post\"][\"requestBody\"][\"content\"][\"application/json\"]\n>;\nexport type CreateLangfuseSpanBody = FixTypes<\n  paths[\"/api/public/spans\"][\"post\"][\"requestBody\"][\"content\"][\"application/json\"]\n>;\nexport type CreateLangfuseGenerationBody = Omit<\n  FixTypes<paths[\"/api/public/generations\"][\"post\"][\"requestBody\"][\"content\"][\"application/json\"]>,\n  \"input\" | \"output\"\n>;\nexport type CreateLangfuseScoreBody = FixTypes<\n  paths[\"/api/public/scores\"][\"post\"][\"requestBody\"][\"content\"][\"application/json\"]\n>;\nexport type UpdateLangfuseSpanBody = FixTypes<\n  paths[\"/api/public/spans\"][\"patch\"][\"requestBody\"][\"content\"][\"application/json\"]\n>;\nexport type UpdateLangfuseGenerationBody = FixTypes<\n  paths[\"/api/public/generations\"][\"patch\"][\"requestBody\"][\"content\"][\"application/json\"]\n>;\n\nexport type LangfuseObject =\n  | \"createTrace\"\n  | \"createEvent\"\n  | \"createSpan\"\n  | \"createGeneration\"\n  | \"createScore\"\n  | \"updateSpan\"\n  | \"updateGeneration\";\n\nexport const LangfusePostApiRoutes: Record<LangfuseObject, [LangfuseQueueItem[\"method\"], keyof paths]> = {\n  createTrace: [\"POST\", \"/api/public/traces\"],\n  createEvent: [\"POST\", \"/api/public/events\"],\n  createSpan: [\"POST\", \"/api/public/spans\"],\n  updateSpan: [\"PATCH\", \"/api/public/spans\"],\n  createGeneration: [\"POST\", \"/api/public/generations\"],\n  updateGeneration: [\"PATCH\", \"/api/public/generations\"],\n  createScore: [\"POST\", \"/api/public/scores\"],\n};\n\n// SYNC\nexport type GetLangfuseDatasetParams = FixTypes<\n  paths[\"/api/public/datasets/{datasetName}\"][\"get\"][\"parameters\"][\"path\"]\n>;\nexport type GetLangfuseDatasetResponse = FixTypes<\n  paths[\"/api/public/datasets/{datasetName}\"][\"get\"][\"responses\"][\"200\"][\"content\"][\"application/json\"]\n>;\nexport type CreateLangfuseDatasetRunItemBody = FixTypes<\n  paths[\"/api/public/dataset-run-items\"][\"post\"][\"requestBody\"][\"content\"][\"application/json\"]\n>;\nexport type CreateLangfuseDatasetRunItemResponse = FixTypes<\n  paths[\"/api/public/dataset-run-items\"][\"post\"][\"responses\"][\"200\"][\"content\"][\"application/json\"]\n>;\nexport type CreateLangfuseDatasetBody =\n  paths[\"/api/public/datasets\"][\"post\"][\"requestBody\"][\"content\"][\"application/json\"];\nexport type CreateLangfuseDatasetResponse = FixTypes<\n  paths[\"/api/public/datasets\"][\"post\"][\"responses\"][\"200\"][\"content\"][\"application/json\"]\n>;\nexport type CreateLangfuseDatasetItemBody = FixTypes<\n  paths[\"/api/public/dataset-items\"][\"post\"][\"requestBody\"][\"content\"][\"application/json\"]\n>;\nexport type CreateLangfuseDatasetItemResponse = FixTypes<\n  paths[\"/api/public/dataset-items\"][\"post\"][\"responses\"][\"200\"][\"content\"][\"application/json\"]\n>;\nexport type GetLangfuseDatasetRunParams = FixTypes<\n  paths[\"/api/public/datasets/{datasetName}/runs/{runName}\"][\"get\"][\"parameters\"][\"path\"]\n>;\nexport type GetLangfuseDatasetRunResponse = FixTypes<\n  paths[\"/api/public/datasets/{datasetName}/runs/{runName}\"][\"get\"][\"responses\"][\"200\"][\"content\"][\"application/json\"]\n>;\n\nexport type JsonType = string | number | boolean | null | { [key: string]: JsonType } | Array<JsonType>;\n\ntype OptionalTypes<T> = T extends null | undefined ? T : never;\ntype FixTypes<T> = Omit<\n  {\n    [P in keyof T]: P extends \"startTime\" | \"endTime\" | \"timestamp\" | \"completionStartTime\" | \"createdAt\" | \"updatedAt\"\n      ? // Dates instead of strings\n        Date | OptionalTypes<T[P]>\n      : P extends \"metadata\" | \"input\" | \"output\" | \"prompt\" | \"completion\" | \"expectedOutput\"\n      ? // JSON instead of strings\n        any | OptionalTypes<T[P]>\n      : T[P];\n  },\n  \"externalId\" | \"traceIdType\"\n>;\n\nexport type DeferRuntime = {\n  langfuseTraces: (\n    traces: {\n      id: string;\n      name: string;\n      url: string;\n    }[]\n  ) => void;\n};\n","export function assert(truthyValue: any, message: string): void {\n  if (!truthyValue) {\n    throw new Error(message);\n  }\n}\n\nexport function removeTrailingSlash(url: string): string {\n  return url?.replace(/\\/+$/, \"\");\n}\n\nexport interface RetriableOptions {\n  retryCount?: number;\n  retryDelay?: number;\n  retryCheck?: (err: any) => boolean;\n}\n\nexport async function retriable<T>(\n  fn: () => Promise<T>,\n  props: RetriableOptions = {},\n  log: (msg: string) => void\n): Promise<T> {\n  const { retryCount = 3, retryDelay = 5000, retryCheck = () => true } = props;\n  let lastError = null;\n\n  for (let i = 0; i < retryCount + 1; i++) {\n    if (i > 0) {\n      // don't wait when it's the first try\n      await new Promise((resolve) => setTimeout(resolve, retryDelay));\n      log(`Retrying ${i + 1} of ${retryCount + 1}`);\n    }\n\n    try {\n      const res = await fn();\n      return res;\n    } catch (e) {\n      lastError = e;\n      if (!retryCheck(e)) {\n        throw e;\n      }\n      log(`Retriable error: ${JSON.stringify(e)}`);\n    }\n  }\n\n  throw lastError;\n}\n\n// https://stackoverflow.com/a/8809472\nexport function generateUUID(globalThis?: any): string {\n  // Public Domain/MIT\n  let d = new Date().getTime(); //Timestamp\n  let d2 =\n    (globalThis && globalThis.performance && globalThis.performance.now && globalThis.performance.now() * 1000) || 0; //Time in microseconds since page-load or 0 if unsupported\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16; //random number between 0 and 16\n    if (d > 0) {\n      //Use timestamp until depleted\n      r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    } else {\n      //Use microseconds since page-load if supported\n      r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n\nexport function currentTimestamp(): number {\n  return new Date().getTime();\n}\n\nexport function currentISOTime(): string {\n  return new Date().toISOString();\n}\n\nexport function safeSetTimeout(fn: () => void, timeout: number): any {\n  // NOTE: we use this so rarely that it is totally fine to do `safeSetTimeout(fn, 0)``\n  // rather than setImmediate.\n  const t = setTimeout(fn, timeout) as any;\n  // We unref if available to prevent Node.js hanging on exit\n  t?.unref && t?.unref();\n  return t;\n}\n\nexport function getEnv<T = string>(key: string): T | undefined {\n  if (typeof process !== \"undefined\" && process.env[key]) {\n    return process.env[key] as T;\n  } else if (typeof globalThis !== \"undefined\") {\n    return (globalThis as any)[key];\n  }\n  return;\n}\n","export class SimpleEventEmitter {\n  events: { [key: string]: ((...args: any[]) => void)[] } = {};\n\n  constructor() {\n    this.events = {};\n  }\n\n  on(event: string, listener: (...args: any[]) => void): () => void {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n\n    return () => {\n      this.events[event] = this.events[event].filter((x) => x !== listener);\n    };\n  }\n\n  emit(event: string, payload: any): void {\n    for (const listener of this.events[event] || []) {\n      listener(payload);\n    }\n    for (const listener of this.events[\"*\"] || []) {\n      listener(event, payload);\n    }\n  }\n}\n","const common_release_envs = [\n  // Vercel\n  \"VERCEL_GIT_COMMIT_SHA\",\n  \"NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA\",\n  // Netlify\n  \"COMMIT_REF\",\n  // Render\n  \"RENDER_GIT_COMMIT\",\n  // GitLab CI\n  \"CI_COMMIT_SHA\",\n  // CicleCI\n  \"CIRCLE_SHA1\",\n  // Cloudflare pages\n  \"CF_PAGES_COMMIT_SHA\",\n  // AWS Amplify\n  \"REACT_APP_GIT_SHA\",\n  // Heroku\n  \"SOURCE_VERSION\",\n] as const;\n\nexport function getCommonReleaseEnvs(): string | undefined {\n  for (const env of common_release_envs) {\n    if (process.env[env]) {\n      return process.env[env];\n    }\n  }\n  return undefined;\n}\n","import {\n  type LangfuseFetchOptions,\n  type LangfuseFetchResponse,\n  type LangfuseQueueItem,\n  type LangfuseCoreOptions,\n  LangfusePersistedProperty,\n  type CreateLangfuseTraceBody,\n  type LangfuseObject,\n  LangfusePostApiRoutes,\n  type CreateLangfuseEventBody,\n  type CreateLangfuseSpanBody,\n  type CreateLangfuseGenerationBody,\n  type CreateLangfuseScoreBody,\n  type UpdateLangfuseSpanBody,\n  type UpdateLangfuseGenerationBody,\n  type GetLangfuseDatasetParams,\n  type GetLangfuseDatasetResponse,\n  type CreateLangfuseDatasetRunItemBody,\n  type CreateLangfuseDatasetRunItemResponse,\n  type CreateLangfuseDatasetBody,\n  type CreateLangfuseDatasetResponse,\n  type CreateLangfuseDatasetItemBody,\n  type CreateLangfuseDatasetItemResponse,\n  type GetLangfuseDatasetRunResponse,\n  type GetLangfuseDatasetRunParams,\n  type DeferRuntime,\n} from \"./types\";\nimport {\n  assert,\n  generateUUID,\n  removeTrailingSlash,\n  retriable,\n  type RetriableOptions,\n  safeSetTimeout,\n  getEnv,\n} from \"./utils\";\nexport * as utils from \"./utils\";\nimport { SimpleEventEmitter } from \"./eventemitter\";\nimport { getCommonReleaseEnvs } from \"./release-env\";\n\nclass LangfuseFetchHttpError extends Error {\n  name = \"LangfuseFetchHttpError\";\n\n  constructor(public response: LangfuseFetchResponse) {\n    super(\"HTTP error while fetching Langfuse: \" + response.status);\n  }\n}\n\nclass LangfuseFetchNetworkError extends Error {\n  name = \"LangfuseFetchNetworkError\";\n\n  constructor(public error: unknown) {\n    super(\"Network error while fetching Langfuse\", error instanceof Error ? { cause: error } : {});\n  }\n}\n\nfunction isLangfuseFetchError(err: any): boolean {\n  return typeof err === \"object\" && (err.name === \"LangfuseFetchHttpError\" || err.name === \"LangfuseFetchNetworkError\");\n}\n\nabstract class LangfuseCoreStateless {\n  // options\n  private secretKey: string | undefined;\n  private publicKey: string;\n  baseUrl: string;\n  private flushAt: number;\n  private flushInterval: number;\n  private requestTimeout: number;\n  private removeDebugCallback?: () => void;\n  private debugMode: boolean = false;\n  private pendingPromises: Record<string, Promise<any>> = {};\n  private release: string | undefined;\n\n  // internal\n  protected _events = new SimpleEventEmitter();\n  protected _flushTimer?: any;\n  protected _retryOptions: RetriableOptions;\n\n  // Abstract methods to be overridden by implementations\n  abstract fetch(url: string, options: LangfuseFetchOptions): Promise<LangfuseFetchResponse>;\n  abstract getLibraryId(): string;\n  abstract getLibraryVersion(): string;\n\n  // This is our abstracted storage. Each implementation should handle its own\n  abstract getPersistedProperty<T>(key: LangfusePersistedProperty): T | undefined;\n  abstract setPersistedProperty<T>(key: LangfusePersistedProperty, value: T | null): void;\n\n  constructor(params: { publicKey: string; secretKey?: string } & LangfuseCoreOptions) {\n    const { publicKey, secretKey, ...options } = params;\n    assert(publicKey, \"You must pass your Langfuse project's api public key.\");\n\n    this.publicKey = publicKey;\n    this.secretKey = secretKey;\n    this.baseUrl = removeTrailingSlash(options?.baseUrl || \"https://cloud.langfuse.com\");\n    this.flushAt = options?.flushAt ? Math.max(options?.flushAt, 1) : 1;\n    this.flushInterval = options?.flushInterval ?? 10000;\n    this.release = options?.release ?? getEnv(\"LANGFUSE_RELEASE\") ?? getCommonReleaseEnvs() ?? undefined;\n\n    this._retryOptions = {\n      retryCount: options?.fetchRetryCount ?? 3,\n      retryDelay: options?.fetchRetryDelay ?? 3000,\n      retryCheck: isLangfuseFetchError,\n    };\n    this.requestTimeout = options?.requestTimeout ?? 10000; // 10 seconds\n  }\n\n  protected getCommonEventProperties(): any {\n    return {\n      $lib: this.getLibraryId(),\n      $lib_version: this.getLibraryVersion(),\n    };\n  }\n\n  on(event: string, cb: (...args: any[]) => void): () => void {\n    return this._events.on(event, cb);\n  }\n\n  debug(enabled: boolean = true): void {\n    this.removeDebugCallback?.();\n\n    this.debugMode = enabled;\n\n    if (enabled) {\n      this.removeDebugCallback = this.on(\"*\", (event, payload) => console.log(\"Langfuse Debug\", event, payload));\n    }\n  }\n\n  /***\n   *** Handlers for each object type\n   ***/\n  protected traceStateless(body: CreateLangfuseTraceBody): string {\n    const { id: bodyId, release: bodyRelease, ...rest } = body;\n\n    const id = bodyId ?? generateUUID();\n    const release = bodyRelease ?? this.release;\n\n    const parsedBody: CreateLangfuseTraceBody = {\n      id,\n      release,\n      ...rest,\n    };\n    this.enqueue(\"createTrace\", parsedBody);\n    return id;\n  }\n\n  protected eventStateless(body: CreateLangfuseEventBody): string {\n    const { id: bodyId, startTime: bodyStartTime, ...rest } = body;\n\n    const id = bodyId ?? generateUUID();\n\n    const parsedBody: CreateLangfuseEventBody = {\n      id,\n      startTime: bodyStartTime ?? new Date(),\n      ...rest,\n    };\n    this.enqueue(\"createEvent\", parsedBody);\n    return id;\n  }\n\n  protected spanStateless(body: CreateLangfuseSpanBody): string {\n    const { id: bodyId, startTime: bodyStartTime, ...rest } = body;\n\n    const id = bodyId || generateUUID();\n\n    const parsedBody: CreateLangfuseSpanBody = {\n      id,\n      startTime: bodyStartTime ?? new Date(),\n      ...rest,\n    };\n    this.enqueue(\"createSpan\", parsedBody);\n    return id;\n  }\n\n  protected generationStateless(body: CreateLangfuseGenerationBody): string {\n    const { id: bodyId, startTime: bodyStartTime, ...rest } = body;\n\n    const id = bodyId || generateUUID();\n\n    const parsedBody: CreateLangfuseGenerationBody = {\n      id,\n      startTime: bodyStartTime ?? new Date(),\n      ...rest,\n    };\n    this.enqueue(\"createGeneration\", parsedBody);\n    return id;\n  }\n\n  protected scoreStateless(body: CreateLangfuseScoreBody): string {\n    const { id: bodyId, ...rest } = body;\n\n    const id = bodyId || generateUUID();\n\n    const parsedBody: CreateLangfuseScoreBody = {\n      id,\n      ...rest,\n    };\n    this.enqueue(\"createScore\", parsedBody);\n    return id;\n  }\n\n  protected updateSpanStateless(body: UpdateLangfuseSpanBody): string {\n    this.enqueue(\"updateSpan\", body);\n    return body.spanId;\n  }\n\n  protected updateGenerationStateless(body: UpdateLangfuseGenerationBody): string {\n    this.enqueue(\"updateGeneration\", body);\n    return body.generationId;\n  }\n\n  protected async _getDataset(name: GetLangfuseDatasetParams[\"datasetName\"]): Promise<GetLangfuseDatasetResponse> {\n    return this.fetch(`${this.baseUrl}/api/public/datasets/${name}`, this.getFetchOptions({ method: \"GET\" })).then(\n      (res) => res.json()\n    );\n  }\n\n  async getDatasetRun(params: GetLangfuseDatasetRunParams): Promise<GetLangfuseDatasetRunResponse> {\n    return this.fetch(\n      `${this.baseUrl}/api/public/datasets/${params.datasetName}/runs/${params.runName}`,\n      this.getFetchOptions({ method: \"GET\" })\n    ).then((res) => res.json());\n  }\n\n  async createDatasetRunItem(body: CreateLangfuseDatasetRunItemBody): Promise<CreateLangfuseDatasetRunItemResponse> {\n    return this.fetch(\n      `${this.baseUrl}/api/public/dataset-run-items`,\n      this.getFetchOptions({ method: \"POST\", body: JSON.stringify(body) })\n    ).then((res) => res.json());\n  }\n\n  async createDataset(name: string): Promise<CreateLangfuseDatasetResponse> {\n    const body: CreateLangfuseDatasetBody = { name };\n    return this.fetch(\n      `${this.baseUrl}/api/public/datasets`,\n      this.getFetchOptions({ method: \"POST\", body: JSON.stringify(body) })\n    ).then((res) => res.json());\n  }\n\n  /**\n   * Creates a dataset item. Upserts the item if it already exists.\n   * @param body The body of the dataset item to be created.\n   * @returns A promise that resolves to the response of the create operation.\n   */\n  async createDatasetItem(body: CreateLangfuseDatasetItemBody): Promise<CreateLangfuseDatasetItemResponse> {\n    return this.fetch(\n      `${this.baseUrl}/api/public/dataset-items`,\n      this.getFetchOptions({ method: \"POST\", body: JSON.stringify(body) })\n    ).then((res) => res.json());\n  }\n\n  async getDatasetItem(id: string): Promise<CreateLangfuseDatasetItemResponse> {\n    return this.fetch(`${this.baseUrl}/api/public/dataset-items/${id}`, this.getFetchOptions({ method: \"GET\" })).then(\n      (res) => res.json()\n    );\n  }\n\n  protected _parsePayload(response: any): any {\n    try {\n      return JSON.parse(response);\n    } catch {\n      return response;\n    }\n  }\n\n  /***\n   *** QUEUEING AND FLUSHING\n   ***/\n  protected enqueue(type: LangfuseObject, body: any): void {\n    const queue = this.getPersistedProperty<LangfuseQueueItem[]>(LangfusePersistedProperty.Queue) || [];\n\n    const id = generateUUID();\n\n    queue.push({\n      id,\n      method: LangfusePostApiRoutes[type][0],\n      apiRoute: LangfusePostApiRoutes[type][1],\n      body,\n    });\n    this.setPersistedProperty<LangfuseQueueItem[]>(LangfusePersistedProperty.Queue, queue);\n\n    this._events.emit(type, body);\n\n    // Flush queued events if we meet the flushAt length\n    if (queue.length >= this.flushAt) {\n      this.flush();\n    }\n\n    if (this.flushInterval && !this._flushTimer) {\n      this._flushTimer = safeSetTimeout(() => this.flush(), this.flushInterval);\n    }\n  }\n\n  flushAsync(): Promise<any> {\n    return Promise.all(this.flush());\n  }\n\n  // Flushes all events that are not yet sent to the server\n  // @returns {Promise[]} - list of promises for each item in the queue that is flushed\n  flush(): Promise<LangfuseFetchResponse>[] {\n    if (this._flushTimer) {\n      clearTimeout(this._flushTimer);\n      this._flushTimer = null;\n    }\n\n    const queue = this.getPersistedProperty<LangfuseQueueItem[]>(LangfusePersistedProperty.Queue) || [];\n\n    if (!queue.length) {\n      return [];\n    }\n\n    // Flush all items in queue, could also use flushAt with splice to flush only a certain number of items (e.g. when batching)\n    const items = queue;\n    this.setPersistedProperty<LangfuseQueueItem[]>(LangfusePersistedProperty.Queue, []);\n\n    // TODO: add /batch endpoint to ingest multiple events at once\n    const promises = items.map((item) => {\n      const done = (err?: any): void => {\n        if (err) {\n          this._events.emit(\"error\", err);\n        }\n        // remove promise from pendingPromises\n        delete this.pendingPromises[item.id];\n        this._events.emit(\"flush\", item);\n      };\n      const payload = JSON.stringify(item.body); // implicit conversion also of dates to strings\n      const url = `${this.baseUrl}${item.apiRoute}`;\n\n      const fetchOptions = this.getFetchOptions({\n        method: item.method,\n        body: payload,\n      });\n\n      const requestPromise = this.fetchWithRetry(url, fetchOptions);\n      this.pendingPromises[item.id] = requestPromise;\n      requestPromise\n        .then(() => done())\n        .catch((err) => {\n          done(err);\n        });\n      return requestPromise;\n    });\n\n    return promises;\n  }\n\n  private getFetchOptions(p: {\n    method: LangfuseFetchOptions[\"method\"];\n    body?: LangfuseFetchOptions[\"body\"];\n  }): LangfuseFetchOptions {\n    const fetchOptions: LangfuseFetchOptions = {\n      method: p.method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Langfuse-Sdk-Name\": \"langfuse-js\",\n        \"X-Langfuse-Sdk-Version\": this.getLibraryVersion(),\n        \"X-Langfuse-Sdk-Variant\": this.getLibraryId(),\n        \"X-Langfuse-Public-Key\": this.publicKey,\n        ...this.constructAuthorizationHeader(this.publicKey, this.secretKey),\n      },\n      body: p.body,\n    };\n\n    return fetchOptions;\n  }\n\n  private constructAuthorizationHeader(\n    publicKey: string,\n    secretKey?: string\n  ): {\n    Authorization: string;\n  } {\n    if (secretKey === undefined) {\n      return { Authorization: \"Bearer \" + publicKey };\n    } else {\n      const encodedCredentials =\n        typeof btoa === \"function\"\n          ? // btoa() is available, the code is running in a browser or edge environment\n            btoa(publicKey + \":\" + secretKey)\n          : // btoa() is not available, the code is running in Node.js\n            Buffer.from(publicKey + \":\" + secretKey).toString(\"base64\");\n\n      return { Authorization: \"Basic \" + encodedCredentials };\n    }\n  }\n\n  private async fetchWithRetry(\n    url: string,\n    options: LangfuseFetchOptions,\n    retryOptions?: RetriableOptions\n  ): Promise<LangfuseFetchResponse> {\n    (AbortSignal as any).timeout ??= function timeout(ms: number) {\n      const ctrl = new AbortController();\n      setTimeout(() => ctrl.abort(), ms);\n      return ctrl.signal;\n    };\n\n    return await retriable(\n      async () => {\n        let res: LangfuseFetchResponse | null = null;\n        try {\n          res = await this.fetch(url, {\n            signal: (AbortSignal as any).timeout(this.requestTimeout),\n            ...options,\n          });\n        } catch (e) {\n          // fetch will only throw on network errors or on timeouts\n          throw new LangfuseFetchNetworkError(e);\n        }\n        if (res.status < 200 || res.status >= 400) {\n          throw new LangfuseFetchHttpError(res);\n        }\n        return res;\n      },\n      { ...this._retryOptions, ...retryOptions },\n      (string) => this._events.emit(\"retry\", string + \", \" + url + \", \" + JSON.stringify(options))\n    );\n  }\n\n  async shutdownAsync(): Promise<void> {\n    clearTimeout(this._flushTimer);\n    try {\n      await this.flushAsync();\n      await Promise.all(\n        Object.values(this.pendingPromises).map((x) =>\n          x.catch(() => {\n            // ignore errors as we are shutting down and can't deal with them anyways.\n          })\n        )\n      );\n    } catch (e) {\n      if (!isLangfuseFetchError(e)) {\n        throw e;\n      }\n      console.error(\"Error while shutting down Langfuse\", e);\n    }\n  }\n\n  shutdown(): void {\n    void this.shutdownAsync();\n  }\n\n  protected async awaitAllQueuedAndPendingRequests(): Promise<void> {\n    clearTimeout(this._flushTimer);\n    await this.flushAsync();\n    await Promise.all(Object.values(this.pendingPromises));\n  }\n}\n\nexport abstract class LangfuseWebStateless extends LangfuseCoreStateless {\n  constructor(params: { publicKey: string } & LangfuseCoreOptions) {\n    const { flushAt, flushInterval, ...rest } = params;\n    super({\n      ...rest,\n      flushAt: flushAt ?? 1,\n      flushInterval: flushInterval ?? 0,\n    });\n  }\n\n  async score(body: CreateLangfuseScoreBody): Promise<this> {\n    this.scoreStateless(body);\n    await this.awaitAllQueuedAndPendingRequests();\n    return this;\n  }\n}\n\nexport abstract class LangfuseCore extends LangfuseCoreStateless {\n  constructor(params: { publicKey: string; secretKey: string } & LangfuseCoreOptions) {\n    assert(params.publicKey, \"You must pass your Langfuse project's api public key.\");\n    assert(params.secretKey, \"You must pass your Langfuse project's api secret key.\");\n    super(params);\n  }\n\n  trace(body?: CreateLangfuseTraceBody): LangfuseTraceClient {\n    const id = this.traceStateless(body ?? {});\n    const t = new LangfuseTraceClient(this, id);\n    if (getEnv(\"DEFER\") && body) {\n      try {\n        const deferRuntime = getEnv<DeferRuntime>(\"__deferRuntime\");\n        if (deferRuntime) {\n          deferRuntime.langfuseTraces([\n            {\n              id: id,\n              name: body.name || \"\",\n              url: t.getTraceUrl(),\n            },\n          ]);\n        }\n      } catch {}\n    }\n    return t;\n  }\n\n  span(body: CreateLangfuseSpanBody): LangfuseSpanClient {\n    const traceId = body.traceId || this.traceStateless({ name: body.name });\n    const id = this.spanStateless({ ...body, traceId });\n    return new LangfuseSpanClient(this, id, traceId);\n  }\n\n  generation(body: CreateLangfuseGenerationBody): LangfuseGenerationClient {\n    const traceId = body.traceId || this.traceStateless({ name: body.name });\n    const id = this.generationStateless({ ...body, traceId });\n    return new LangfuseGenerationClient(this, id, traceId);\n  }\n\n  event(body: CreateLangfuseEventBody): LangfuseEventClient {\n    const traceId = body.traceId || this.traceStateless({ name: body.name });\n    const id = this.eventStateless({ ...body, traceId });\n    return new LangfuseEventClient(this, id, traceId);\n  }\n\n  score(body: CreateLangfuseScoreBody): this {\n    this.scoreStateless(body);\n    return this;\n  }\n\n  async getDataset(name: string): Promise<{\n    id: string;\n    name: string;\n    projectId: string;\n    items: Array<{\n      id: string;\n      input: any;\n      expectedOutput?: any;\n      sourceObservationId?: string | null;\n      link: (obj: LangfuseObservationClient, runName: string) => Promise<{ id: string }>;\n    }>;\n  }> {\n    const { items, ...dataset } = await this._getDataset(name);\n\n    const returnDataset = {\n      ...dataset,\n      items: items.map((item) => ({\n        ...item,\n        link: async (obj: LangfuseObservationClient, runName: string) => {\n          await this.awaitAllQueuedAndPendingRequests();\n          const data = await this.createDatasetRunItem({\n            runName,\n            datasetItemId: item.id,\n            observationId: obj.id,\n          });\n          return data;\n        },\n      })),\n    };\n\n    return returnDataset;\n  }\n\n  _updateSpan(body: UpdateLangfuseSpanBody): this {\n    this.updateSpanStateless(body);\n    return this;\n  }\n\n  _updateGeneration(body: UpdateLangfuseGenerationBody): this {\n    this.updateGenerationStateless(body);\n    return this;\n  }\n}\n\nexport abstract class LangfuseObjectClient {\n  public readonly client: LangfuseCore;\n  public readonly id: string;\n  public readonly traceId: string;\n  public readonly observationId: string | null;\n\n  constructor({\n    client,\n    id,\n    traceId,\n    observationId,\n  }: {\n    client: LangfuseCore;\n    id: string;\n    traceId: string;\n    observationId: string | null;\n  }) {\n    this.client = client;\n    this.id = id;\n    this.traceId = traceId;\n    this.observationId = observationId;\n  }\n\n  event(body: Omit<CreateLangfuseEventBody, \"traceId\" | \"parentObservationId\">): LangfuseEventClient {\n    return this.client.event({\n      ...body,\n      traceId: this.traceId,\n      parentObservationId: this.observationId,\n    });\n  }\n\n  span(body: Omit<CreateLangfuseSpanBody, \"traceId\" | \"parentObservationId\">): LangfuseSpanClient {\n    return this.client.span({\n      ...body,\n      traceId: this.traceId,\n      parentObservationId: this.observationId,\n    });\n  }\n\n  generation(body: Omit<CreateLangfuseGenerationBody, \"traceId\" | \"parentObservationId\">): LangfuseGenerationClient {\n    return this.client.generation({\n      ...body,\n      traceId: this.traceId,\n      parentObservationId: this.observationId,\n    });\n  }\n\n  score(body: Omit<CreateLangfuseScoreBody, \"traceId\" | \"parentObservationId\">): this {\n    this.client.score({\n      ...body,\n      traceId: this.traceId,\n      observationId: this.observationId,\n    });\n    return this;\n  }\n\n  getTraceUrl(): string {\n    return `${this.client.baseUrl}/trace/${this.traceId}`;\n  }\n}\n\nexport class LangfuseTraceClient extends LangfuseObjectClient {\n  constructor(client: LangfuseCore, traceId: string) {\n    super({ client, id: traceId, traceId, observationId: null });\n  }\n\n  update(body: Omit<CreateLangfuseTraceBody, \"id\">): this {\n    this.client.trace({\n      ...body,\n      id: this.id,\n    });\n    return this;\n  }\n}\n\nabstract class LangfuseObservationClient extends LangfuseObjectClient {\n  constructor(client: LangfuseCore, id: string, traceId: string) {\n    super({ client, id, traceId, observationId: id });\n  }\n}\n\nexport class LangfuseSpanClient extends LangfuseObservationClient {\n  constructor(client: LangfuseCore, id: string, traceId: string) {\n    super(client, id, traceId);\n  }\n\n  update(body: Omit<UpdateLangfuseSpanBody, \"spanId\" | \"traceId\">): this {\n    this.client._updateSpan({\n      ...body,\n      spanId: this.id,\n      traceId: this.traceId,\n    });\n    return this;\n  }\n\n  end(body?: Omit<UpdateLangfuseSpanBody, \"spanId\" | \"endTime\" | \"traceId\">): this {\n    this.client._updateSpan({\n      ...body,\n      spanId: this.id,\n      traceId: this.traceId,\n      endTime: new Date(),\n    });\n    return this;\n  }\n}\n\nexport class LangfuseGenerationClient extends LangfuseObservationClient {\n  constructor(client: LangfuseCore, id: string, traceId: string) {\n    super(client, id, traceId);\n  }\n\n  update(body: Omit<UpdateLangfuseGenerationBody, \"generationId\" | \"traceId\">): this {\n    this.client._updateGeneration({\n      ...body,\n      generationId: this.id,\n      traceId: this.traceId,\n    });\n    return this;\n  }\n\n  end(body?: Omit<UpdateLangfuseGenerationBody, \"generationId\" | \"traceId\" | \"endTime\">): this {\n    this.client._updateGeneration({\n      ...body,\n      generationId: this.id,\n      traceId: this.traceId,\n      endTime: new Date(),\n    });\n    return this;\n  }\n}\n\nexport class LangfuseEventClient extends LangfuseObservationClient {\n  constructor(client: LangfuseCore, id: string, traceId: string) {\n    super(client, id, traceId);\n  }\n}\n\nexport * from \"./types\";\nexport * from \"./openapi/server\";\n","import { type LangfuseOptions } from \"./types\";\n\nexport type LangfuseStorage = {\n  getItem: (key: string) => string | null | undefined;\n  setItem: (key: string, value: string) => void;\n  removeItem: (key: string) => void;\n  clear: () => void;\n  getAllKeys: () => readonly string[];\n};\n\n// Methods partially borrowed from quirksmode.org/js/cookies.html\nexport const cookieStore: LangfuseStorage = {\n  getItem(key) {\n    try {\n      const nameEQ = key + \"=\";\n      const ca = document.cookie.split(\";\");\n      for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == \" \") {\n          c = c.substring(1, c.length);\n        }\n        if (c.indexOf(nameEQ) === 0) {\n          return decodeURIComponent(c.substring(nameEQ.length, c.length));\n        }\n      }\n    } catch (err) {}\n    return null;\n  },\n\n  setItem(key: string, value: string) {\n    try {\n      const cdomain = \"\",\n        expires = \"\",\n        secure = \"\";\n\n      const new_cookie_val = key + \"=\" + encodeURIComponent(value) + expires + \"; path=/\" + cdomain + secure;\n      document.cookie = new_cookie_val;\n    } catch (err) {\n      return;\n    }\n  },\n\n  removeItem(name) {\n    try {\n      cookieStore.setItem(name, \"\");\n    } catch (err) {\n      return;\n    }\n  },\n  clear() {\n    document.cookie = \"\";\n  },\n  getAllKeys() {\n    const ca = document.cookie.split(\";\");\n    const keys = [];\n\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) == \" \") {\n        c = c.substring(1, c.length);\n      }\n      keys.push(c.split(\"=\")[0]);\n    }\n\n    return keys;\n  },\n};\n\nconst createStorageLike = (store: any): LangfuseStorage => {\n  return {\n    getItem(key) {\n      return store.getItem(key);\n    },\n\n    setItem(key, value) {\n      store.setItem(key, value);\n    },\n\n    removeItem(key) {\n      store.removeItem(key);\n    },\n    clear() {\n      store.clear();\n    },\n    getAllKeys() {\n      const keys = [];\n      for (const key in localStorage) {\n        keys.push(key);\n      }\n      return keys;\n    },\n  };\n};\n\nconst checkStoreIsSupported = (storage: LangfuseStorage, key = \"__mplssupport__\"): boolean => {\n  if (!window) {\n    return false;\n  }\n  try {\n    const val = \"xyz\";\n    storage.setItem(key, val);\n    if (storage.getItem(key) !== val) {\n      return false;\n    }\n    storage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n\nlet localStore: LangfuseStorage | undefined = undefined;\nlet sessionStore: LangfuseStorage | undefined = undefined;\n\nconst createMemoryStorage = (): LangfuseStorage => {\n  const _cache: { [key: string]: any | undefined } = {};\n\n  const store: LangfuseStorage = {\n    getItem(key) {\n      return _cache[key];\n    },\n\n    setItem(key, value) {\n      _cache[key] = value !== null ? value : undefined;\n    },\n\n    removeItem(key) {\n      delete _cache[key];\n    },\n    clear() {\n      for (const key in _cache) {\n        delete _cache[key];\n      }\n    },\n    getAllKeys() {\n      const keys = [];\n      for (const key in _cache) {\n        keys.push(key);\n      }\n      return keys;\n    },\n  };\n  return store;\n};\n\nexport const getStorage = (type: LangfuseOptions[\"persistence\"], window: Window | undefined): LangfuseStorage => {\n  if (typeof window !== undefined && window) {\n    if (!localStorage) {\n      const _localStore = createStorageLike(window.localStorage);\n      localStore = checkStoreIsSupported(_localStore) ? _localStore : undefined;\n    }\n\n    if (!sessionStore) {\n      const _sessionStore = createStorageLike(window.sessionStorage);\n      sessionStore = checkStoreIsSupported(_sessionStore) ? _sessionStore : undefined;\n    }\n  }\n\n  switch (type) {\n    case \"cookie\":\n      return cookieStore || localStore || sessionStore || createMemoryStorage();\n    case \"localStorage\":\n      return localStore || sessionStore || createMemoryStorage();\n    case \"sessionStorage\":\n      return sessionStore || createMemoryStorage();\n    case \"memory\":\n      return createMemoryStorage();\n    default:\n      return createMemoryStorage();\n  }\n};\n","import {\n  LangfuseCore,\n  LangfuseWebStateless,\n  type LangfuseFetchOptions,\n  type LangfuseFetchResponse,\n  type LangfusePersistedProperty,\n} from \"../../langfuse-core/src\";\nimport { type LangfuseStorage, getStorage } from \"./storage\";\nimport { version } from \"../package.json\";\nimport { type LangfuseOptions } from \"./types\";\n\n// Required when users pass these as typed arguments\nexport {\n  type LangfuseTraceClient,\n  type LangfuseSpanClient,\n  type LangfuseEventClient,\n  type LangfuseGenerationClient,\n} from \"../../langfuse-core/src\";\n\nexport class Langfuse extends LangfuseCore {\n  private _storage: LangfuseStorage;\n  private _storageCache: any;\n  private _storageKey: string;\n\n  constructor(params: { publicKey: string; secretKey: string } & LangfuseOptions) {\n    super(params);\n    const { publicKey, secretKey, ...options } = params;\n    if (typeof window !== \"undefined\" && \"Deno\" in window === false) {\n      this._storageKey = options?.persistence_name ? `lf_${options.persistence_name}` : `lf_${publicKey}_langfuse`;\n      this._storage = getStorage(options?.persistence || \"localStorage\", window);\n    } else {\n      this._storageKey = `lf_${publicKey}_langfuse`;\n      this._storage = getStorage(\"memory\", undefined);\n    }\n  }\n\n  getPersistedProperty<T>(key: LangfusePersistedProperty): T | undefined {\n    if (!this._storageCache) {\n      this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n    }\n\n    return this._storageCache[key];\n  }\n\n  setPersistedProperty<T>(key: LangfusePersistedProperty, value: T | null): void {\n    if (!this._storageCache) {\n      this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n    }\n\n    if (value === null) {\n      delete this._storageCache[key];\n    } else {\n      this._storageCache[key] = value;\n    }\n\n    this._storage.setItem(this._storageKey, JSON.stringify(this._storageCache));\n  }\n\n  fetch(url: string, options: LangfuseFetchOptions): Promise<LangfuseFetchResponse> {\n    return fetch(url, options);\n  }\n\n  getLibraryId(): string {\n    return \"langfuse\";\n  }\n\n  getLibraryVersion(): string {\n    return version;\n  }\n\n  getCustomUserAgent(): void {\n    return;\n  }\n}\n\nexport class LangfuseWeb extends LangfuseWebStateless {\n  private _storage: LangfuseStorage;\n  private _storageCache: any;\n  private _storageKey: string;\n\n  constructor(params: { publicKey: string } & LangfuseOptions) {\n    super(params);\n\n    const { publicKey, ...options } = params;\n    if (typeof window !== \"undefined\") {\n      this._storageKey = options?.persistence_name ? `lf_${options.persistence_name}` : `lf_${publicKey}_langfuse`;\n      this._storage = getStorage(options?.persistence || \"localStorage\", window);\n    } else {\n      this._storageKey = `lf_${publicKey}_langfuse`;\n      this._storage = getStorage(\"memory\", undefined);\n    }\n  }\n\n  getPersistedProperty<T>(key: LangfusePersistedProperty): T | undefined {\n    if (!this._storageCache) {\n      this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n    }\n\n    return this._storageCache[key];\n  }\n\n  setPersistedProperty<T>(key: LangfusePersistedProperty, value: T | null): void {\n    if (!this._storageCache) {\n      this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n    }\n\n    if (value === null) {\n      delete this._storageCache[key];\n    } else {\n      this._storageCache[key] = value;\n    }\n\n    this._storage.setItem(this._storageKey, JSON.stringify(this._storageCache));\n  }\n\n  fetch(url: string, options: LangfuseFetchOptions): Promise<LangfuseFetchResponse> {\n    return fetch(url, options);\n  }\n\n  getLibraryId(): string {\n    return \"langfuse-frontend\";\n  }\n\n  getLibraryVersion(): string {\n    return version;\n  }\n\n  getCustomUserAgent(): void {\n    return;\n  }\n}\n"],"names":["cookieStore","getItem","key","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","decodeURIComponent","err","setItem","value","cdomain","expires","secure","new_cookie_val","encodeURIComponent","removeItem","name","clear","getAllKeys","keys","push","createStorageLike","store","localStorage","checkStoreIsSupported","storage","window","val","localStore","undefined","sessionStore","createMemoryStorage","_cache","getStorage","type","_localStore","_sessionStore","sessionStorage","Langfuse","_super","__extends","params","_this","call","publicKey","secretKey","options","__rest","_storageKey","persistence_name","concat","_storage","persistence","prototype","getPersistedProperty","_storageCache","JSON","parse","setPersistedProperty","stringify","fetch","url","getLibraryId","getLibraryVersion","version","getCustomUserAgent","LangfuseCore","LangfuseWeb","LangfuseWebStateless"],"mappings":"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"}