export function getRuntimeEnvironment(): Promise<any>;
/**
 * Retrieves the LangChain-specific environment variables from the current runtime environment.
 * Sensitive keys (containing the word "key") have their values redacted for security.
 *
 * @returns {Record<string, string>}
 *  - A record of LangChain-specific environment variables.
 */
export function getLangChainEnvVars(): Record<string, string>;
/**
 * Retrieves the environment variables from the current runtime environment.
 *
 * This function is designed to operate in a variety of JS environments,
 * including Node.js, Deno, browsers, etc.
 *
 * @returns {Record<string, string> | undefined}
 *  - A record of environment variables if available.
 *  - `undefined` if the environment does not support or allows access to environment variables.
 */
export function getEnvironmentVariables(): Record<string, string> | undefined;
export function getEnvironmentVariable(name: any): string | undefined;
export function setEnvironmentVariable(name: any, value: any): void;
/**
 * Get the Git commit SHA from common environment variables
 * used by different CI/CD platforms.
 * @returns {string | undefined} The Git commit SHA or undefined if not found.
 */
export function getShas(): string | undefined;
export function isBrowser(): boolean;
export function isWebWorker(): boolean;
export function isJsDom(): boolean;
export function isDeno(): boolean;
export function isNode(): boolean;
export function getEnv(): string;
