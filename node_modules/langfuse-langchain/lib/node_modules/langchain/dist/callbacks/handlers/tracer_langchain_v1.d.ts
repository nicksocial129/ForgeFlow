export class LangChainTracerV1 extends BaseTracer {
    constructor();
    newSession(sessionName: any): Promise<any>;
    session: any;
    loadSession(sessionName: any): Promise<any>;
    loadDefaultSession(): Promise<any>;
    convertV2RunToRun(run: any): Promise<{
        uuid: any;
        start_time: any;
        end_time: any;
        execution_order: any;
        child_execution_order: any;
        serialized: any;
        type: any;
        session_id: any;
        prompts: any;
        response: any;
    } | {
        uuid: any;
        start_time: any;
        end_time: any;
        execution_order: any;
        child_execution_order: any;
        serialized: any;
        type: any;
        session_id: any;
        inputs: any;
        outputs: any;
        child_llm_runs: any[];
        child_chain_runs: any[];
        child_tool_runs: any[];
    } | {
        uuid: any;
        start_time: any;
        end_time: any;
        execution_order: any;
        child_execution_order: any;
        serialized: any;
        type: any;
        session_id: any;
        tool_input: any;
        output: any;
        action: string;
        child_llm_runs: any[];
        child_chain_runs: any[];
        child_tool_runs: any[];
    }>;
    persistRun(run: any): Promise<void>;
    persistSession(sessionCreate: any): Promise<any>;
    _handleSessionResponse(endpoint: any): Promise<any>;
}
import { BaseTracer } from "./tracer.js";
