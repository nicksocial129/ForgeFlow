{"version":3,"file":"index.mjs","sources":["../src/callback.ts"],"sourcesContent":["import { BaseCallbackHandler } from \"langchain/callbacks\";\nimport type { Serialized } from \"langchain/load/serializable\";\nimport {\n  AIMessage,\n  type AgentAction,\n  type AgentFinish,\n  type BaseMessage,\n  type ChainValues,\n  type LLMResult,\n} from \"langchain/schema\";\nimport { type Document } from \"langchain/document\";\n\nimport { Langfuse, type LangfuseOptions } from \"langfuse\";\nimport type { LangfuseTraceClient, LangfuseSpanClient } from \"langfuse-core\";\n\ntype RootParams = {\n  root: LangfuseTraceClient | LangfuseSpanClient;\n};\n\ntype KeyParams = {\n  publicKey: string;\n  secretKey: string;\n} & LangfuseOptions;\n\ntype ConstructorParams = (RootParams | KeyParams) & {\n  userId?: string; // added to all traces\n  version?: string; // added to all traces and observations\n};\n\nexport class CallbackHandler extends BaseCallbackHandler {\n  name = \"CallbackHandler\";\n  langfuse: Langfuse;\n  traceId?: string;\n  observationId?: string;\n  rootObservationId?: string;\n  topLevelObservationId?: string;\n  userId?: string;\n  version?: string;\n\n  constructor(params: ConstructorParams) {\n    super();\n    if (\"root\" in params) {\n      this.langfuse = params.root.client as Langfuse;\n      this.rootObservationId = params.root.observationId ?? undefined;\n      this.traceId = params.root.traceId;\n    } else {\n      this.langfuse = new Langfuse({ ...params, persistence: \"memory\" });\n    }\n    this.userId = params.userId;\n    this.version = params.version;\n  }\n\n  async flushAsync(): Promise<any> {\n    return this.langfuse.flushAsync();\n  }\n\n  async shutdownAsync(): Promise<any> {\n    return this.langfuse.shutdownAsync();\n  }\n\n  debug(enabled: boolean = true): void {\n    this.langfuse.debug(enabled);\n  }\n\n  async handleNewToken(token: string, runId: string): Promise<void> {\n    console.log(\"New token:\", token, \"with ID:\", runId);\n  }\n\n  getTraceId(): string | undefined {\n    return this.traceId;\n  }\n\n  getTraceUrl(): string | undefined {\n    return this.traceId ? `${this.langfuse.baseUrl}/trace/${this.traceId}` : undefined;\n  }\n\n  getLangchainRunId(): string | undefined {\n    return this.topLevelObservationId;\n  }\n\n  async handleRetrieverError(err: any, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      console.log(\"Retriever error:\", err, runId);\n      this.langfuse._updateSpan({\n        spanId: runId,\n        traceId: this.traceId,\n        level: \"ERROR\",\n        statusMessage: err.toString(),\n        endTime: new Date(),\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleChainStart(\n    chain: Serialized,\n    inputs: ChainValues,\n    runId: string,\n    parentRunId?: string | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined\n  ): Promise<void> {\n    try {\n      console.log(\"Chain start with Id:\", runId);\n      this.generateTrace(chain, runId, parentRunId, tags, metadata);\n      this.langfuse.span({\n        id: runId,\n        traceId: this.traceId,\n        parentObservationId: parentRunId ?? this.rootObservationId,\n        name: chain.id.at(-1)?.toString(),\n        metadata: this.joinTagsAndMetaData(tags, metadata),\n        input: inputs,\n        startTime: new Date(),\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleAgentAction(action: AgentAction, runId?: string, parentRunId?: string): Promise<void> {\n    try {\n      console.log(\"Agent action:\", runId);\n      this.langfuse.span({\n        id: runId,\n        parentObservationId: parentRunId,\n        traceId: this.traceId,\n        endTime: new Date(),\n        input: action,\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleAgentEnd?(action: AgentFinish, runId: string, parentRunId?: string): Promise<void> {\n    try {\n      console.log(\"Agent finish:\", runId);\n      this.langfuse._updateSpan({\n        spanId: runId,\n        traceId: this.traceId,\n        endTime: new Date(),\n        output: action,\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleChainError(err: any, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      console.log(\"Chain error:\", err, runId);\n      this.langfuse._updateSpan({\n        spanId: runId,\n        traceId: this.traceId,\n        level: \"ERROR\",\n        statusMessage: err.toString(),\n        endTime: new Date(),\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  generateTrace(\n    serialized: Serialized,\n    runId: string,\n    parentRunId: string | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined\n  ): void {\n    if (!this.traceId) {\n      this.langfuse.trace({\n        id: runId,\n        name: serialized.id.at(-1)?.toString(),\n        metadata: this.joinTagsAndMetaData(tags, metadata),\n        userId: this.userId,\n        version: this.version,\n      });\n      this.traceId = runId;\n    }\n    this.topLevelObservationId = parentRunId ? this.topLevelObservationId : runId;\n  }\n\n  async handleGenerationStart(\n    llm: Serialized,\n    messages: BaseMessage[][] | string[],\n    runId: string,\n    parentRunId?: string | undefined,\n    extraParams?: Record<string, unknown> | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined\n  ): Promise<void> {\n    console.log(\"Generation start:\", runId);\n    this.generateTrace(llm, runId, parentRunId, tags, metadata);\n\n    const modelParameters: Record<string, any> = {};\n    const invocationParams = extraParams?.[\"invocation_params\"];\n\n    for (const [key, value] of Object.entries({\n      temperature: (invocationParams as any)?.temperature,\n      max_tokens: (invocationParams as any)?.max_tokens,\n      top_p: (invocationParams as any)?.top_p,\n      frequency_penalty: (invocationParams as any)?.frequency_penalty,\n      presence_penalty: (invocationParams as any)?.presence_penalty,\n      request_timeout: (invocationParams as any)?.request_timeout,\n    })) {\n      if (value !== undefined && value !== null) {\n        modelParameters[key] = value;\n      }\n    }\n\n    interface InvocationParams {\n      _type?: string;\n      model?: string;\n      model_name?: string;\n      repo_id?: string;\n    }\n\n    let extractedModelName: string | undefined;\n    if (extraParams) {\n      const params = extraParams.invocation_params as InvocationParams;\n      extractedModelName = params.model;\n    }\n\n    this.langfuse.generation({\n      id: runId,\n      traceId: this.traceId,\n      name: llm.id.at(-1)?.toString(),\n      startTime: new Date(),\n      metadata: this.joinTagsAndMetaData(tags, metadata),\n      parentObservationId: parentRunId ?? this.rootObservationId,\n      prompt: messages,\n      model: extractedModelName,\n      modelParameters: modelParameters,\n      version: this.version,\n    });\n  }\n\n  async handleChatModelStart(\n    llm: Serialized,\n    messages: BaseMessage[][],\n    runId: string,\n    parentRunId?: string | undefined,\n    extraParams?: Record<string, unknown> | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined\n  ): Promise<void> {\n    try {\n      console.log(\"ChatModel start:\", runId);\n      this.handleGenerationStart(llm, messages, runId, parentRunId, extraParams, tags, metadata);\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleChainEnd(outputs: ChainValues, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      console.log(\"Chain end:\", runId, parentRunId);\n      this.langfuse._updateSpan({\n        spanId: runId,\n        traceId: this.traceId,\n        output: outputs,\n        endTime: new Date(),\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleLLMStart(\n    llm: Serialized,\n    prompts: string[],\n    runId: string,\n    parentRunId?: string | undefined,\n    extraParams?: Record<string, unknown> | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined\n  ): Promise<void> {\n    try {\n      console.log(\"LLM start:\", runId);\n      this.handleGenerationStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata);\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleToolStart(\n    tool: Serialized,\n    input: string,\n    runId: string,\n    parentRunId?: string | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined\n  ): Promise<void> {\n    try {\n      console.log(\"Tool start:\", runId);\n\n      this.langfuse.span({\n        id: runId,\n        parentObservationId: parentRunId,\n        traceId: this.traceId,\n        name: tool.id.at(-1)?.toString(),\n        input: input,\n        metadata: this.joinTagsAndMetaData(tags, metadata),\n        startTime: new Date(),\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleRetrieverStart(\n    retriever: Serialized,\n    query: string,\n    runId: string,\n    parentRunId?: string | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined\n  ): Promise<void> {\n    try {\n      console.log(\"Retriever start:\", runId);\n      this.langfuse.span({\n        id: runId,\n        parentObservationId: parentRunId,\n        traceId: this.traceId,\n        name: retriever.id.at(-1)?.toString(),\n        input: query,\n        metadata: this.joinTagsAndMetaData(tags, metadata),\n        startTime: new Date(),\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleRetrieverEnd(\n    documents: Document<Record<string, any>>[],\n    runId: string,\n    parentRunId?: string | undefined\n  ): Promise<void> {\n    try {\n      console.log(\"Retriever end:\", runId);\n      this.langfuse._updateSpan({\n        spanId: runId,\n        traceId: this.traceId,\n        output: documents,\n        endTime: new Date(),\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleToolEnd(output: string, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      console.log(\"Tool end:\", runId);\n      this.langfuse._updateSpan({\n        spanId: runId,\n        traceId: this.traceId,\n        output: output,\n        endTime: new Date(),\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleToolError(err: any, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      console.log(\"Tool error:\", err, runId);\n      this.langfuse._updateSpan({\n        spanId: runId,\n        traceId: this.traceId,\n        level: \"ERROR\",\n        statusMessage: err.toString(),\n        endTime: new Date(),\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleLLMEnd(output: LLMResult, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      console.log(\"LLM end:\", runId, parentRunId);\n      const lastResponse =\n        output.generations[output.generations.length - 1][output.generations[output.generations.length - 1].length - 1];\n\n      const llmUsage = output.llmOutput?.[\"tokenUsage\"];\n\n      this.langfuse._updateGeneration({\n        generationId: runId,\n        traceId: this.traceId,\n        completion:\n          !lastResponse.text &&\n          \"message\" in lastResponse &&\n          lastResponse[\"message\"] instanceof AIMessage &&\n          lastResponse[\"message\"].additional_kwargs\n            ? lastResponse[\"message\"].additional_kwargs\n            : lastResponse.text,\n        endTime: new Date(),\n        usage: llmUsage,\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  async handleLLMError(err: any, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      console.log(\"LLM error:\", err, runId);\n      this.langfuse._updateGeneration({\n        generationId: runId,\n        traceId: this.traceId,\n        level: \"ERROR\",\n        statusMessage: err.toString(),\n        endTime: new Date(),\n        version: this.version,\n      });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  joinTagsAndMetaData(\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined\n  ): Record<string, unknown> {\n    if (tags) {\n      const finalDict = { tags: tags };\n      if (metadata) {\n        return { ...finalDict, ...metadata };\n      }\n    }\n    return metadata ?? {};\n  }\n}\n"],"names":["CallbackHandler","BaseCallbackHandler","constructor","params","name","langfuse","root","client","rootObservationId","observationId","undefined","traceId","Langfuse","persistence","userId","version","flushAsync","shutdownAsync","debug","enabled","handleNewToken","token","runId","console","log","getTraceId","getTraceUrl","baseUrl","getLangchainRunId","topLevelObservationId","handleRetrieverError","err","parentRunId","_updateSpan","spanId","level","statusMessage","toString","endTime","Date","e","handleChainStart","chain","inputs","tags","metadata","generateTrace","span","id","parentObservationId","at","joinTagsAndMetaData","input","startTime","handleAgentAction","action","handleAgentEnd","output","handleChainError","serialized","trace","handleGenerationStart","llm","messages","extraParams","modelParameters","invocationParams","key","value","Object","entries","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","request_timeout","extractedModelName","invocation_params","model","generation","prompt","handleChatModelStart","handleChainEnd","outputs","handleLLMStart","prompts","handleToolStart","tool","handleRetrieverStart","retriever","query","handleRetrieverEnd","documents","handleToolEnd","handleToolError","handleLLMEnd","lastResponse","generations","length","llmUsage","llmOutput","_updateGeneration","generationId","completion","text","AIMessage","additional_kwargs","usage","handleLLMError","finalDict"],"mappings":"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"}